// Generated by llvm2cpp - DO NOT MODIFY!

#include <llvm/Pass.h>
#include <llvm/ADT/SmallVector.h>
#include <llvm/Analysis/Verifier.h>
#include <llvm/IR/BasicBlock.h>
#include <llvm/IR/CallingConv.h>
#include <llvm/IR/Constants.h>
#include <llvm/IR/DerivedTypes.h>
#include <llvm/IR/Function.h>
#include <llvm/IR/GlobalVariable.h>
#include <llvm/IR/IRPrintingPasses.h>
#include <llvm/IR/InlineAsm.h>
#include <llvm/IR/Instructions.h>
#include <llvm/IR/LLVMContext.h>
#include <llvm/IR/LegacyPassManager.h>
#include <llvm/IR/Module.h>
#include <llvm/Support/FormattedStream.h>
#include <llvm/Support/MathExtras.h>
#include <algorithm>
using namespace llvm;

Module* makeLLVMModule();

int main(int argc, char**argv) {
  Module* Mod = makeLLVMModule();
  verifyModule(*Mod, PrintMessageAction);
  PassManager PM;
  PM.add(createPrintModulePass(&outs()));
  PM.run(*Mod);
  return 0;
}


Module* makeLLVMModule() {
 // Module Construction
 Module* mod = new Module("main.ll", getGlobalContext());
 mod->setDataLayout("");
 mod->setTargetTriple("x86_64-unknown-linux-gnu");
 
 // Type Definitions
 StructType *StructTy_class_std__ios_base__Init = mod->getTypeByName("class.std::ios_base::Init");
 if (!StructTy_class_std__ios_base__Init) {
 StructTy_class_std__ios_base__Init = StructType::create(mod->getContext(), "class.std::ios_base::Init");
 }
 std::vector<Type*>StructTy_class_std__ios_base__Init_fields;
 StructTy_class_std__ios_base__Init_fields.push_back(IntegerType::get(mod->getContext(), 8));
 if (StructTy_class_std__ios_base__Init->isOpaque()) {
 StructTy_class_std__ios_base__Init->setBody(StructTy_class_std__ios_base__Init_fields, /*isPacked=*/false);
 }
 
 PointerType* PointerTy_0 = PointerType::get(StructTy_class_std__ios_base__Init, 0);
 
 PointerType* PointerTy_1 = PointerType::get(IntegerType::get(mod->getContext(), 8), 0);
 
 ArrayType* ArrayTy_2 = ArrayType::get(IntegerType::get(mod->getContext(), 8), 27);
 
 PointerType* PointerTy_3 = PointerType::get(ArrayTy_2, 0);
 
 ArrayType* ArrayTy_4 = ArrayType::get(IntegerType::get(mod->getContext(), 8), 8);
 
 PointerType* PointerTy_5 = PointerType::get(ArrayTy_4, 0);
 
 ArrayType* ArrayTy_6 = ArrayType::get(IntegerType::get(mod->getContext(), 8), 5);
 
 PointerType* PointerTy_7 = PointerType::get(ArrayTy_6, 0);
 
 ArrayType* ArrayTy_9 = ArrayType::get(IntegerType::get(mod->getContext(), 64), 0);
 
 PointerType* PointerTy_8 = PointerType::get(ArrayTy_9, 0);
 
 std::vector<Type*>StructTy_11_fields;
 StructTy_11_fields.push_back(IntegerType::get(mod->getContext(), 32));
 std::vector<Type*>FuncTy_13_args;
 FunctionType* FuncTy_13 = FunctionType::get(
  /*Result=*/Type::getVoidTy(mod->getContext()),
  /*Params=*/FuncTy_13_args,
  /*isVarArg=*/false);
 
 PointerType* PointerTy_12 = PointerType::get(FuncTy_13, 0);
 
 StructTy_11_fields.push_back(PointerTy_12);
 StructTy_11_fields.push_back(PointerTy_1);
 StructType *StructTy_11 = StructType::get(mod->getContext(), StructTy_11_fields, /*isPacked=*/false);
 
 ArrayType* ArrayTy_10 = ArrayType::get(StructTy_11, 1);
 
 PointerType* PointerTy_14 = PointerType::get(ArrayTy_10, 0);
 
 std::vector<Type*>FuncTy_15_args;
 FuncTy_15_args.push_back(PointerTy_0);
 FunctionType* FuncTy_15 = FunctionType::get(
  /*Result=*/Type::getVoidTy(mod->getContext()),
  /*Params=*/FuncTy_15_args,
  /*isVarArg=*/false);
 
 std::vector<Type*>FuncTy_16_args;
 std::vector<Type*>FuncTy_18_args;
 FuncTy_18_args.push_back(PointerTy_1);
 FunctionType* FuncTy_18 = FunctionType::get(
  /*Result=*/Type::getVoidTy(mod->getContext()),
  /*Params=*/FuncTy_18_args,
  /*isVarArg=*/false);
 
 PointerType* PointerTy_17 = PointerType::get(FuncTy_18, 0);
 
 FuncTy_16_args.push_back(PointerTy_17);
 FuncTy_16_args.push_back(PointerTy_1);
 FuncTy_16_args.push_back(PointerTy_1);
 FunctionType* FuncTy_16 = FunctionType::get(
  /*Result=*/IntegerType::get(mod->getContext(), 32),
  /*Params=*/FuncTy_16_args,
  /*isVarArg=*/false);
 
 StructType *StructTy_struct_timespec = mod->getTypeByName("struct.timespec");
 if (!StructTy_struct_timespec) {
 StructTy_struct_timespec = StructType::create(mod->getContext(), "struct.timespec");
 }
 std::vector<Type*>StructTy_struct_timespec_fields;
 StructTy_struct_timespec_fields.push_back(IntegerType::get(mod->getContext(), 64));
 StructTy_struct_timespec_fields.push_back(IntegerType::get(mod->getContext(), 64));
 if (StructTy_struct_timespec->isOpaque()) {
 StructTy_struct_timespec->setBody(StructTy_struct_timespec_fields, /*isPacked=*/false);
 }
 
 PointerType* PointerTy_19 = PointerType::get(StructTy_struct_timespec, 0);
 
 std::vector<Type*>FuncTy_21_args;
 FuncTy_21_args.push_back(IntegerType::get(mod->getContext(), 64));
 FuncTy_21_args.push_back(PointerTy_1);
 FunctionType* FuncTy_21 = FunctionType::get(
  /*Result=*/Type::getVoidTy(mod->getContext()),
  /*Params=*/FuncTy_21_args,
  /*isVarArg=*/false);
 
 PointerType* PointerTy_20 = PointerType::get(FuncTy_21, 0);
 
 PointerType* PointerTy_22 = PointerType::get(IntegerType::get(mod->getContext(), 64), 0);
 
 std::vector<Type*>FuncTy_24_args;
 FuncTy_24_args.push_back(PointerTy_19);
 FuncTy_24_args.push_back(PointerTy_19);
 FunctionType* FuncTy_24 = FunctionType::get(
  /*Result=*/IntegerType::get(mod->getContext(), 32),
  /*Params=*/FuncTy_24_args,
  /*isVarArg=*/false);
 
 PointerType* PointerTy_23 = PointerType::get(FuncTy_24, 0);
 
 std::vector<Type*>FuncTy_25_args;
 FuncTy_25_args.push_back(IntegerType::get(mod->getContext(), 32));
 PointerType* PointerTy_26 = PointerType::get(Type::getDoubleTy(mod->getContext()), 0);
 
 FuncTy_25_args.push_back(PointerTy_26);
 FuncTy_25_args.push_back(PointerTy_26);
 FunctionType* FuncTy_25 = FunctionType::get(
  /*Result=*/Type::getVoidTy(mod->getContext()),
  /*Params=*/FuncTy_25_args,
  /*isVarArg=*/false);
 
 StructType *StructTy_class_std__allocator = mod->getTypeByName("class.std::allocator");
 if (!StructTy_class_std__allocator) {
 StructTy_class_std__allocator = StructType::create(mod->getContext(), "class.std::allocator");
 }
 std::vector<Type*>StructTy_class_std__allocator_fields;
 StructTy_class_std__allocator_fields.push_back(IntegerType::get(mod->getContext(), 8));
 if (StructTy_class_std__allocator->isOpaque()) {
 StructTy_class_std__allocator->setBody(StructTy_class_std__allocator_fields, /*isPacked=*/false);
 }
 
 PointerType* PointerTy_27 = PointerType::get(StructTy_class_std__allocator, 0);
 
 StructType *StructTy_class_std__basic_string = mod->getTypeByName("class.std::basic_string");
 if (!StructTy_class_std__basic_string) {
 StructTy_class_std__basic_string = StructType::create(mod->getContext(), "class.std::basic_string");
 }
 std::vector<Type*>StructTy_class_std__basic_string_fields;
 StructType *StructTy_struct_std__basic_string_char__std__char_traits_char___std__allocator_char______Alloc_hider = mod->getTypeByName("struct.std::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Alloc_hider");
 if (!StructTy_struct_std__basic_string_char__std__char_traits_char___std__allocator_char______Alloc_hider) {
 StructTy_struct_std__basic_string_char__std__char_traits_char___std__allocator_char______Alloc_hider = StructType::create(mod->getContext(), "struct.std::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Alloc_hider");
 }
 std::vector<Type*>StructTy_struct_std__basic_string_char__std__char_traits_char___std__allocator_char______Alloc_hider_fields;
 StructTy_struct_std__basic_string_char__std__char_traits_char___std__allocator_char______Alloc_hider_fields.push_back(PointerTy_1);
 if (StructTy_struct_std__basic_string_char__std__char_traits_char___std__allocator_char______Alloc_hider->isOpaque()) {
 StructTy_struct_std__basic_string_char__std__char_traits_char___std__allocator_char______Alloc_hider->setBody(StructTy_struct_std__basic_string_char__std__char_traits_char___std__allocator_char______Alloc_hider_fields, /*isPacked=*/false);
 }
 
 StructTy_class_std__basic_string_fields.push_back(StructTy_struct_std__basic_string_char__std__char_traits_char___std__allocator_char______Alloc_hider);
 if (StructTy_class_std__basic_string->isOpaque()) {
 StructTy_class_std__basic_string->setBody(StructTy_class_std__basic_string_fields, /*isPacked=*/false);
 }
 
 PointerType* PointerTy_28 = PointerType::get(StructTy_class_std__basic_string, 0);
 
 std::vector<Type*>FuncTy_30_args;
 FuncTy_30_args.push_back(PointerTy_28);
 FuncTy_30_args.push_back(PointerTy_1);
 FuncTy_30_args.push_back(PointerTy_27);
 FunctionType* FuncTy_30 = FunctionType::get(
  /*Result=*/Type::getVoidTy(mod->getContext()),
  /*Params=*/FuncTy_30_args,
  /*isVarArg=*/false);
 
 PointerType* PointerTy_29 = PointerType::get(FuncTy_30, 0);
 
 std::vector<Type*>FuncTy_32_args;
 FuncTy_32_args.push_back(PointerTy_28);
 FuncTy_32_args.push_back(PointerTy_28);
 FunctionType* FuncTy_32 = FunctionType::get(
  /*Result=*/Type::getVoidTy(mod->getContext()),
  /*Params=*/FuncTy_32_args,
  /*isVarArg=*/false);
 
 PointerType* PointerTy_31 = PointerType::get(FuncTy_32, 0);
 
 PointerType* PointerTy_33 = PointerType::get(PointerTy_1, 0);
 
 StructType *StructTy_struct_std__basic_string_char__std__char_traits_char___std__allocator_char______Rep = mod->getTypeByName("struct.std::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Rep");
 if (!StructTy_struct_std__basic_string_char__std__char_traits_char___std__allocator_char______Rep) {
 StructTy_struct_std__basic_string_char__std__char_traits_char___std__allocator_char______Rep = StructType::create(mod->getContext(), "struct.std::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Rep");
 }
 std::vector<Type*>StructTy_struct_std__basic_string_char__std__char_traits_char___std__allocator_char______Rep_fields;
 StructType *StructTy_struct_std__basic_string_char__std__char_traits_char___std__allocator_char______Rep_base = mod->getTypeByName("struct.std::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Rep_base");
 if (!StructTy_struct_std__basic_string_char__std__char_traits_char___std__allocator_char______Rep_base) {
 StructTy_struct_std__basic_string_char__std__char_traits_char___std__allocator_char______Rep_base = StructType::create(mod->getContext(), "struct.std::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Rep_base");
 }
 std::vector<Type*>StructTy_struct_std__basic_string_char__std__char_traits_char___std__allocator_char______Rep_base_fields;
 StructTy_struct_std__basic_string_char__std__char_traits_char___std__allocator_char______Rep_base_fields.push_back(IntegerType::get(mod->getContext(), 64));
 StructTy_struct_std__basic_string_char__std__char_traits_char___std__allocator_char______Rep_base_fields.push_back(IntegerType::get(mod->getContext(), 64));
 StructTy_struct_std__basic_string_char__std__char_traits_char___std__allocator_char______Rep_base_fields.push_back(IntegerType::get(mod->getContext(), 32));
 if (StructTy_struct_std__basic_string_char__std__char_traits_char___std__allocator_char______Rep_base->isOpaque()) {
 StructTy_struct_std__basic_string_char__std__char_traits_char___std__allocator_char______Rep_base->setBody(StructTy_struct_std__basic_string_char__std__char_traits_char___std__allocator_char______Rep_base_fields, /*isPacked=*/false);
 }
 
 StructTy_struct_std__basic_string_char__std__char_traits_char___std__allocator_char______Rep_fields.push_back(StructTy_struct_std__basic_string_char__std__char_traits_char___std__allocator_char______Rep_base);
 if (StructTy_struct_std__basic_string_char__std__char_traits_char___std__allocator_char______Rep->isOpaque()) {
 StructTy_struct_std__basic_string_char__std__char_traits_char___std__allocator_char______Rep->setBody(StructTy_struct_std__basic_string_char__std__char_traits_char___std__allocator_char______Rep_fields, /*isPacked=*/false);
 }
 
 PointerType* PointerTy_34 = PointerType::get(StructTy_struct_std__basic_string_char__std__char_traits_char___std__allocator_char______Rep, 0);
 
 std::vector<Type*>FuncTy_36_args;
 FuncTy_36_args.push_back(PointerTy_34);
 FuncTy_36_args.push_back(PointerTy_27);
 FunctionType* FuncTy_36 = FunctionType::get(
  /*Result=*/Type::getVoidTy(mod->getContext()),
  /*Params=*/FuncTy_36_args,
  /*isVarArg=*/false);
 
 PointerType* PointerTy_35 = PointerType::get(FuncTy_36, 0);
 
 std::vector<Type*>StructTy_37_fields;
 StructTy_37_fields.push_back(PointerTy_1);
 StructTy_37_fields.push_back(IntegerType::get(mod->getContext(), 32));
 StructType *StructTy_37 = StructType::get(mod->getContext(), StructTy_37_fields, /*isPacked=*/false);
 
 std::vector<Type*>FuncTy_38_args;
 FunctionType* FuncTy_38 = FunctionType::get(
  /*Result=*/IntegerType::get(mod->getContext(), 32),
  /*Params=*/FuncTy_38_args,
  /*isVarArg=*/true);
 
 std::vector<Type*>FuncTy_39_args;
 FuncTy_39_args.push_back(IntegerType::get(mod->getContext(), 32));
 FuncTy_39_args.push_back(PointerTy_33);
 FunctionType* FuncTy_39 = FunctionType::get(
  /*Result=*/IntegerType::get(mod->getContext(), 32),
  /*Params=*/FuncTy_39_args,
  /*isVarArg=*/false);
 
 PointerType* PointerTy_40 = PointerType::get(IntegerType::get(mod->getContext(), 32), 0);
 
 std::vector<Type*>FuncTy_42_args;
 FunctionType* FuncTy_42 = FunctionType::get(
  /*Result=*/PointerTy_40,
  /*Params=*/FuncTy_42_args,
  /*isVarArg=*/false);
 
 PointerType* PointerTy_41 = PointerType::get(FuncTy_42, 0);
 
 std::vector<Type*>FuncTy_44_args;
 FuncTy_44_args.push_back(PointerTy_1);
 FuncTy_44_args.push_back(PointerTy_33);
 FuncTy_44_args.push_back(IntegerType::get(mod->getContext(), 32));
 FunctionType* FuncTy_44 = FunctionType::get(
  /*Result=*/IntegerType::get(mod->getContext(), 64),
  /*Params=*/FuncTy_44_args,
  /*isVarArg=*/false);
 
 PointerType* PointerTy_43 = PointerType::get(FuncTy_44, 0);
 
 std::vector<Type*>FuncTy_46_args;
 FuncTy_46_args.push_back(IntegerType::get(mod->getContext(), 64));
 FunctionType* FuncTy_46 = FunctionType::get(
  /*Result=*/PointerTy_1,
  /*Params=*/FuncTy_46_args,
  /*isVarArg=*/false);
 
 PointerType* PointerTy_45 = PointerType::get(FuncTy_46, 0);
 
 PointerType* PointerTy_47 = PointerType::get(FuncTy_25, 0);
 
 std::vector<Type*>FuncTy_48_args;
 FuncTy_48_args.push_back(PointerTy_40);
 FuncTy_48_args.push_back(PointerTy_17);
 FunctionType* FuncTy_48 = FunctionType::get(
  /*Result=*/IntegerType::get(mod->getContext(), 32),
  /*Params=*/FuncTy_48_args,
  /*isVarArg=*/false);
 
 PointerType* PointerTy_49 = PointerType::get(FuncTy_15, 0);
 
 PointerType* PointerTy_50 = PointerType::get(FuncTy_16, 0);
 
 
 // Function Declarations
 
 Function* func__ZNSt8ios_base4InitC1Ev = mod->getFunction("_ZNSt8ios_base4InitC1Ev");
 if (!func__ZNSt8ios_base4InitC1Ev) {
 func__ZNSt8ios_base4InitC1Ev = Function::Create(
  /*Type=*/FuncTy_15,
  /*Linkage=*/GlobalValue::ExternalLinkage,
  /*Name=*/"_ZNSt8ios_base4InitC1Ev", mod); // (external, no body)
 func__ZNSt8ios_base4InitC1Ev->setCallingConv(CallingConv::C);
 }
 AttributeSet func__ZNSt8ios_base4InitC1Ev_PAL;
 {
  SmallVector<AttributeSet, 4> Attrs;
  AttributeSet PAS;
   {
    AttrBuilder B;
    B.addAttribute(Attribute::OptimizeForSize);
    PAS = AttributeSet::get(mod->getContext(), ~0U, B);
   }
  
  Attrs.push_back(PAS);
  func__ZNSt8ios_base4InitC1Ev_PAL = AttributeSet::get(mod->getContext(), Attrs);
  
 }
 func__ZNSt8ios_base4InitC1Ev->setAttributes(func__ZNSt8ios_base4InitC1Ev_PAL);
 
 Function* func__ZNSt8ios_base4InitD1Ev = mod->getFunction("_ZNSt8ios_base4InitD1Ev");
 if (!func__ZNSt8ios_base4InitD1Ev) {
 func__ZNSt8ios_base4InitD1Ev = Function::Create(
  /*Type=*/FuncTy_15,
  /*Linkage=*/GlobalValue::ExternalLinkage,
  /*Name=*/"_ZNSt8ios_base4InitD1Ev", mod); // (external, no body)
 func__ZNSt8ios_base4InitD1Ev->setCallingConv(CallingConv::C);
 }
 AttributeSet func__ZNSt8ios_base4InitD1Ev_PAL;
 {
  SmallVector<AttributeSet, 4> Attrs;
  AttributeSet PAS;
   {
    AttrBuilder B;
    B.addAttribute(Attribute::NoUnwind);
    B.addAttribute(Attribute::OptimizeForSize);
    PAS = AttributeSet::get(mod->getContext(), ~0U, B);
   }
  
  Attrs.push_back(PAS);
  func__ZNSt8ios_base4InitD1Ev_PAL = AttributeSet::get(mod->getContext(), Attrs);
  
 }
 func__ZNSt8ios_base4InitD1Ev->setAttributes(func__ZNSt8ios_base4InitD1Ev_PAL);
 
 Function* func___cxa_atexit = mod->getFunction("__cxa_atexit");
 if (!func___cxa_atexit) {
 func___cxa_atexit = Function::Create(
  /*Type=*/FuncTy_16,
  /*Linkage=*/GlobalValue::ExternalLinkage,
  /*Name=*/"__cxa_atexit", mod); // (external, no body)
 func___cxa_atexit->setCallingConv(CallingConv::C);
 }
 AttributeSet func___cxa_atexit_PAL;
 {
  SmallVector<AttributeSet, 4> Attrs;
  AttributeSet PAS;
   {
    AttrBuilder B;
    B.addAttribute(Attribute::NoUnwind);
    PAS = AttributeSet::get(mod->getContext(), ~0U, B);
   }
  
  Attrs.push_back(PAS);
  func___cxa_atexit_PAL = AttributeSet::get(mod->getContext(), Attrs);
  
 }
 func___cxa_atexit->setAttributes(func___cxa_atexit_PAL);
 
 Function* func__Z19doesNothingButSleepv = mod->getFunction("_Z19doesNothingButSleepv");
 if (!func__Z19doesNothingButSleepv) {
 func__Z19doesNothingButSleepv = Function::Create(
  /*Type=*/FuncTy_13,
  /*Linkage=*/GlobalValue::ExternalLinkage,
  /*Name=*/"_Z19doesNothingButSleepv", mod); 
 func__Z19doesNothingButSleepv->setCallingConv(CallingConv::C);
 }
 AttributeSet func__Z19doesNothingButSleepv_PAL;
 {
  SmallVector<AttributeSet, 4> Attrs;
  AttributeSet PAS;
   {
    AttrBuilder B;
    B.addAttribute(Attribute::OptimizeForSize);
    B.addAttribute(Attribute::UWTable);
    PAS = AttributeSet::get(mod->getContext(), ~0U, B);
   }
  
  Attrs.push_back(PAS);
  func__Z19doesNothingButSleepv_PAL = AttributeSet::get(mod->getContext(), Attrs);
  
 }
 func__Z19doesNothingButSleepv->setAttributes(func__Z19doesNothingButSleepv_PAL);
 
 Function* func__Z12testFunctioniPdS_ = mod->getFunction("_Z12testFunctioniPdS_");
 if (!func__Z12testFunctioniPdS_) {
 func__Z12testFunctioniPdS_ = Function::Create(
  /*Type=*/FuncTy_25,
  /*Linkage=*/GlobalValue::ExternalLinkage,
  /*Name=*/"_Z12testFunctioniPdS_", mod); 
 func__Z12testFunctioniPdS_->setCallingConv(CallingConv::C);
 }
 AttributeSet func__Z12testFunctioniPdS__PAL;
 {
  SmallVector<AttributeSet, 4> Attrs;
  AttributeSet PAS;
   {
    AttrBuilder B;
    B.addAttribute(Attribute::ReadOnly);
    B.addAttribute(Attribute::NoCapture);
    PAS = AttributeSet::get(mod->getContext(), 2U, B);
   }
  
  Attrs.push_back(PAS);
  {
   AttrBuilder B;
   B.addAttribute(Attribute::NoCapture);
   PAS = AttributeSet::get(mod->getContext(), 3U, B);
  }
 
 Attrs.push_back(PAS);
 {
  AttrBuilder B;
  B.addAttribute(Attribute::OptimizeForSize);
  B.addAttribute(Attribute::UWTable);
  PAS = AttributeSet::get(mod->getContext(), ~0U, B);
 }

Attrs.push_back(PAS);
func__Z12testFunctioniPdS__PAL = AttributeSet::get(mod->getContext(), Attrs);

}
func__Z12testFunctioniPdS_->setAttributes(func__Z12testFunctioniPdS__PAL);

Function* func_llvm_lifetime_start = mod->getFunction("llvm.lifetime.start");
if (!func_llvm_lifetime_start) {
func_llvm_lifetime_start = Function::Create(
 /*Type=*/FuncTy_21,
 /*Linkage=*/GlobalValue::ExternalLinkage,
 /*Name=*/"llvm.lifetime.start", mod); // (external, no body)
func_llvm_lifetime_start->setCallingConv(CallingConv::C);
}
AttributeSet func_llvm_lifetime_start_PAL;
{
 SmallVector<AttributeSet, 4> Attrs;
 AttributeSet PAS;
  {
   AttrBuilder B;
   B.addAttribute(Attribute::NoCapture);
   PAS = AttributeSet::get(mod->getContext(), 2U, B);
  }
 
 Attrs.push_back(PAS);
 {
  AttrBuilder B;
  B.addAttribute(Attribute::NoUnwind);
  PAS = AttributeSet::get(mod->getContext(), ~0U, B);
 }

Attrs.push_back(PAS);
func_llvm_lifetime_start_PAL = AttributeSet::get(mod->getContext(), Attrs);

}
func_llvm_lifetime_start->setAttributes(func_llvm_lifetime_start_PAL);

Function* func__ZNSsC1EPKcRKSaIcE = mod->getFunction("_ZNSsC1EPKcRKSaIcE");
if (!func__ZNSsC1EPKcRKSaIcE) {
func__ZNSsC1EPKcRKSaIcE = Function::Create(
 /*Type=*/FuncTy_30,
 /*Linkage=*/GlobalValue::ExternalLinkage,
 /*Name=*/"_ZNSsC1EPKcRKSaIcE", mod); // (external, no body)
func__ZNSsC1EPKcRKSaIcE->setCallingConv(CallingConv::C);
}
AttributeSet func__ZNSsC1EPKcRKSaIcE_PAL;
{
 SmallVector<AttributeSet, 4> Attrs;
 AttributeSet PAS;
  {
   AttrBuilder B;
   PAS = AttributeSet::get(mod->getContext(), 3U, B);
  }
 
 Attrs.push_back(PAS);
 {
  AttrBuilder B;
  B.addAttribute(Attribute::OptimizeForSize);
  PAS = AttributeSet::get(mod->getContext(), ~0U, B);
 }

Attrs.push_back(PAS);
func__ZNSsC1EPKcRKSaIcE_PAL = AttributeSet::get(mod->getContext(), Attrs);

}
func__ZNSsC1EPKcRKSaIcE->setAttributes(func__ZNSsC1EPKcRKSaIcE_PAL);

Function* func___gxx_personality_v0 = mod->getFunction("__gxx_personality_v0");
if (!func___gxx_personality_v0) {
func___gxx_personality_v0 = Function::Create(
 /*Type=*/FuncTy_38,
 /*Linkage=*/GlobalValue::ExternalLinkage,
 /*Name=*/"__gxx_personality_v0", mod); // (external, no body)
func___gxx_personality_v0->setCallingConv(CallingConv::C);
}
AttributeSet func___gxx_personality_v0_PAL;
func___gxx_personality_v0->setAttributes(func___gxx_personality_v0_PAL);

Function* func__Z40_metric_capture_long_double_timer_setup_SsSs = mod->getFunction("_Z40_metric_capture_long_double_timer_setup_SsSs");
if (!func__Z40_metric_capture_long_double_timer_setup_SsSs) {
func__Z40_metric_capture_long_double_timer_setup_SsSs = Function::Create(
 /*Type=*/FuncTy_32,
 /*Linkage=*/GlobalValue::ExternalLinkage,
 /*Name=*/"_Z40_metric_capture_long_double_timer_setup_SsSs", mod); // (external, no body)
func__Z40_metric_capture_long_double_timer_setup_SsSs->setCallingConv(CallingConv::C);
}
AttributeSet func__Z40_metric_capture_long_double_timer_setup_SsSs_PAL;
{
 SmallVector<AttributeSet, 4> Attrs;
 AttributeSet PAS;
  {
   AttrBuilder B;
   B.addAttribute(Attribute::OptimizeForSize);
   PAS = AttributeSet::get(mod->getContext(), ~0U, B);
  }
 
 Attrs.push_back(PAS);
 func__Z40_metric_capture_long_double_timer_setup_SsSs_PAL = AttributeSet::get(mod->getContext(), Attrs);
 
}
func__Z40_metric_capture_long_double_timer_setup_SsSs->setAttributes(func__Z40_metric_capture_long_double_timer_setup_SsSs_PAL);

Function* func__ZNSsC1ERKSs = mod->getFunction("_ZNSsC1ERKSs");
if (!func__ZNSsC1ERKSs) {
func__ZNSsC1ERKSs = Function::Create(
 /*Type=*/FuncTy_32,
 /*Linkage=*/GlobalValue::ExternalLinkage,
 /*Name=*/"_ZNSsC1ERKSs", mod); // (external, no body)
func__ZNSsC1ERKSs->setCallingConv(CallingConv::C);
}
AttributeSet func__ZNSsC1ERKSs_PAL;
{
 SmallVector<AttributeSet, 4> Attrs;
 AttributeSet PAS;
  {
   AttrBuilder B;
   PAS = AttributeSet::get(mod->getContext(), 2U, B);
  }
 
 Attrs.push_back(PAS);
 {
  AttrBuilder B;
  B.addAttribute(Attribute::OptimizeForSize);
  PAS = AttributeSet::get(mod->getContext(), ~0U, B);
 }

Attrs.push_back(PAS);
func__ZNSsC1ERKSs_PAL = AttributeSet::get(mod->getContext(), Attrs);

}
func__ZNSsC1ERKSs->setAttributes(func__ZNSsC1ERKSs_PAL);

Function* func_llvm_lifetime_end = mod->getFunction("llvm.lifetime.end");
if (!func_llvm_lifetime_end) {
func_llvm_lifetime_end = Function::Create(
 /*Type=*/FuncTy_21,
 /*Linkage=*/GlobalValue::ExternalLinkage,
 /*Name=*/"llvm.lifetime.end", mod); // (external, no body)
func_llvm_lifetime_end->setCallingConv(CallingConv::C);
}
AttributeSet func_llvm_lifetime_end_PAL;
{
 SmallVector<AttributeSet, 4> Attrs;
 AttributeSet PAS;
  {
   AttrBuilder B;
   B.addAttribute(Attribute::NoCapture);
   PAS = AttributeSet::get(mod->getContext(), 2U, B);
  }
 
 Attrs.push_back(PAS);
 {
  AttrBuilder B;
  B.addAttribute(Attribute::NoUnwind);
  PAS = AttributeSet::get(mod->getContext(), ~0U, B);
 }

Attrs.push_back(PAS);
func_llvm_lifetime_end_PAL = AttributeSet::get(mod->getContext(), Attrs);

}
func_llvm_lifetime_end->setAttributes(func_llvm_lifetime_end_PAL);

Function* func_main = mod->getFunction("main");
if (!func_main) {
func_main = Function::Create(
 /*Type=*/FuncTy_39,
 /*Linkage=*/GlobalValue::ExternalLinkage,
 /*Name=*/"main", mod); 
func_main->setCallingConv(CallingConv::C);
}
AttributeSet func_main_PAL;
{
 SmallVector<AttributeSet, 4> Attrs;
 AttributeSet PAS;
  {
   AttrBuilder B;
   B.addAttribute(Attribute::ReadOnly);
   B.addAttribute(Attribute::NoCapture);
   PAS = AttributeSet::get(mod->getContext(), 2U, B);
  }
 
 Attrs.push_back(PAS);
 {
  AttrBuilder B;
  B.addAttribute(Attribute::OptimizeForSize);
  B.addAttribute(Attribute::UWTable);
  PAS = AttributeSet::get(mod->getContext(), ~0U, B);
 }

Attrs.push_back(PAS);
func_main_PAL = AttributeSet::get(mod->getContext(), Attrs);

}
func_main->setAttributes(func_main_PAL);

Function* func__Znam = mod->getFunction("_Znam");
if (!func__Znam) {
func__Znam = Function::Create(
 /*Type=*/FuncTy_46,
 /*Linkage=*/GlobalValue::ExternalLinkage,
 /*Name=*/"_Znam", mod); // (external, no body)
func__Znam->setCallingConv(CallingConv::C);
}
AttributeSet func__Znam_PAL;
{
 SmallVector<AttributeSet, 4> Attrs;
 AttributeSet PAS;
  {
   AttrBuilder B;
   B.addAttribute(Attribute::NoAlias);
   PAS = AttributeSet::get(mod->getContext(), 0U, B);
  }
 
 Attrs.push_back(PAS);
 {
  AttrBuilder B;
  B.addAttribute(Attribute::OptimizeForSize);
  PAS = AttributeSet::get(mod->getContext(), ~0U, B);
 }

Attrs.push_back(PAS);
func__Znam_PAL = AttributeSet::get(mod->getContext(), Attrs);

}
func__Znam->setAttributes(func__Znam_PAL);

Function* func__ZdaPv = mod->getFunction("_ZdaPv");
if (!func__ZdaPv) {
func__ZdaPv = Function::Create(
 /*Type=*/FuncTy_18,
 /*Linkage=*/GlobalValue::ExternalLinkage,
 /*Name=*/"_ZdaPv", mod); // (external, no body)
func__ZdaPv->setCallingConv(CallingConv::C);
}
AttributeSet func__ZdaPv_PAL;
{
 SmallVector<AttributeSet, 4> Attrs;
 AttributeSet PAS;
  {
   AttrBuilder B;
   B.addAttribute(Attribute::NoUnwind);
   B.addAttribute(Attribute::OptimizeForSize);
   PAS = AttributeSet::get(mod->getContext(), ~0U, B);
  }
 
 Attrs.push_back(PAS);
 func__ZdaPv_PAL = AttributeSet::get(mod->getContext(), Attrs);
 
}
func__ZdaPv->setAttributes(func__ZdaPv_PAL);

Function* func_strtol = mod->getFunction("strtol");
if (!func_strtol) {
func_strtol = Function::Create(
 /*Type=*/FuncTy_44,
 /*Linkage=*/GlobalValue::ExternalLinkage,
 /*Name=*/"strtol", mod); // (external, no body)
func_strtol->setCallingConv(CallingConv::C);
}
AttributeSet func_strtol_PAL;
{
 SmallVector<AttributeSet, 4> Attrs;
 AttributeSet PAS;
  {
   AttrBuilder B;
   B.addAttribute(Attribute::ReadOnly);
   PAS = AttributeSet::get(mod->getContext(), 1U, B);
  }
 
 Attrs.push_back(PAS);
 {
  AttrBuilder B;
  B.addAttribute(Attribute::NoCapture);
  PAS = AttributeSet::get(mod->getContext(), 2U, B);
 }

Attrs.push_back(PAS);
{
 AttrBuilder B;
 B.addAttribute(Attribute::NoUnwind);
 B.addAttribute(Attribute::OptimizeForSize);
 PAS = AttributeSet::get(mod->getContext(), ~0U, B);
}

Attrs.push_back(PAS);
func_strtol_PAL = AttributeSet::get(mod->getContext(), Attrs);

}
func_strtol->setAttributes(func_strtol_PAL);

Function* func___errno_location = mod->getFunction("__errno_location");
if (!func___errno_location) {
func___errno_location = Function::Create(
 /*Type=*/FuncTy_42,
 /*Linkage=*/GlobalValue::ExternalLinkage,
 /*Name=*/"__errno_location", mod); // (external, no body)
func___errno_location->setCallingConv(CallingConv::C);
}
AttributeSet func___errno_location_PAL;
{
 SmallVector<AttributeSet, 4> Attrs;
 AttributeSet PAS;
  {
   AttrBuilder B;
   B.addAttribute(Attribute::NoUnwind);
   B.addAttribute(Attribute::ReadNone);
   B.addAttribute(Attribute::OptimizeForSize);
   PAS = AttributeSet::get(mod->getContext(), ~0U, B);
  }
 
 Attrs.push_back(PAS);
 func___errno_location_PAL = AttributeSet::get(mod->getContext(), Attrs);
 
}
func___errno_location->setAttributes(func___errno_location_PAL);

Function* func__ZSt24__throw_invalid_argumentPKc = mod->getFunction("_ZSt24__throw_invalid_argumentPKc");
if (!func__ZSt24__throw_invalid_argumentPKc) {
func__ZSt24__throw_invalid_argumentPKc = Function::Create(
 /*Type=*/FuncTy_18,
 /*Linkage=*/GlobalValue::ExternalLinkage,
 /*Name=*/"_ZSt24__throw_invalid_argumentPKc", mod); // (external, no body)
func__ZSt24__throw_invalid_argumentPKc->setCallingConv(CallingConv::C);
}
AttributeSet func__ZSt24__throw_invalid_argumentPKc_PAL;
{
 SmallVector<AttributeSet, 4> Attrs;
 AttributeSet PAS;
  {
   AttrBuilder B;
   B.addAttribute(Attribute::NoReturn);
   B.addAttribute(Attribute::OptimizeForSize);
   PAS = AttributeSet::get(mod->getContext(), ~0U, B);
  }
 
 Attrs.push_back(PAS);
 func__ZSt24__throw_invalid_argumentPKc_PAL = AttributeSet::get(mod->getContext(), Attrs);
 
}
func__ZSt24__throw_invalid_argumentPKc->setAttributes(func__ZSt24__throw_invalid_argumentPKc_PAL);

Function* func__ZSt20__throw_out_of_rangePKc = mod->getFunction("_ZSt20__throw_out_of_rangePKc");
if (!func__ZSt20__throw_out_of_rangePKc) {
func__ZSt20__throw_out_of_rangePKc = Function::Create(
 /*Type=*/FuncTy_18,
 /*Linkage=*/GlobalValue::ExternalLinkage,
 /*Name=*/"_ZSt20__throw_out_of_rangePKc", mod); // (external, no body)
func__ZSt20__throw_out_of_rangePKc->setCallingConv(CallingConv::C);
}
AttributeSet func__ZSt20__throw_out_of_rangePKc_PAL;
{
 SmallVector<AttributeSet, 4> Attrs;
 AttributeSet PAS;
  {
   AttrBuilder B;
   B.addAttribute(Attribute::NoReturn);
   B.addAttribute(Attribute::OptimizeForSize);
   PAS = AttributeSet::get(mod->getContext(), ~0U, B);
  }
 
 Attrs.push_back(PAS);
 func__ZSt20__throw_out_of_rangePKc_PAL = AttributeSet::get(mod->getContext(), Attrs);
 
}
func__ZSt20__throw_out_of_rangePKc->setAttributes(func__ZSt20__throw_out_of_rangePKc_PAL);

Function* func__ZNSs4_Rep10_M_disposeERKSaIcE = mod->getFunction("_ZNSs4_Rep10_M_disposeERKSaIcE");
if (!func__ZNSs4_Rep10_M_disposeERKSaIcE) {
func__ZNSs4_Rep10_M_disposeERKSaIcE = Function::Create(
 /*Type=*/FuncTy_36,
 /*Linkage=*/GlobalValue::AvailableExternallyLinkage ,
 /*Name=*/"_ZNSs4_Rep10_M_disposeERKSaIcE", mod); 
func__ZNSs4_Rep10_M_disposeERKSaIcE->setCallingConv(CallingConv::C);
func__ZNSs4_Rep10_M_disposeERKSaIcE->setAlignment(2);
}
AttributeSet func__ZNSs4_Rep10_M_disposeERKSaIcE_PAL;
{
 SmallVector<AttributeSet, 4> Attrs;
 AttributeSet PAS;
  {
   AttrBuilder B;
   PAS = AttributeSet::get(mod->getContext(), 2U, B);
  }
 
 Attrs.push_back(PAS);
 {
  AttrBuilder B;
  B.addAttribute(Attribute::NoUnwind);
  B.addAttribute(Attribute::OptimizeForSize);
  B.addAttribute(Attribute::UWTable);
  PAS = AttributeSet::get(mod->getContext(), ~0U, B);
 }

Attrs.push_back(PAS);
func__ZNSs4_Rep10_M_disposeERKSaIcE_PAL = AttributeSet::get(mod->getContext(), Attrs);

}
func__ZNSs4_Rep10_M_disposeERKSaIcE->setAttributes(func__ZNSs4_Rep10_M_disposeERKSaIcE_PAL);

Function* func__ZNSs4_Rep10_M_destroyERKSaIcE = mod->getFunction("_ZNSs4_Rep10_M_destroyERKSaIcE");
if (!func__ZNSs4_Rep10_M_destroyERKSaIcE) {
func__ZNSs4_Rep10_M_destroyERKSaIcE = Function::Create(
 /*Type=*/FuncTy_36,
 /*Linkage=*/GlobalValue::ExternalLinkage,
 /*Name=*/"_ZNSs4_Rep10_M_destroyERKSaIcE", mod); // (external, no body)
func__ZNSs4_Rep10_M_destroyERKSaIcE->setCallingConv(CallingConv::C);
}
AttributeSet func__ZNSs4_Rep10_M_destroyERKSaIcE_PAL;
{
 SmallVector<AttributeSet, 4> Attrs;
 AttributeSet PAS;
  {
   AttrBuilder B;
   PAS = AttributeSet::get(mod->getContext(), 2U, B);
  }
 
 Attrs.push_back(PAS);
 {
  AttrBuilder B;
  B.addAttribute(Attribute::NoUnwind);
  B.addAttribute(Attribute::OptimizeForSize);
  PAS = AttributeSet::get(mod->getContext(), ~0U, B);
 }

Attrs.push_back(PAS);
func__ZNSs4_Rep10_M_destroyERKSaIcE_PAL = AttributeSet::get(mod->getContext(), Attrs);

}
func__ZNSs4_Rep10_M_destroyERKSaIcE->setAttributes(func__ZNSs4_Rep10_M_destroyERKSaIcE_PAL);

Function* func___pthread_key_create = mod->getFunction("__pthread_key_create");
if (!func___pthread_key_create) {
func___pthread_key_create = Function::Create(
 /*Type=*/FuncTy_48,
 /*Linkage=*/GlobalValue::ExternalWeakLinkage,
 /*Name=*/"__pthread_key_create", mod); // (external, no body)
func___pthread_key_create->setCallingConv(CallingConv::C);
}
AttributeSet func___pthread_key_create_PAL;
{
 SmallVector<AttributeSet, 4> Attrs;
 AttributeSet PAS;
  {
   AttrBuilder B;
   B.addAttribute(Attribute::NoUnwind);
   B.addAttribute(Attribute::OptimizeForSize);
   PAS = AttributeSet::get(mod->getContext(), ~0U, B);
  }
 
 Attrs.push_back(PAS);
 func___pthread_key_create_PAL = AttributeSet::get(mod->getContext(), Attrs);
 
}
func___pthread_key_create->setAttributes(func___pthread_key_create_PAL);

Function* func_nanosleep = mod->getFunction("nanosleep");
if (!func_nanosleep) {
func_nanosleep = Function::Create(
 /*Type=*/FuncTy_24,
 /*Linkage=*/GlobalValue::ExternalLinkage,
 /*Name=*/"nanosleep", mod); // (external, no body)
func_nanosleep->setCallingConv(CallingConv::C);
}
AttributeSet func_nanosleep_PAL;
{
 SmallVector<AttributeSet, 4> Attrs;
 AttributeSet PAS;
  {
   AttrBuilder B;
   B.addAttribute(Attribute::OptimizeForSize);
   PAS = AttributeSet::get(mod->getContext(), ~0U, B);
  }
 
 Attrs.push_back(PAS);
 func_nanosleep_PAL = AttributeSet::get(mod->getContext(), Attrs);
 
}
func_nanosleep->setAttributes(func_nanosleep_PAL);

Function* func__GLOBAL__sub_I_main_cpp = mod->getFunction("_GLOBAL__sub_I_main.cpp");
if (!func__GLOBAL__sub_I_main_cpp) {
func__GLOBAL__sub_I_main_cpp = Function::Create(
 /*Type=*/FuncTy_13,
 /*Linkage=*/GlobalValue::InternalLinkage,
 /*Name=*/"_GLOBAL__sub_I_main.cpp", mod); 
func__GLOBAL__sub_I_main_cpp->setCallingConv(CallingConv::C);
func__GLOBAL__sub_I_main_cpp->setSection(".text.startup");
}
AttributeSet func__GLOBAL__sub_I_main_cpp_PAL;
{
 SmallVector<AttributeSet, 4> Attrs;
 AttributeSet PAS;
  {
   AttrBuilder B;
   B.addAttribute(Attribute::OptimizeForSize);
   PAS = AttributeSet::get(mod->getContext(), ~0U, B);
  }
 
 Attrs.push_back(PAS);
 func__GLOBAL__sub_I_main_cpp_PAL = AttributeSet::get(mod->getContext(), Attrs);
 
}
func__GLOBAL__sub_I_main_cpp->setAttributes(func__GLOBAL__sub_I_main_cpp_PAL);

// Global Variable Declarations


GlobalVariable* gvar_struct__ZStL8__ioinit = new GlobalVariable(/*Module=*/*mod, 
/*Type=*/StructTy_class_std__ios_base__Init,
/*isConstant=*/false,
/*Linkage=*/GlobalValue::InternalLinkage,
/*Initializer=*/0, // has initializer, specified below
/*Name=*/"_ZStL8__ioinit");
gvar_struct__ZStL8__ioinit->setAlignment(1);

GlobalVariable* gvar_int8___dso_handle = new GlobalVariable(/*Module=*/*mod, 
/*Type=*/IntegerType::get(mod->getContext(), 8),
/*isConstant=*/false,
/*Linkage=*/GlobalValue::ExternalLinkage,
/*Initializer=*/0, 
/*Name=*/"__dso_handle");

GlobalVariable* gvar_array__str = new GlobalVariable(/*Module=*/*mod, 
/*Type=*/ArrayTy_2,
/*isConstant=*/true,
/*Linkage=*/GlobalValue::PrivateLinkage,
/*Initializer=*/0, // has initializer, specified below
/*Name=*/".str");
gvar_array__str->setAlignment(1);

GlobalVariable* gvar_array__str1 = new GlobalVariable(/*Module=*/*mod, 
/*Type=*/ArrayTy_4,
/*isConstant=*/true,
/*Linkage=*/GlobalValue::PrivateLinkage,
/*Initializer=*/0, // has initializer, specified below
/*Name=*/".str1");
gvar_array__str1->setAlignment(1);

GlobalVariable* gvar_array__str2 = new GlobalVariable(/*Module=*/*mod, 
/*Type=*/ArrayTy_6,
/*isConstant=*/true,
/*Linkage=*/GlobalValue::PrivateLinkage,
/*Initializer=*/0, // has initializer, specified below
/*Name=*/".str2");
gvar_array__str2->setAlignment(1);

GlobalVariable* gvar_array__ZNSs4_Rep20_S_empty_rep_storageE = new GlobalVariable(/*Module=*/*mod, 
/*Type=*/ArrayTy_9,
/*isConstant=*/false,
/*Linkage=*/GlobalValue::ExternalLinkage,
/*Initializer=*/0, 
/*Name=*/"_ZNSs4_Rep20_S_empty_rep_storageE");
gvar_array__ZNSs4_Rep20_S_empty_rep_storageE->setAlignment(8);

GlobalVariable* gvar_array_llvm_global_ctors = new GlobalVariable(/*Module=*/*mod, 
/*Type=*/ArrayTy_10,
/*isConstant=*/false,
/*Linkage=*/GlobalValue::AppendingLinkage,
/*Initializer=*/0, // has initializer, specified below
/*Name=*/"llvm.global_ctors");

// Constant Definitions
ConstantAggregateZero* const_struct_51 = ConstantAggregateZero::get(StructTy_class_std__ios_base__Init);
Constant *const_array_52 = ConstantDataArray::getString(mod->getContext(), "abcdefghijklmnopkrstuvwxyz", true);
Constant *const_array_53 = ConstantDataArray::getString(mod->getContext(), "abcdefg", true);
Constant *const_array_54 = ConstantDataArray::getString(mod->getContext(), "stoi", true);
std::vector<Constant*> const_array_55_elems;
std::vector<Constant*> const_struct_56_fields;
ConstantInt* const_int32_57 = ConstantInt::get(mod->getContext(), APInt(32, StringRef("65535"), 10));
const_struct_56_fields.push_back(const_int32_57);
const_struct_56_fields.push_back(func__GLOBAL__sub_I_main_cpp);
ConstantPointerNull* const_ptr_58 = ConstantPointerNull::get(PointerTy_1);
const_struct_56_fields.push_back(const_ptr_58);
Constant* const_struct_56 = ConstantStruct::get(StructTy_11, const_struct_56_fields);
const_array_55_elems.push_back(const_struct_56);
Constant* const_array_55 = ConstantArray::get(ArrayTy_10, const_array_55_elems);
ConstantInt* const_int32_59 = ConstantInt::get(mod->getContext(), APInt(32, StringRef("1"), 10));
ConstantInt* const_int64_60 = ConstantInt::get(mod->getContext(), APInt(64, StringRef("16"), 10));
ConstantInt* const_int64_61 = ConstantInt::get(mod->getContext(), APInt(64, StringRef("0"), 10));
ConstantInt* const_int32_62 = ConstantInt::get(mod->getContext(), APInt(32, StringRef("0"), 10));
ConstantInt* const_int64_63 = ConstantInt::get(mod->getContext(), APInt(64, StringRef("1"), 10));
ConstantPointerNull* const_ptr_64 = ConstantPointerNull::get(PointerTy_19);
ConstantInt* const_int64_65 = ConstantInt::get(mod->getContext(), APInt(64, StringRef("8"), 10));
std::vector<Constant*> const_ptr_66_indices;
const_ptr_66_indices.push_back(const_int64_61);
const_ptr_66_indices.push_back(const_int64_61);
Constant* const_ptr_66 = ConstantExpr::getGetElementPtr(gvar_array__str, const_ptr_66_indices);
ConstantInt* const_int64_67 = ConstantInt::get(mod->getContext(), APInt(64, StringRef("-24"), 10));
Constant* const_ptr_68 = ConstantExpr::getCast(Instruction::BitCast, func___gxx_personality_v0, PointerTy_1);
ConstantFP* const_double_69 = ConstantFP::get(mod->getContext(), APFloat(0.000000e+00));
UndefValue* const_struct_70 = UndefValue::get(StructTy_37);
ConstantInt* const_int32_71 = ConstantInt::get(mod->getContext(), APInt(32, StringRef("10"), 10));
std::vector<Constant*> const_ptr_72_indices;
const_ptr_72_indices.push_back(const_int64_61);
const_ptr_72_indices.push_back(const_int64_61);
Constant* const_ptr_72 = ConstantExpr::getGetElementPtr(gvar_array__str2, const_ptr_72_indices);
ConstantInt* const_int32_73 = ConstantInt::get(mod->getContext(), APInt(32, StringRef("34"), 10));
ConstantInt* const_int64_74 = ConstantInt::get(mod->getContext(), APInt(64, StringRef("2147483648"), 10));
ConstantInt* const_int64_75 = ConstantInt::get(mod->getContext(), APInt(64, StringRef("4294967295"), 10));
ConstantInt* const_int64_76 = ConstantInt::get(mod->getContext(), APInt(64, StringRef("3"), 10));
ConstantInt* const_int64_77 = ConstantInt::get(mod->getContext(), APInt(64, StringRef("34359738360"), 10));
std::vector<Constant*> const_ptr_78_indices;
const_ptr_78_indices.push_back(const_int64_61);
const_ptr_78_indices.push_back(const_int64_61);
Constant* const_ptr_78 = ConstantExpr::getGetElementPtr(gvar_array__str1, const_ptr_78_indices);
Constant* const_ptr_79 = ConstantExpr::getCast(Instruction::BitCast, gvar_array__ZNSs4_Rep20_S_empty_rep_storageE, PointerTy_34);
ConstantInt* const_int32_80 = ConstantInt::get(mod->getContext(), APInt(32, StringRef("2"), 10));
Constant* const_ptr_82 = ConstantExpr::getCast(Instruction::BitCast, func___pthread_key_create, PointerTy_1);
Constant* const_int1_81 = ConstantExpr::getICmp(ICmpInst::ICMP_NEconst_ptr_82, const_ptr_58);
ConstantInt* const_int32_83 = ConstantInt::get(mod->getContext(), APInt(32, StringRef("-1"), 10));
Constant* const_ptr_84 = ConstantExpr::getCast(Instruction::BitCast, func__ZNSt8ios_base4InitD1Ev, PointerTy_17);
std::vector<Constant*> const_ptr_85_indices;
const_ptr_85_indices.push_back(const_int64_61);
const_ptr_85_indices.push_back(const_int32_62);
Constant* const_ptr_85 = ConstantExpr::getGetElementPtr(gvar_struct__ZStL8__ioinit, const_ptr_85_indices);

// Global Variable Definitions
gvar_struct__ZStL8__ioinit->setInitializer(const_struct_51);
gvar_array__str->setInitializer(const_array_52);
gvar_array__str1->setInitializer(const_array_53);
gvar_array__str2->setInitializer(const_array_54);
gvar_array_llvm_global_ctors->setInitializer(const_array_55);

// Function Definitions

// Function: _Z19doesNothingButSleepv (func__Z19doesNothingButSleepv)
{
 
 BasicBlock* label_entry = BasicBlock::Create(mod->getContext(), "entry",func__Z19doesNothingButSleepv,0);
 
 // Block entry (label_entry)
 AllocaInst* ptr___ts_i = new AllocaInst(StructTy_struct_timespec, "__ts.i", label_entry);
 ptr___ts_i->setAlignment(8);
 CastInst* ptr_86 = new BitCastInst(ptr___ts_i, PointerTy_1, "", label_entry);
 std::vector<Value*> void_87_params;
 void_87_params.push_back(const_int64_60);
 void_87_params.push_back(ptr_86);
 CallInst* void_87 = CallInst::Create(func_llvm_lifetime_start, void_87_params, "", label_entry);
 void_87->setCallingConv(CallingConv::C);
 void_87->setTailCall(false);
 AttributeSet void_87_PAL;
 {
  SmallVector<AttributeSet, 4> Attrs;
  AttributeSet PAS;
   {
    AttrBuilder B;
    B.addAttribute(Attribute::NoUnwind);
    PAS = AttributeSet::get(mod->getContext(), ~0U, B);
   }
  
  Attrs.push_back(PAS);
  void_87_PAL = AttributeSet::get(mod->getContext(), Attrs);
  
 }
 void_87->setAttributes(void_87_PAL);
 
 std::vector<Value*> ptr_tv_sec_i_indices;
 ptr_tv_sec_i_indices.push_back(const_int64_61);
 ptr_tv_sec_i_indices.push_back(const_int32_62);
 Instruction* ptr_tv_sec_i = GetElementPtrInst::Create(ptr___ts_i, ptr_tv_sec_i_indices, "tv_sec.i", label_entry);
 StoreInst* void_88 = new StoreInst(const_int64_63, ptr_tv_sec_i, false, label_entry);
 void_88->setAlignment(8);
 std::vector<Value*> ptr_tv_nsec_i_indices;
 ptr_tv_nsec_i_indices.push_back(const_int64_61);
 ptr_tv_nsec_i_indices.push_back(const_int32_59);
 Instruction* ptr_tv_nsec_i = GetElementPtrInst::Create(ptr___ts_i, ptr_tv_nsec_i_indices, "tv_nsec.i", label_entry);
 StoreInst* void_89 = new StoreInst(const_int64_61, ptr_tv_nsec_i, false, label_entry);
 void_89->setAlignment(8);
 std::vector<Value*> int32_call7_i_params;
 int32_call7_i_params.push_back(ptr___ts_i);
 int32_call7_i_params.push_back(const_ptr_64);
 CallInst* int32_call7_i = CallInst::Create(func_nanosleep, int32_call7_i_params, "call7.i", label_entry);
 int32_call7_i->setCallingConv(CallingConv::C);
 int32_call7_i->setTailCall(false);
 AttributeSet int32_call7_i_PAL;
 {
  SmallVector<AttributeSet, 4> Attrs;
  AttributeSet PAS;
   {
    AttrBuilder B;
    B.addAttribute(Attribute::OptimizeForSize);
    PAS = AttributeSet::get(mod->getContext(), ~0U, B);
   }
  
  Attrs.push_back(PAS);
  int32_call7_i_PAL = AttributeSet::get(mod->getContext(), Attrs);
  
 }
 int32_call7_i->setAttributes(int32_call7_i_PAL);
 
 std::vector<Value*> void_90_params;
 void_90_params.push_back(const_int64_60);
 void_90_params.push_back(ptr_86);
 CallInst* void_90 = CallInst::Create(func_llvm_lifetime_end, void_90_params, "", label_entry);
 void_90->setCallingConv(CallingConv::C);
 void_90->setTailCall(false);
 AttributeSet void_90_PAL;
 {
  SmallVector<AttributeSet, 4> Attrs;
  AttributeSet PAS;
   {
    AttrBuilder B;
    B.addAttribute(Attribute::NoUnwind);
    PAS = AttributeSet::get(mod->getContext(), ~0U, B);
   }
  
  Attrs.push_back(PAS);
  void_90_PAL = AttributeSet::get(mod->getContext(), Attrs);
  
 }
 void_90->setAttributes(void_90_PAL);
 
 ReturnInst::Create(mod->getContext(), label_entry);
 
}

// Function: _Z12testFunctioniPdS_ (func__Z12testFunctioniPdS_)
{
 Function::arg_iterator args = func__Z12testFunctioniPdS_->arg_begin();
 Value* int32_d = args++;
 int32_d->setName("d");
 Value* ptr_S = args++;
 ptr_S->setName("S");
 Value* ptr_D = args++;
 ptr_D->setName("D");
 
 BasicBlock* label_entry_92 = BasicBlock::Create(mod->getContext(), "entry",func__Z12testFunctioniPdS_,0);
 BasicBlock* label_invoke_cont = BasicBlock::Create(mod->getContext(), "invoke.cont",func__Z12testFunctioniPdS_,0);
 BasicBlock* label_invoke_cont2 = BasicBlock::Create(mod->getContext(), "invoke.cont2",func__Z12testFunctioniPdS_,0);
 BasicBlock* label_invoke_cont5 = BasicBlock::Create(mod->getContext(), "invoke.cont5",func__Z12testFunctioniPdS_,0);
 BasicBlock* label_invoke_cont7 = BasicBlock::Create(mod->getContext(), "invoke.cont7",func__Z12testFunctioniPdS_,0);
 BasicBlock* label_for_cond8_preheader_lr_ph = BasicBlock::Create(mod->getContext(), "for.cond8.preheader.lr.ph",func__Z12testFunctioniPdS_,0);
 BasicBlock* label_for_cond_loopexit = BasicBlock::Create(mod->getContext(), "for.cond.loopexit",func__Z12testFunctioniPdS_,0);
 BasicBlock* label_for_cond12_preheader_lr_ph = BasicBlock::Create(mod->getContext(), "for.cond12.preheader.lr.ph",func__Z12testFunctioniPdS_,0);
 BasicBlock* label_for_cond_cleanup = BasicBlock::Create(mod->getContext(), "for.cond.cleanup",func__Z12testFunctioniPdS_,0);
 BasicBlock* label_lpad = BasicBlock::Create(mod->getContext(), "lpad",func__Z12testFunctioniPdS_,0);
 BasicBlock* label_lpad1 = BasicBlock::Create(mod->getContext(), "lpad1",func__Z12testFunctioniPdS_,0);
 BasicBlock* label_lpad4 = BasicBlock::Create(mod->getContext(), "lpad4",func__Z12testFunctioniPdS_,0);
 BasicBlock* label_lpad6 = BasicBlock::Create(mod->getContext(), "lpad6",func__Z12testFunctioniPdS_,0);
 BasicBlock* label_ehcleanup = BasicBlock::Create(mod->getContext(), "ehcleanup",func__Z12testFunctioniPdS_,0);
 BasicBlock* label_for_cond12_preheader = BasicBlock::Create(mod->getContext(), "for.cond12.preheader",func__Z12testFunctioniPdS_,0);
 BasicBlock* label_for_cond_cleanup10 = BasicBlock::Create(mod->getContext(), "for.cond.cleanup10",func__Z12testFunctioniPdS_,0);
 BasicBlock* label_for_cond40_preheader_lr_ph = BasicBlock::Create(mod->getContext(), "for.cond40.preheader.lr.ph",func__Z12testFunctioniPdS_,0);
 BasicBlock* label_for_cond_cleanup14 = BasicBlock::Create(mod->getContext(), "for.cond.cleanup14",func__Z12testFunctioniPdS_,0);
 BasicBlock* label_for_body15 = BasicBlock::Create(mod->getContext(), "for.body15",func__Z12testFunctioniPdS_,0);
 BasicBlock* label_for_cond40_preheader = BasicBlock::Create(mod->getContext(), "for.cond40.preheader",func__Z12testFunctioniPdS_,0);
 BasicBlock* label_for_cond_cleanup42 = BasicBlock::Create(mod->getContext(), "for.cond.cleanup42",func__Z12testFunctioniPdS_,0);
 BasicBlock* label_for_body43 = BasicBlock::Create(mod->getContext(), "for.body43",func__Z12testFunctioniPdS_,0);
 BasicBlock* label_ehcleanup76 = BasicBlock::Create(mod->getContext(), "ehcleanup76",func__Z12testFunctioniPdS_,0);
 BasicBlock* label_eh_resume = BasicBlock::Create(mod->getContext(), "eh.resume",func__Z12testFunctioniPdS_,0);
 
 // Block entry (label_entry_92)
 AllocaInst* ptr_ref_tmp_i144 = new AllocaInst(StructTy_class_std__allocator, "ref.tmp.i144", label_entry_92);
 ptr_ref_tmp_i144->setAlignment(1);
 AllocaInst* ptr_ref_tmp_i141 = new AllocaInst(StructTy_class_std__allocator, "ref.tmp.i141", label_entry_92);
 ptr_ref_tmp_i141->setAlignment(1);
 AllocaInst* ptr_ref_tmp_i138 = new AllocaInst(StructTy_class_std__allocator, "ref.tmp.i138", label_entry_92);
 ptr_ref_tmp_i138->setAlignment(1);
 AllocaInst* ptr_ref_tmp_i135 = new AllocaInst(StructTy_class_std__allocator, "ref.tmp.i135", label_entry_92);
 ptr_ref_tmp_i135->setAlignment(1);
 AllocaInst* ptr_ref_tmp_i132 = new AllocaInst(StructTy_class_std__allocator, "ref.tmp.i132", label_entry_92);
 ptr_ref_tmp_i132->setAlignment(1);
 AllocaInst* ptr_ref_tmp_i = new AllocaInst(StructTy_class_std__allocator, "ref.tmp.i", label_entry_92);
 ptr_ref_tmp_i->setAlignment(1);
 AllocaInst* ptr_funcName = new AllocaInst(StructTy_class_std__basic_string, "funcName", label_entry_92);
 ptr_funcName->setAlignment(8);
 AllocaInst* ptr_ref_tmp = new AllocaInst(StructTy_class_std__allocator, "ref.tmp", label_entry_92);
 ptr_ref_tmp->setAlignment(1);
 AllocaInst* ptr_agg_tmp = new AllocaInst(StructTy_class_std__basic_string, "agg.tmp", label_entry_92);
 ptr_agg_tmp->setAlignment(8);
 AllocaInst* ptr_agg_tmp3 = new AllocaInst(StructTy_class_std__basic_string, "agg.tmp3", label_entry_92);
 ptr_agg_tmp3->setAlignment(8);
 CastInst* ptr_93 = new BitCastInst(ptr_funcName, PointerTy_1, "", label_entry_92);
 std::vector<Value*> void_94_params;
 void_94_params.push_back(const_int64_65);
 void_94_params.push_back(ptr_93);
 CallInst* void_94 = CallInst::Create(func_llvm_lifetime_start, void_94_params, "", label_entry_92);
 void_94->setCallingConv(CallingConv::C);
 void_94->setTailCall(false);
 AttributeSet void_94_PAL;
 {
  SmallVector<AttributeSet, 4> Attrs;
  AttributeSet PAS;
   {
    AttrBuilder B;
    B.addAttribute(Attribute::NoUnwind);
    PAS = AttributeSet::get(mod->getContext(), ~0U, B);
   }
  
  Attrs.push_back(PAS);
  void_94_PAL = AttributeSet::get(mod->getContext(), Attrs);
  
 }
 void_94->setAttributes(void_94_PAL);
 
 std::vector<Value*> void_95_params;
 void_95_params.push_back(ptr_funcName);
 void_95_params.push_back(const_ptr_66);
 void_95_params.push_back(ptr_ref_tmp);
 InvokeInst *void_95 = InvokeInst::Create(func__ZNSsC1EPKcRKSaIcE, label_invoke_cont, label_lpad, void_95_params, "", label_entry_92);
 void_95->setCallingConv(CallingConv::C);AttributeSet void_95_PAL;
 {
  SmallVector<AttributeSet, 4> Attrs;
  AttributeSet PAS;
   {
    AttrBuilder B;
    PAS = AttributeSet::get(mod->getContext(), 3U, B);
   }
  
  Attrs.push_back(PAS);
  {
   AttrBuilder B;
   B.addAttribute(Attribute::OptimizeForSize);
   PAS = AttributeSet::get(mod->getContext(), ~0U, B);
  }
 
 Attrs.push_back(PAS);
 void_95_PAL = AttributeSet::get(mod->getContext(), Attrs);
 
}
void_95->setAttributes(void_95_PAL);


// Block invoke.cont (label_invoke_cont)
std::vector<Value*> void_96_params;
void_96_params.push_back(ptr_agg_tmp);
void_96_params.push_back(ptr_funcName);
InvokeInst *void_96 = InvokeInst::Create(func__ZNSsC1ERKSs, label_invoke_cont2, label_lpad1, void_96_params, "", label_invoke_cont);
void_96->setCallingConv(CallingConv::C);AttributeSet void_96_PAL;
{
 SmallVector<AttributeSet, 4> Attrs;
 AttributeSet PAS;
  {
   AttrBuilder B;
   PAS = AttributeSet::get(mod->getContext(), 2U, B);
  }
 
 Attrs.push_back(PAS);
 {
  AttrBuilder B;
  B.addAttribute(Attribute::OptimizeForSize);
  PAS = AttributeSet::get(mod->getContext(), ~0U, B);
 }

Attrs.push_back(PAS);
void_96_PAL = AttributeSet::get(mod->getContext(), Attrs);

}
void_96->setAttributes(void_96_PAL);


// Block invoke.cont2 (label_invoke_cont2)
std::vector<Value*> void_97_params;
void_97_params.push_back(ptr_agg_tmp3);
void_97_params.push_back(ptr_funcName);
InvokeInst *void_97 = InvokeInst::Create(func__ZNSsC1ERKSs, label_invoke_cont5, label_lpad4, void_97_params, "", label_invoke_cont2);
void_97->setCallingConv(CallingConv::C);AttributeSet void_97_PAL;
{
 SmallVector<AttributeSet, 4> Attrs;
 AttributeSet PAS;
  {
   AttrBuilder B;
   PAS = AttributeSet::get(mod->getContext(), 2U, B);
  }
 
 Attrs.push_back(PAS);
 {
  AttrBuilder B;
  B.addAttribute(Attribute::OptimizeForSize);
  PAS = AttributeSet::get(mod->getContext(), ~0U, B);
 }

Attrs.push_back(PAS);
void_97_PAL = AttributeSet::get(mod->getContext(), Attrs);

}
void_97->setAttributes(void_97_PAL);


// Block invoke.cont5 (label_invoke_cont5)
std::vector<Value*> void_98_params;
void_98_params.push_back(ptr_agg_tmp);
void_98_params.push_back(ptr_agg_tmp3);
InvokeInst *void_98 = InvokeInst::Create(func__Z40_metric_capture_long_double_timer_setup_SsSs, label_invoke_cont7, label_lpad6, void_98_params, "", label_invoke_cont5);
void_98->setCallingConv(CallingConv::C);AttributeSet void_98_PAL;
{
 SmallVector<AttributeSet, 4> Attrs;
 AttributeSet PAS;
  {
   AttrBuilder B;
   B.addAttribute(Attribute::OptimizeForSize);
   PAS = AttributeSet::get(mod->getContext(), ~0U, B);
  }
 
 Attrs.push_back(PAS);
 void_98_PAL = AttributeSet::get(mod->getContext(), Attrs);
 
}
void_98->setAttributes(void_98_PAL);


// Block invoke.cont7 (label_invoke_cont7)
std::vector<Value*> ptr_99_indices;
ptr_99_indices.push_back(const_int64_61);
ptr_99_indices.push_back(const_int32_62);
Instruction* ptr_99 = GetElementPtrInst::Create(ptr_ref_tmp_i135, ptr_99_indices, "", label_invoke_cont7);
std::vector<Value*> void_100_params;
void_100_params.push_back(const_int64_63);
void_100_params.push_back(ptr_99);
CallInst* void_100 = CallInst::Create(func_llvm_lifetime_start, void_100_params, "", label_invoke_cont7);
void_100->setCallingConv(CallingConv::C);
void_100->setTailCall(false);
AttributeSet void_100_PAL;
void_100->setAttributes(void_100_PAL);

std::vector<Value*> ptr__M_p_i_i_i136_indices;
ptr__M_p_i_i_i136_indices.push_back(const_int64_61);
ptr__M_p_i_i_i136_indices.push_back(const_int32_62);
ptr__M_p_i_i_i136_indices.push_back(const_int32_62);
Instruction* ptr__M_p_i_i_i136 = GetElementPtrInst::Create(ptr_agg_tmp3, ptr__M_p_i_i_i136_indices, "_M_p.i.i.i136", label_invoke_cont7);
LoadInst* ptr_101 = new LoadInst(ptr__M_p_i_i_i136, "", false, label_invoke_cont7);
ptr_101->setAlignment(8);
GetElementPtrInst* ptr_arrayidx_i_i137 = GetElementPtrInst::Create(ptr_101, const_int64_67, "arrayidx.i.i137", label_invoke_cont7);
CastInst* ptr_102 = new BitCastInst(ptr_arrayidx_i_i137, PointerTy_34, "", label_invoke_cont7);
std::vector<Value*> void_103_params;
void_103_params.push_back(ptr_102);
void_103_params.push_back(ptr_ref_tmp_i135);
CallInst* void_103 = CallInst::Create(func__ZNSs4_Rep10_M_disposeERKSaIcE, void_103_params, "", label_invoke_cont7);
void_103->setCallingConv(CallingConv::C);
void_103->setTailCall(false);
AttributeSet void_103_PAL;
{
 SmallVector<AttributeSet, 4> Attrs;
 AttributeSet PAS;
  {
   AttrBuilder B;
   PAS = AttributeSet::get(mod->getContext(), 2U, B);
  }
 
 Attrs.push_back(PAS);
 {
  AttrBuilder B;
  B.addAttribute(Attribute::NoUnwind);
  B.addAttribute(Attribute::OptimizeForSize);
  PAS = AttributeSet::get(mod->getContext(), ~0U, B);
 }

Attrs.push_back(PAS);
void_103_PAL = AttributeSet::get(mod->getContext(), Attrs);

}
void_103->setAttributes(void_103_PAL);

std::vector<Value*> void_104_params;
void_104_params.push_back(const_int64_63);
void_104_params.push_back(ptr_99);
CallInst* void_104 = CallInst::Create(func_llvm_lifetime_end, void_104_params, "", label_invoke_cont7);
void_104->setCallingConv(CallingConv::C);
void_104->setTailCall(false);
AttributeSet void_104_PAL;
void_104->setAttributes(void_104_PAL);

std::vector<Value*> ptr_105_indices;
ptr_105_indices.push_back(const_int64_61);
ptr_105_indices.push_back(const_int32_62);
Instruction* ptr_105 = GetElementPtrInst::Create(ptr_ref_tmp_i138, ptr_105_indices, "", label_invoke_cont7);
std::vector<Value*> void_106_params;
void_106_params.push_back(const_int64_63);
void_106_params.push_back(ptr_105);
CallInst* void_106 = CallInst::Create(func_llvm_lifetime_start, void_106_params, "", label_invoke_cont7);
void_106->setCallingConv(CallingConv::C);
void_106->setTailCall(false);
AttributeSet void_106_PAL;
void_106->setAttributes(void_106_PAL);

std::vector<Value*> ptr__M_p_i_i_i139_indices;
ptr__M_p_i_i_i139_indices.push_back(const_int64_61);
ptr__M_p_i_i_i139_indices.push_back(const_int32_62);
ptr__M_p_i_i_i139_indices.push_back(const_int32_62);
Instruction* ptr__M_p_i_i_i139 = GetElementPtrInst::Create(ptr_agg_tmp, ptr__M_p_i_i_i139_indices, "_M_p.i.i.i139", label_invoke_cont7);
LoadInst* ptr_107 = new LoadInst(ptr__M_p_i_i_i139, "", false, label_invoke_cont7);
ptr_107->setAlignment(8);
GetElementPtrInst* ptr_arrayidx_i_i140 = GetElementPtrInst::Create(ptr_107, const_int64_67, "arrayidx.i.i140", label_invoke_cont7);
CastInst* ptr_108 = new BitCastInst(ptr_arrayidx_i_i140, PointerTy_34, "", label_invoke_cont7);
std::vector<Value*> void_109_params;
void_109_params.push_back(ptr_108);
void_109_params.push_back(ptr_ref_tmp_i138);
CallInst* void_109 = CallInst::Create(func__ZNSs4_Rep10_M_disposeERKSaIcE, void_109_params, "", label_invoke_cont7);
void_109->setCallingConv(CallingConv::C);
void_109->setTailCall(false);
AttributeSet void_109_PAL;
{
 SmallVector<AttributeSet, 4> Attrs;
 AttributeSet PAS;
  {
   AttrBuilder B;
   PAS = AttributeSet::get(mod->getContext(), 2U, B);
  }
 
 Attrs.push_back(PAS);
 {
  AttrBuilder B;
  B.addAttribute(Attribute::NoUnwind);
  B.addAttribute(Attribute::OptimizeForSize);
  PAS = AttributeSet::get(mod->getContext(), ~0U, B);
 }

Attrs.push_back(PAS);
void_109_PAL = AttributeSet::get(mod->getContext(), Attrs);

}
void_109->setAttributes(void_109_PAL);

std::vector<Value*> void_110_params;
void_110_params.push_back(const_int64_63);
void_110_params.push_back(ptr_105);
CallInst* void_110 = CallInst::Create(func_llvm_lifetime_end, void_110_params, "", label_invoke_cont7);
void_110->setCallingConv(CallingConv::C);
void_110->setTailCall(false);
AttributeSet void_110_PAL;
void_110->setAttributes(void_110_PAL);

ICmpInst* int1_cmp161 = new ICmpInst(*label_invoke_cont7, ICmpInst::ICMP_SGT, int32_d, const_int32_62, "cmp161");
BranchInst::Create(label_for_cond8_preheader_lr_ph, label_for_cond_cleanup, int1_cmp161, label_invoke_cont7);

// Block for.cond8.preheader.lr.ph (label_for_cond8_preheader_lr_ph)
CastInst* int64_112 = new SExtInst(int32_d, IntegerType::get(mod->getContext(), 64), "", label_for_cond8_preheader_lr_ph);
BranchInst::Create(label_for_cond12_preheader_lr_ph, label_for_cond8_preheader_lr_ph);

// Block for.cond.loopexit (label_for_cond_loopexit)
Argument* fwdref_114 = new Argument(IntegerType::get(mod->getContext(), 64));
BinaryOperator* int64_indvars_iv_next186 = BinaryOperator::Create(Instruction::Add, fwdref_114, const_int64_63, "indvars.iv.next186", label_for_cond_loopexit);
Argument* fwdref_115 = new Argument(IntegerType::get(mod->getContext(), 64));
CastInst* int32_lftr_wideiv196 = new TruncInst(fwdref_115, IntegerType::get(mod->getContext(), 32), "lftr.wideiv196", label_for_cond_loopexit);
ICmpInst* int1_exitcond197 = new ICmpInst(*label_for_cond_loopexit, ICmpInst::ICMP_EQ, int32_lftr_wideiv196, int32_d, "exitcond197");
BranchInst::Create(label_for_cond_cleanup, label_for_cond12_preheader_lr_ph, int1_exitcond197, label_for_cond_loopexit);

// Block for.cond12.preheader.lr.ph (label_for_cond12_preheader_lr_ph)
PHINode* int64_indvars_iv193 = PHINode::Create(IntegerType::get(mod->getContext(), 64), 2, "indvars.iv193", label_for_cond12_preheader_lr_ph);
int64_indvars_iv193->addIncoming(const_int64_61, label_for_cond8_preheader_lr_ph);
int64_indvars_iv193->addIncoming(fwdref_115, label_for_cond_loopexit);

PHINode* int64_indvars_iv185 = PHINode::Create(IntegerType::get(mod->getContext(), 64), 2, "indvars.iv185", label_for_cond12_preheader_lr_ph);
int64_indvars_iv185->addIncoming(const_int64_63, label_for_cond8_preheader_lr_ph);
int64_indvars_iv185->addIncoming(int64_indvars_iv_next186, label_for_cond_loopexit);

Argument* fwdref_117 = new Argument(IntegerType::get(mod->getContext(), 32));
PHINode* int32_indvars_iv181 = PHINode::Create(IntegerType::get(mod->getContext(), 32), 2, "indvars.iv181", label_for_cond12_preheader_lr_ph);
int32_indvars_iv181->addIncoming(const_int32_62, label_for_cond8_preheader_lr_ph);
int32_indvars_iv181->addIncoming(fwdref_117, label_for_cond_loopexit);

ICmpInst* int1_cmp13147 = new ICmpInst(*label_for_cond12_preheader_lr_ph, ICmpInst::ICMP_SGT, int64_indvars_iv193, const_int64_61, "cmp13147");
BranchInst::Create(label_for_cond12_preheader, label_for_cond12_preheader_lr_ph);

// Block for.cond.cleanup (label_for_cond_cleanup)
std::vector<Value*> ptr_119_indices;
ptr_119_indices.push_back(const_int64_61);
ptr_119_indices.push_back(const_int32_62);
Instruction* ptr_119 = GetElementPtrInst::Create(ptr_ref_tmp_i141, ptr_119_indices, "", label_for_cond_cleanup);
std::vector<Value*> void_120_params;
void_120_params.push_back(const_int64_63);
void_120_params.push_back(ptr_119);
CallInst* void_120 = CallInst::Create(func_llvm_lifetime_start, void_120_params, "", label_for_cond_cleanup);
void_120->setCallingConv(CallingConv::C);
void_120->setTailCall(false);
AttributeSet void_120_PAL;
void_120->setAttributes(void_120_PAL);

std::vector<Value*> ptr__M_p_i_i_i142_indices;
ptr__M_p_i_i_i142_indices.push_back(const_int64_61);
ptr__M_p_i_i_i142_indices.push_back(const_int32_62);
ptr__M_p_i_i_i142_indices.push_back(const_int32_62);
Instruction* ptr__M_p_i_i_i142 = GetElementPtrInst::Create(ptr_funcName, ptr__M_p_i_i_i142_indices, "_M_p.i.i.i142", label_for_cond_cleanup);
LoadInst* ptr_121 = new LoadInst(ptr__M_p_i_i_i142, "", false, label_for_cond_cleanup);
ptr_121->setAlignment(8);
GetElementPtrInst* ptr_arrayidx_i_i143 = GetElementPtrInst::Create(ptr_121, const_int64_67, "arrayidx.i.i143", label_for_cond_cleanup);
CastInst* ptr_122 = new BitCastInst(ptr_arrayidx_i_i143, PointerTy_34, "", label_for_cond_cleanup);
std::vector<Value*> void_123_params;
void_123_params.push_back(ptr_122);
void_123_params.push_back(ptr_ref_tmp_i141);
CallInst* void_123 = CallInst::Create(func__ZNSs4_Rep10_M_disposeERKSaIcE, void_123_params, "", label_for_cond_cleanup);
void_123->setCallingConv(CallingConv::C);
void_123->setTailCall(false);
AttributeSet void_123_PAL;
{
 SmallVector<AttributeSet, 4> Attrs;
 AttributeSet PAS;
  {
   AttrBuilder B;
   PAS = AttributeSet::get(mod->getContext(), 2U, B);
  }
 
 Attrs.push_back(PAS);
 {
  AttrBuilder B;
  B.addAttribute(Attribute::NoUnwind);
  B.addAttribute(Attribute::OptimizeForSize);
  PAS = AttributeSet::get(mod->getContext(), ~0U, B);
 }

Attrs.push_back(PAS);
void_123_PAL = AttributeSet::get(mod->getContext(), Attrs);

}
void_123->setAttributes(void_123_PAL);

std::vector<Value*> void_124_params;
void_124_params.push_back(const_int64_63);
void_124_params.push_back(ptr_119);
CallInst* void_124 = CallInst::Create(func_llvm_lifetime_end, void_124_params, "", label_for_cond_cleanup);
void_124->setCallingConv(CallingConv::C);
void_124->setTailCall(false);
AttributeSet void_124_PAL;
void_124->setAttributes(void_124_PAL);

std::vector<Value*> void_125_params;
void_125_params.push_back(const_int64_65);
void_125_params.push_back(ptr_93);
CallInst* void_125 = CallInst::Create(func_llvm_lifetime_end, void_125_params, "", label_for_cond_cleanup);
void_125->setCallingConv(CallingConv::C);
void_125->setTailCall(false);
AttributeSet void_125_PAL;
{
 SmallVector<AttributeSet, 4> Attrs;
 AttributeSet PAS;
  {
   AttrBuilder B;
   B.addAttribute(Attribute::NoUnwind);
   PAS = AttributeSet::get(mod->getContext(), ~0U, B);
  }
 
 Attrs.push_back(PAS);
 void_125_PAL = AttributeSet::get(mod->getContext(), Attrs);
 
}
void_125->setAttributes(void_125_PAL);

ReturnInst::Create(mod->getContext(), label_for_cond_cleanup);

// Block lpad (label_lpad)
LandingPadInst* struct_127 = LandingPadInst::Create(StructTy_37, const_ptr_68, 0, "", label_lpad);
struct_127->setCleanup(true);
std::vector<unsigned> ptr_128_indices;
ptr_128_indices.push_back(0);
ExtractValueInst* ptr_128 = ExtractValueInst::Create(struct_127, ptr_128_indices, "", label_lpad);
std::vector<unsigned> int32_129_indices;
int32_129_indices.push_back(1);
ExtractValueInst* int32_129 = ExtractValueInst::Create(struct_127, int32_129_indices, "", label_lpad);
BranchInst::Create(label_eh_resume, label_lpad);

// Block lpad1 (label_lpad1)
LandingPadInst* struct_131 = LandingPadInst::Create(StructTy_37, const_ptr_68, 0, "", label_lpad1);
struct_131->setCleanup(true);
std::vector<unsigned> ptr_132_indices;
ptr_132_indices.push_back(0);
ExtractValueInst* ptr_132 = ExtractValueInst::Create(struct_131, ptr_132_indices, "", label_lpad1);
std::vector<unsigned> int32_133_indices;
int32_133_indices.push_back(1);
ExtractValueInst* int32_133 = ExtractValueInst::Create(struct_131, int32_133_indices, "", label_lpad1);
BranchInst::Create(label_ehcleanup76, label_lpad1);

// Block lpad4 (label_lpad4)
LandingPadInst* struct_135 = LandingPadInst::Create(StructTy_37, const_ptr_68, 0, "", label_lpad4);
struct_135->setCleanup(true);
std::vector<unsigned> ptr_136_indices;
ptr_136_indices.push_back(0);
ExtractValueInst* ptr_136 = ExtractValueInst::Create(struct_135, ptr_136_indices, "", label_lpad4);
std::vector<unsigned> int32_137_indices;
int32_137_indices.push_back(1);
ExtractValueInst* int32_137 = ExtractValueInst::Create(struct_135, int32_137_indices, "", label_lpad4);
BranchInst::Create(label_ehcleanup, label_lpad4);

// Block lpad6 (label_lpad6)
LandingPadInst* struct_139 = LandingPadInst::Create(StructTy_37, const_ptr_68, 0, "", label_lpad6);
struct_139->setCleanup(true);
std::vector<unsigned> ptr_140_indices;
ptr_140_indices.push_back(0);
ExtractValueInst* ptr_140 = ExtractValueInst::Create(struct_139, ptr_140_indices, "", label_lpad6);
std::vector<unsigned> int32_141_indices;
int32_141_indices.push_back(1);
ExtractValueInst* int32_141 = ExtractValueInst::Create(struct_139, int32_141_indices, "", label_lpad6);
std::vector<Value*> ptr_142_indices;
ptr_142_indices.push_back(const_int64_61);
ptr_142_indices.push_back(const_int32_62);
Instruction* ptr_142 = GetElementPtrInst::Create(ptr_ref_tmp_i144, ptr_142_indices, "", label_lpad6);
std::vector<Value*> void_143_params;
void_143_params.push_back(const_int64_63);
void_143_params.push_back(ptr_142);
CallInst* void_143 = CallInst::Create(func_llvm_lifetime_start, void_143_params, "", label_lpad6);
void_143->setCallingConv(CallingConv::C);
void_143->setTailCall(false);
AttributeSet void_143_PAL;
void_143->setAttributes(void_143_PAL);

std::vector<Value*> ptr__M_p_i_i_i145_indices;
ptr__M_p_i_i_i145_indices.push_back(const_int64_61);
ptr__M_p_i_i_i145_indices.push_back(const_int32_62);
ptr__M_p_i_i_i145_indices.push_back(const_int32_62);
Instruction* ptr__M_p_i_i_i145 = GetElementPtrInst::Create(ptr_agg_tmp3, ptr__M_p_i_i_i145_indices, "_M_p.i.i.i145", label_lpad6);
LoadInst* ptr_144 = new LoadInst(ptr__M_p_i_i_i145, "", false, label_lpad6);
ptr_144->setAlignment(8);
GetElementPtrInst* ptr_arrayidx_i_i146 = GetElementPtrInst::Create(ptr_144, const_int64_67, "arrayidx.i.i146", label_lpad6);
CastInst* ptr_145 = new BitCastInst(ptr_arrayidx_i_i146, PointerTy_34, "", label_lpad6);
std::vector<Value*> void_146_params;
void_146_params.push_back(ptr_145);
void_146_params.push_back(ptr_ref_tmp_i144);
CallInst* void_146 = CallInst::Create(func__ZNSs4_Rep10_M_disposeERKSaIcE, void_146_params, "", label_lpad6);
void_146->setCallingConv(CallingConv::C);
void_146->setTailCall(false);
AttributeSet void_146_PAL;
{
 SmallVector<AttributeSet, 4> Attrs;
 AttributeSet PAS;
  {
   AttrBuilder B;
   PAS = AttributeSet::get(mod->getContext(), 2U, B);
  }
 
 Attrs.push_back(PAS);
 {
  AttrBuilder B;
  B.addAttribute(Attribute::NoUnwind);
  B.addAttribute(Attribute::OptimizeForSize);
  PAS = AttributeSet::get(mod->getContext(), ~0U, B);
 }

Attrs.push_back(PAS);
void_146_PAL = AttributeSet::get(mod->getContext(), Attrs);

}
void_146->setAttributes(void_146_PAL);

std::vector<Value*> void_147_params;
void_147_params.push_back(const_int64_63);
void_147_params.push_back(ptr_142);
CallInst* void_147 = CallInst::Create(func_llvm_lifetime_end, void_147_params, "", label_lpad6);
void_147->setCallingConv(CallingConv::C);
void_147->setTailCall(false);
AttributeSet void_147_PAL;
void_147->setAttributes(void_147_PAL);

BranchInst::Create(label_ehcleanup, label_lpad6);

// Block ehcleanup (label_ehcleanup)
PHINode* ptr_exn_slot_0 = PHINode::Create(PointerTy_1, 2, "exn.slot.0", label_ehcleanup);
ptr_exn_slot_0->addIncoming(ptr_140, label_lpad6);
ptr_exn_slot_0->addIncoming(ptr_136, label_lpad4);

PHINode* int32_ehselector_slot_0 = PHINode::Create(IntegerType::get(mod->getContext(), 32), 2, "ehselector.slot.0", label_ehcleanup);
int32_ehselector_slot_0->addIncoming(int32_141, label_lpad6);
int32_ehselector_slot_0->addIncoming(int32_137, label_lpad4);

std::vector<Value*> ptr_149_indices;
ptr_149_indices.push_back(const_int64_61);
ptr_149_indices.push_back(const_int32_62);
Instruction* ptr_149 = GetElementPtrInst::Create(ptr_ref_tmp_i132, ptr_149_indices, "", label_ehcleanup);
std::vector<Value*> void_150_params;
void_150_params.push_back(const_int64_63);
void_150_params.push_back(ptr_149);
CallInst* void_150 = CallInst::Create(func_llvm_lifetime_start, void_150_params, "", label_ehcleanup);
void_150->setCallingConv(CallingConv::C);
void_150->setTailCall(false);
AttributeSet void_150_PAL;
void_150->setAttributes(void_150_PAL);

std::vector<Value*> ptr__M_p_i_i_i133_indices;
ptr__M_p_i_i_i133_indices.push_back(const_int64_61);
ptr__M_p_i_i_i133_indices.push_back(const_int32_62);
ptr__M_p_i_i_i133_indices.push_back(const_int32_62);
Instruction* ptr__M_p_i_i_i133 = GetElementPtrInst::Create(ptr_agg_tmp, ptr__M_p_i_i_i133_indices, "_M_p.i.i.i133", label_ehcleanup);
LoadInst* ptr_151 = new LoadInst(ptr__M_p_i_i_i133, "", false, label_ehcleanup);
ptr_151->setAlignment(8);
GetElementPtrInst* ptr_arrayidx_i_i134 = GetElementPtrInst::Create(ptr_151, const_int64_67, "arrayidx.i.i134", label_ehcleanup);
CastInst* ptr_152 = new BitCastInst(ptr_arrayidx_i_i134, PointerTy_34, "", label_ehcleanup);
std::vector<Value*> void_153_params;
void_153_params.push_back(ptr_152);
void_153_params.push_back(ptr_ref_tmp_i132);
CallInst* void_153 = CallInst::Create(func__ZNSs4_Rep10_M_disposeERKSaIcE, void_153_params, "", label_ehcleanup);
void_153->setCallingConv(CallingConv::C);
void_153->setTailCall(false);
AttributeSet void_153_PAL;
{
 SmallVector<AttributeSet, 4> Attrs;
 AttributeSet PAS;
  {
   AttrBuilder B;
   PAS = AttributeSet::get(mod->getContext(), 2U, B);
  }
 
 Attrs.push_back(PAS);
 {
  AttrBuilder B;
  B.addAttribute(Attribute::NoUnwind);
  B.addAttribute(Attribute::OptimizeForSize);
  PAS = AttributeSet::get(mod->getContext(), ~0U, B);
 }

Attrs.push_back(PAS);
void_153_PAL = AttributeSet::get(mod->getContext(), Attrs);

}
void_153->setAttributes(void_153_PAL);

std::vector<Value*> void_154_params;
void_154_params.push_back(const_int64_63);
void_154_params.push_back(ptr_149);
CallInst* void_154 = CallInst::Create(func_llvm_lifetime_end, void_154_params, "", label_ehcleanup);
void_154->setCallingConv(CallingConv::C);
void_154->setTailCall(false);
AttributeSet void_154_PAL;
void_154->setAttributes(void_154_PAL);

BranchInst::Create(label_ehcleanup76, label_ehcleanup);

// Block for.cond12.preheader (label_for_cond12_preheader)
Argument* fwdref_156 = new Argument(IntegerType::get(mod->getContext(), 64));
PHINode* int64_indvars_iv170 = PHINode::Create(IntegerType::get(mod->getContext(), 64), 2, "indvars.iv170", label_for_cond12_preheader);
int64_indvars_iv170->addIncoming(int64_indvars_iv193, label_for_cond12_preheader_lr_ph);
int64_indvars_iv170->addIncoming(fwdref_156, label_for_cond_cleanup14);

BinaryOperator* int64_157 = BinaryOperator::Create(Instruction::Mul, int64_indvars_iv170, int64_112, "", label_for_cond12_preheader);
BranchInst::Create(label_for_body15, label_for_cond_cleanup14, int1_cmp13147, label_for_cond12_preheader);

// Block for.cond.cleanup10 (label_for_cond_cleanup10)
BinaryOperator* int64_indvars_iv_next194 = BinaryOperator::Create(Instruction::Add, int64_indvars_iv193, const_int64_63, "indvars.iv.next194", label_for_cond_cleanup10);
BinaryOperator* int32_indvars_iv_next182 = BinaryOperator::Create(Instruction::Add, int32_indvars_iv181, const_int32_59, "indvars.iv.next182", label_for_cond_cleanup10);
ICmpInst* int1_cmp35158 = new ICmpInst(*label_for_cond_cleanup10, ICmpInst::ICMP_SLT, int64_indvars_iv_next194, int64_112, "cmp35158");
BranchInst::Create(label_for_cond40_preheader_lr_ph, label_for_cond_loopexit, int1_cmp35158, label_for_cond_cleanup10);

// Block for.cond40.preheader.lr.ph (label_for_cond40_preheader_lr_ph)
ICmpInst* int1_cmp41153 = new ICmpInst(*label_for_cond40_preheader_lr_ph, ICmpInst::ICMP_SGT, int64_indvars_iv193, const_int64_61, "cmp41153");
BinaryOperator* int64_160 = BinaryOperator::Create(Instruction::Mul, int64_indvars_iv193, int64_112, "", label_for_cond40_preheader_lr_ph);
BinaryOperator* int32_mul44 = BinaryOperator::Create(Instruction::Mul, int32_indvars_iv181, int32_d, "mul44", label_for_cond40_preheader_lr_ph);
CastInst* int32_161 = new TruncInst(int64_indvars_iv193, IntegerType::get(mod->getContext(), 32), "", label_for_cond40_preheader_lr_ph);
BinaryOperator* int32_add63 = BinaryOperator::Create(Instruction::Add, int32_mul44, int32_161, "add63", label_for_cond40_preheader_lr_ph);
CastInst* int64_idxprom64 = new SExtInst(int32_add63, IntegerType::get(mod->getContext(), 64), "idxprom64", label_for_cond40_preheader_lr_ph);
GetElementPtrInst* ptr_arrayidx65 = GetElementPtrInst::Create(ptr_D, int64_idxprom64, "arrayidx65", label_for_cond40_preheader_lr_ph);
BranchInst::Create(label_for_cond40_preheader, label_for_cond40_preheader_lr_ph);

// Block for.cond.cleanup14 (label_for_cond_cleanup14)
Argument* fwdref_163 = new Argument(Type::getDoubleTy(mod->getContext()));
PHINode* double_sum_0_lcssa = PHINode::Create(Type::getDoubleTy(mod->getContext()), 2, "sum.0.lcssa", label_for_cond_cleanup14);
double_sum_0_lcssa->addIncoming(const_double_69, label_for_cond12_preheader);
double_sum_0_lcssa->addIncoming(fwdref_163, label_for_body15);

BinaryOperator* int64_164 = BinaryOperator::Create(Instruction::Add, int64_157, int64_indvars_iv193, "", label_for_cond_cleanup14);
GetElementPtrInst* ptr_arrayidx25 = GetElementPtrInst::Create(ptr_S, int64_164, "arrayidx25", label_for_cond_cleanup14);
LoadInst* double_165 = new LoadInst(ptr_arrayidx25, "", false, label_for_cond_cleanup14);
double_165->setAlignment(8);
BinaryOperator* double_sub = BinaryOperator::Create(Instruction::FSub, double_165, double_sum_0_lcssa, "sub", label_for_cond_cleanup14);
GetElementPtrInst* ptr_arrayidx29 = GetElementPtrInst::Create(ptr_D, int64_164, "arrayidx29", label_for_cond_cleanup14);
StoreInst* void_166 = new StoreInst(double_sub, ptr_arrayidx29, false, label_for_cond_cleanup14);
void_166->setAlignment(8);
BinaryOperator* int64_indvars_iv_next171 = BinaryOperator::Create(Instruction::Add, int64_indvars_iv170, const_int64_63, "indvars.iv.next171", label_for_cond_cleanup14);
CastInst* int32_lftr_wideiv174 = new TruncInst(int64_indvars_iv_next171, IntegerType::get(mod->getContext(), 32), "lftr.wideiv174", label_for_cond_cleanup14);
ICmpInst* int1_exitcond175 = new ICmpInst(*label_for_cond_cleanup14, ICmpInst::ICMP_EQ, int32_lftr_wideiv174, int32_d, "exitcond175");
BranchInst::Create(label_for_cond_cleanup10, label_for_cond12_preheader, int1_exitcond175, label_for_cond_cleanup14);

// Block for.body15 (label_for_body15)
Argument* fwdref_168 = new Argument(IntegerType::get(mod->getContext(), 64));
PHINode* int64_indvars_iv = PHINode::Create(IntegerType::get(mod->getContext(), 64), 2, "indvars.iv", label_for_body15);
int64_indvars_iv->addIncoming(fwdref_168, label_for_body15);
int64_indvars_iv->addIncoming(const_int64_61, label_for_cond12_preheader);

PHINode* double_sum_0148 = PHINode::Create(Type::getDoubleTy(mod->getContext()), 2, "sum.0148", label_for_body15);
double_sum_0148->addIncoming(fwdref_163, label_for_body15);
double_sum_0148->addIncoming(const_double_69, label_for_cond12_preheader);

BinaryOperator* int64_169 = BinaryOperator::Create(Instruction::Add, int64_indvars_iv, int64_157, "", label_for_body15);
GetElementPtrInst* ptr_arrayidx = GetElementPtrInst::Create(ptr_D, int64_169, "arrayidx", label_for_body15);
LoadInst* double_170 = new LoadInst(ptr_arrayidx, "", false, label_for_body15);
double_170->setAlignment(8);
BinaryOperator* int64_171 = BinaryOperator::Create(Instruction::Mul, int64_indvars_iv, int64_112, "", label_for_body15);
BinaryOperator* int64_172 = BinaryOperator::Create(Instruction::Add, int64_171, int64_indvars_iv193, "", label_for_body15);
GetElementPtrInst* ptr_arrayidx19 = GetElementPtrInst::Create(ptr_D, int64_172, "arrayidx19", label_for_body15);
LoadInst* double_173 = new LoadInst(ptr_arrayidx19, "", false, label_for_body15);
double_173->setAlignment(8);
BinaryOperator* double_mul20 = BinaryOperator::Create(Instruction::FMul, double_170, double_173, "mul20", label_for_body15);
BinaryOperator* double_add21 = BinaryOperator::Create(Instruction::FAdd, double_sum_0148, double_mul20, "add21", label_for_body15);
BinaryOperator* int64_indvars_iv_next = BinaryOperator::Create(Instruction::Add, int64_indvars_iv, const_int64_63, "indvars.iv.next", label_for_body15);
CastInst* int32_lftr_wideiv = new TruncInst(int64_indvars_iv_next, IntegerType::get(mod->getContext(), 32), "lftr.wideiv", label_for_body15);
ICmpInst* int1_exitcond = new ICmpInst(*label_for_body15, ICmpInst::ICMP_EQ, int32_lftr_wideiv, int32_indvars_iv181, "exitcond");
BranchInst::Create(label_for_cond_cleanup14, label_for_body15, int1_exitcond, label_for_body15);

// Block for.cond40.preheader (label_for_cond40_preheader)
Argument* fwdref_175 = new Argument(IntegerType::get(mod->getContext(), 64));
PHINode* int64_indvars_iv187 = PHINode::Create(IntegerType::get(mod->getContext(), 64), 2, "indvars.iv187", label_for_cond40_preheader);
int64_indvars_iv187->addIncoming(int64_indvars_iv185, label_for_cond40_preheader_lr_ph);
int64_indvars_iv187->addIncoming(fwdref_175, label_for_cond_cleanup42);

BranchInst::Create(label_for_body43, label_for_cond_cleanup42, int1_cmp41153, label_for_cond40_preheader);

// Block for.cond.cleanup42 (label_for_cond_cleanup42)
Argument* fwdref_177 = new Argument(Type::getDoubleTy(mod->getContext()));
PHINode* double_sum38_0_lcssa = PHINode::Create(Type::getDoubleTy(mod->getContext()), 2, "sum38.0.lcssa", label_for_cond_cleanup42);
double_sum38_0_lcssa->addIncoming(const_double_69, label_for_cond40_preheader);
double_sum38_0_lcssa->addIncoming(fwdref_177, label_for_body43);

BinaryOperator* int64_178 = BinaryOperator::Create(Instruction::Add, int64_indvars_iv187, int64_160, "", label_for_cond_cleanup42);
GetElementPtrInst* ptr_arrayidx60 = GetElementPtrInst::Create(ptr_S, int64_178, "arrayidx60", label_for_cond_cleanup42);
LoadInst* double_179 = new LoadInst(ptr_arrayidx60, "", false, label_for_cond_cleanup42);
double_179->setAlignment(8);
BinaryOperator* double_sub61 = BinaryOperator::Create(Instruction::FSub, double_179, double_sum38_0_lcssa, "sub61", label_for_cond_cleanup42);
LoadInst* double_180 = new LoadInst(ptr_arrayidx65, "", false, label_for_cond_cleanup42);
double_180->setAlignment(8);
BinaryOperator* double_div = BinaryOperator::Create(Instruction::FDiv, double_sub61, double_180, "div", label_for_cond_cleanup42);
GetElementPtrInst* ptr_arrayidx69 = GetElementPtrInst::Create(ptr_D, int64_178, "arrayidx69", label_for_cond_cleanup42);
StoreInst* void_181 = new StoreInst(double_div, ptr_arrayidx69, false, label_for_cond_cleanup42);
void_181->setAlignment(8);
BinaryOperator* int64_indvars_iv_next188 = BinaryOperator::Create(Instruction::Add, int64_indvars_iv187, const_int64_63, "indvars.iv.next188", label_for_cond_cleanup42);
CastInst* int32_lftr_wideiv191 = new TruncInst(int64_indvars_iv_next188, IntegerType::get(mod->getContext(), 32), "lftr.wideiv191", label_for_cond_cleanup42);
ICmpInst* int1_exitcond192 = new ICmpInst(*label_for_cond_cleanup42, ICmpInst::ICMP_EQ, int32_lftr_wideiv191, int32_d, "exitcond192");
BranchInst::Create(label_for_cond_loopexit, label_for_cond40_preheader, int1_exitcond192, label_for_cond_cleanup42);

// Block for.body43 (label_for_body43)
Argument* fwdref_183 = new Argument(IntegerType::get(mod->getContext(), 64));
PHINode* int64_indvars_iv176 = PHINode::Create(IntegerType::get(mod->getContext(), 64), 2, "indvars.iv176", label_for_body43);
int64_indvars_iv176->addIncoming(fwdref_183, label_for_body43);
int64_indvars_iv176->addIncoming(const_int64_61, label_for_cond40_preheader);

PHINode* double_sum38_0154 = PHINode::Create(Type::getDoubleTy(mod->getContext()), 2, "sum38.0154", label_for_body43);
double_sum38_0154->addIncoming(fwdref_177, label_for_body43);
double_sum38_0154->addIncoming(const_double_69, label_for_cond40_preheader);

BinaryOperator* int64_184 = BinaryOperator::Create(Instruction::Add, int64_indvars_iv176, int64_160, "", label_for_body43);
GetElementPtrInst* ptr_arrayidx47 = GetElementPtrInst::Create(ptr_D, int64_184, "arrayidx47", label_for_body43);
LoadInst* double_185 = new LoadInst(ptr_arrayidx47, "", false, label_for_body43);
double_185->setAlignment(8);
BinaryOperator* int64_186 = BinaryOperator::Create(Instruction::Mul, int64_indvars_iv176, int64_112, "", label_for_body43);
BinaryOperator* int64_187 = BinaryOperator::Create(Instruction::Add, int64_186, int64_indvars_iv187, "", label_for_body43);
GetElementPtrInst* ptr_arrayidx51 = GetElementPtrInst::Create(ptr_D, int64_187, "arrayidx51", label_for_body43);
LoadInst* double_188 = new LoadInst(ptr_arrayidx51, "", false, label_for_body43);
double_188->setAlignment(8);
BinaryOperator* double_mul52 = BinaryOperator::Create(Instruction::FMul, double_185, double_188, "mul52", label_for_body43);
BinaryOperator* double_add53 = BinaryOperator::Create(Instruction::FAdd, double_sum38_0154, double_mul52, "add53", label_for_body43);
BinaryOperator* int64_indvars_iv_next177 = BinaryOperator::Create(Instruction::Add, int64_indvars_iv176, const_int64_63, "indvars.iv.next177", label_for_body43);
CastInst* int32_lftr_wideiv183 = new TruncInst(int64_indvars_iv_next177, IntegerType::get(mod->getContext(), 32), "lftr.wideiv183", label_for_body43);
ICmpInst* int1_exitcond184 = new ICmpInst(*label_for_body43, ICmpInst::ICMP_EQ, int32_lftr_wideiv183, int32_indvars_iv181, "exitcond184");
BranchInst::Create(label_for_cond_cleanup42, label_for_body43, int1_exitcond184, label_for_body43);

// Block ehcleanup76 (label_ehcleanup76)
PHINode* ptr_exn_slot_1 = PHINode::Create(PointerTy_1, 2, "exn.slot.1", label_ehcleanup76);
ptr_exn_slot_1->addIncoming(ptr_exn_slot_0, label_ehcleanup);
ptr_exn_slot_1->addIncoming(ptr_132, label_lpad1);

PHINode* int32_ehselector_slot_1 = PHINode::Create(IntegerType::get(mod->getContext(), 32), 2, "ehselector.slot.1", label_ehcleanup76);
int32_ehselector_slot_1->addIncoming(int32_ehselector_slot_0, label_ehcleanup);
int32_ehselector_slot_1->addIncoming(int32_133, label_lpad1);

std::vector<Value*> ptr_190_indices;
ptr_190_indices.push_back(const_int64_61);
ptr_190_indices.push_back(const_int32_62);
Instruction* ptr_190 = GetElementPtrInst::Create(ptr_ref_tmp_i, ptr_190_indices, "", label_ehcleanup76);
std::vector<Value*> void_191_params;
void_191_params.push_back(const_int64_63);
void_191_params.push_back(ptr_190);
CallInst* void_191 = CallInst::Create(func_llvm_lifetime_start, void_191_params, "", label_ehcleanup76);
void_191->setCallingConv(CallingConv::C);
void_191->setTailCall(false);
AttributeSet void_191_PAL;
void_191->setAttributes(void_191_PAL);

std::vector<Value*> ptr__M_p_i_i_i_indices;
ptr__M_p_i_i_i_indices.push_back(const_int64_61);
ptr__M_p_i_i_i_indices.push_back(const_int32_62);
ptr__M_p_i_i_i_indices.push_back(const_int32_62);
Instruction* ptr__M_p_i_i_i = GetElementPtrInst::Create(ptr_funcName, ptr__M_p_i_i_i_indices, "_M_p.i.i.i", label_ehcleanup76);
LoadInst* ptr_192 = new LoadInst(ptr__M_p_i_i_i, "", false, label_ehcleanup76);
ptr_192->setAlignment(8);
GetElementPtrInst* ptr_arrayidx_i_i = GetElementPtrInst::Create(ptr_192, const_int64_67, "arrayidx.i.i", label_ehcleanup76);
CastInst* ptr_193 = new BitCastInst(ptr_arrayidx_i_i, PointerTy_34, "", label_ehcleanup76);
std::vector<Value*> void_194_params;
void_194_params.push_back(ptr_193);
void_194_params.push_back(ptr_ref_tmp_i);
CallInst* void_194 = CallInst::Create(func__ZNSs4_Rep10_M_disposeERKSaIcE, void_194_params, "", label_ehcleanup76);
void_194->setCallingConv(CallingConv::C);
void_194->setTailCall(false);
AttributeSet void_194_PAL;
{
 SmallVector<AttributeSet, 4> Attrs;
 AttributeSet PAS;
  {
   AttrBuilder B;
   PAS = AttributeSet::get(mod->getContext(), 2U, B);
  }
 
 Attrs.push_back(PAS);
 {
  AttrBuilder B;
  B.addAttribute(Attribute::NoUnwind);
  B.addAttribute(Attribute::OptimizeForSize);
  PAS = AttributeSet::get(mod->getContext(), ~0U, B);
 }

Attrs.push_back(PAS);
void_194_PAL = AttributeSet::get(mod->getContext(), Attrs);

}
void_194->setAttributes(void_194_PAL);

std::vector<Value*> void_195_params;
void_195_params.push_back(const_int64_63);
void_195_params.push_back(ptr_190);
CallInst* void_195 = CallInst::Create(func_llvm_lifetime_end, void_195_params, "", label_ehcleanup76);
void_195->setCallingConv(CallingConv::C);
void_195->setTailCall(false);
AttributeSet void_195_PAL;
void_195->setAttributes(void_195_PAL);

BranchInst::Create(label_eh_resume, label_ehcleanup76);

// Block eh.resume (label_eh_resume)
PHINode* ptr_exn_slot_2 = PHINode::Create(PointerTy_1, 2, "exn.slot.2", label_eh_resume);
ptr_exn_slot_2->addIncoming(ptr_exn_slot_1, label_ehcleanup76);
ptr_exn_slot_2->addIncoming(ptr_128, label_lpad);

PHINode* int32_ehselector_slot_2 = PHINode::Create(IntegerType::get(mod->getContext(), 32), 2, "ehselector.slot.2", label_eh_resume);
int32_ehselector_slot_2->addIncoming(int32_ehselector_slot_1, label_ehcleanup76);
int32_ehselector_slot_2->addIncoming(int32_129, label_lpad);

std::vector<unsigned> struct_lpad_val_indices;
struct_lpad_val_indices.push_back(0);
InsertValueInst* struct_lpad_val = InsertValueInst::Create(const_struct_70, ptr_exn_slot_2, struct_lpad_val_indices, "lpad.val", label_eh_resume);
std::vector<unsigned> struct_lpad_val77_indices;
struct_lpad_val77_indices.push_back(1);
InsertValueInst* struct_lpad_val77 = InsertValueInst::Create(struct_lpad_val, int32_ehselector_slot_2, struct_lpad_val77_indices, "lpad.val77", label_eh_resume);
ResumeInst::Create(struct_lpad_val77, label_eh_resume);

// Resolve Forward References
fwdref_114->replaceAllUsesWith(int64_indvars_iv185); delete fwdref_114;
fwdref_183->replaceAllUsesWith(int64_indvars_iv_next177); delete fwdref_183;
fwdref_115->replaceAllUsesWith(int64_indvars_iv_next194); delete fwdref_115;
fwdref_117->replaceAllUsesWith(int32_indvars_iv_next182); delete fwdref_117;
fwdref_156->replaceAllUsesWith(int64_indvars_iv_next171); delete fwdref_156;
fwdref_163->replaceAllUsesWith(double_add21); delete fwdref_163;
fwdref_168->replaceAllUsesWith(int64_indvars_iv_next); delete fwdref_168;
fwdref_175->replaceAllUsesWith(int64_indvars_iv_next188); delete fwdref_175;
fwdref_177->replaceAllUsesWith(double_add53); delete fwdref_177;

}

// Function: main (func_main)
{
 Function::arg_iterator args = func_main->arg_begin();
 Value* int32_argc = args++;
 int32_argc->setName("argc");
 Value* ptr_args = args++;
 ptr_args->setName("args");
 
 BasicBlock* label_entry_198 = BasicBlock::Create(mod->getContext(), "entry",func_main,0);
 BasicBlock* label_invoke_cont_199 = BasicBlock::Create(mod->getContext(), "invoke.cont",func_main,0);
 BasicBlock* label_if_then_i_i = BasicBlock::Create(mod->getContext(), "if.then.i.i",func_main,0);
 BasicBlock* label__noexc = BasicBlock::Create(mod->getContext(), ".noexc",func_main,0);
 BasicBlock* label_if_else_i_i = BasicBlock::Create(mod->getContext(), "if.else.i.i",func_main,0);
 BasicBlock* label_if_then7_i_i = BasicBlock::Create(mod->getContext(), "if.then7.i.i",func_main,0);
 BasicBlock* label__noexc28 = BasicBlock::Create(mod->getContext(), ".noexc28",func_main,0);
 BasicBlock* label_invoke_cont3 = BasicBlock::Create(mod->getContext(), "invoke.cont3",func_main,0);
 BasicBlock* label_invoke_cont9 = BasicBlock::Create(mod->getContext(), "invoke.cont9",func_main,0);
 BasicBlock* label_delete_notnull = BasicBlock::Create(mod->getContext(), "delete.notnull",func_main,0);
 BasicBlock* label_lpad_200 = BasicBlock::Create(mod->getContext(), "lpad",func_main,0);
 BasicBlock* label_lpad2 = BasicBlock::Create(mod->getContext(), "lpad2",func_main,0);
 BasicBlock* label_lpad8 = BasicBlock::Create(mod->getContext(), "lpad8",func_main,0);
 BasicBlock* label_lpad11 = BasicBlock::Create(mod->getContext(), "lpad11",func_main,0);
 BasicBlock* label_eh_resume_201 = BasicBlock::Create(mod->getContext(), "eh.resume",func_main,0);
 
 // Block entry (label_entry_198)
 AllocaInst* ptr_ref_tmp_i35 = new AllocaInst(StructTy_class_std__allocator, "ref.tmp.i35", label_entry_198);
 ptr_ref_tmp_i35->setAlignment(1);
 AllocaInst* ptr_ref_tmp_i32 = new AllocaInst(StructTy_class_std__allocator, "ref.tmp.i32", label_entry_198);
 ptr_ref_tmp_i32->setAlignment(1);
 AllocaInst* ptr_ref_tmp_i29 = new AllocaInst(StructTy_class_std__allocator, "ref.tmp.i29", label_entry_198);
 ptr_ref_tmp_i29->setAlignment(1);
 AllocaInst* ptr___endptr_i_i = new AllocaInst(PointerTy_1, "__endptr.i.i", label_entry_198);
 ptr___endptr_i_i->setAlignment(8);
 AllocaInst* ptr_ref_tmp_i_202 = new AllocaInst(StructTy_class_std__allocator, "ref.tmp.i", label_entry_198);
 ptr_ref_tmp_i_202->setAlignment(1);
 AllocaInst* ptr_ref_tmp_203 = new AllocaInst(StructTy_class_std__basic_string, "ref.tmp", label_entry_198);
 ptr_ref_tmp_203->setAlignment(8);
 AllocaInst* ptr_ref_tmp1 = new AllocaInst(StructTy_class_std__allocator, "ref.tmp1", label_entry_198);
 ptr_ref_tmp1->setAlignment(1);
 AllocaInst* ptr_inp = new AllocaInst(StructTy_class_std__basic_string, "inp", label_entry_198);
 ptr_inp->setAlignment(8);
 AllocaInst* ptr_ref_tmp7 = new AllocaInst(StructTy_class_std__allocator, "ref.tmp7", label_entry_198);
 ptr_ref_tmp7->setAlignment(1);
 GetElementPtrInst* ptr_arrayidx_204 = GetElementPtrInst::Create(ptr_args, const_int64_63, "arrayidx", label_entry_198);
 LoadInst* ptr_205 = new LoadInst(ptr_arrayidx_204, "", false, label_entry_198);
 ptr_205->setAlignment(8);
 std::vector<Value*> void_206_params;
 void_206_params.push_back(ptr_ref_tmp_203);
 void_206_params.push_back(ptr_205);
 void_206_params.push_back(ptr_ref_tmp1);
 InvokeInst *void_206 = InvokeInst::Create(func__ZNSsC1EPKcRKSaIcE, label_invoke_cont_199, label_lpad_200, void_206_params, "", label_entry_198);
 void_206->setCallingConv(CallingConv::C);AttributeSet void_206_PAL;
 {
  SmallVector<AttributeSet, 4> Attrs;
  AttributeSet PAS;
   {
    AttrBuilder B;
    PAS = AttributeSet::get(mod->getContext(), 3U, B);
   }
  
  Attrs.push_back(PAS);
  {
   AttrBuilder B;
   B.addAttribute(Attribute::OptimizeForSize);
   PAS = AttributeSet::get(mod->getContext(), ~0U, B);
  }
 
 Attrs.push_back(PAS);
 void_206_PAL = AttributeSet::get(mod->getContext(), Attrs);
 
}
void_206->setAttributes(void_206_PAL);


// Block invoke.cont (label_invoke_cont_199)
std::vector<Value*> ptr__M_p_i_i_i27_indices;
ptr__M_p_i_i_i27_indices.push_back(const_int64_61);
ptr__M_p_i_i_i27_indices.push_back(const_int32_62);
ptr__M_p_i_i_i27_indices.push_back(const_int32_62);
Instruction* ptr__M_p_i_i_i27 = GetElementPtrInst::Create(ptr_ref_tmp_203, ptr__M_p_i_i_i27_indices, "_M_p.i.i.i27", label_invoke_cont_199);
LoadInst* ptr_207 = new LoadInst(ptr__M_p_i_i_i27, "", false, label_invoke_cont_199);
ptr_207->setAlignment(8);
CastInst* ptr_208 = new BitCastInst(ptr___endptr_i_i, PointerTy_1, "", label_invoke_cont_199);
std::vector<Value*> void_209_params;
void_209_params.push_back(const_int64_65);
void_209_params.push_back(ptr_208);
CallInst* void_209 = CallInst::Create(func_llvm_lifetime_start, void_209_params, "", label_invoke_cont_199);
void_209->setCallingConv(CallingConv::C);
void_209->setTailCall(false);
AttributeSet void_209_PAL;
{
 SmallVector<AttributeSet, 4> Attrs;
 AttributeSet PAS;
  {
   AttrBuilder B;
   B.addAttribute(Attribute::NoUnwind);
   PAS = AttributeSet::get(mod->getContext(), ~0U, B);
  }
 
 Attrs.push_back(PAS);
 void_209_PAL = AttributeSet::get(mod->getContext(), Attrs);
 
}
void_209->setAttributes(void_209_PAL);

CallInst* ptr_call_i_i = CallInst::Create(func___errno_location, "call.i.i", label_invoke_cont_199);
ptr_call_i_i->setCallingConv(CallingConv::C);
ptr_call_i_i->setTailCall(true);
AttributeSet ptr_call_i_i_PAL;
{
 SmallVector<AttributeSet, 4> Attrs;
 AttributeSet PAS;
  {
   AttrBuilder B;
   B.addAttribute(Attribute::NoUnwind);
   B.addAttribute(Attribute::ReadNone);
   B.addAttribute(Attribute::OptimizeForSize);
   PAS = AttributeSet::get(mod->getContext(), ~0U, B);
  }
 
 Attrs.push_back(PAS);
 ptr_call_i_i_PAL = AttributeSet::get(mod->getContext(), Attrs);
 
}
ptr_call_i_i->setAttributes(ptr_call_i_i_PAL);

StoreInst* void_210 = new StoreInst(const_int32_62, ptr_call_i_i, false, label_invoke_cont_199);
void_210->setAlignment(4);
std::vector<Value*> int64_call1_i_i_params;
int64_call1_i_i_params.push_back(ptr_207);
int64_call1_i_i_params.push_back(ptr___endptr_i_i);
int64_call1_i_i_params.push_back(const_int32_71);
CallInst* int64_call1_i_i = CallInst::Create(func_strtol, int64_call1_i_i_params, "call1.i.i", label_invoke_cont_199);
int64_call1_i_i->setCallingConv(CallingConv::C);
int64_call1_i_i->setTailCall(false);
AttributeSet int64_call1_i_i_PAL;
{
 SmallVector<AttributeSet, 4> Attrs;
 AttributeSet PAS;
  {
   AttrBuilder B;
   B.addAttribute(Attribute::OptimizeForSize);
   PAS = AttributeSet::get(mod->getContext(), ~0U, B);
  }
 
 Attrs.push_back(PAS);
 int64_call1_i_i_PAL = AttributeSet::get(mod->getContext(), Attrs);
 
}
int64_call1_i_i->setAttributes(int64_call1_i_i_PAL);

LoadInst* ptr_211 = new LoadInst(ptr___endptr_i_i, "", false, label_invoke_cont_199);
ptr_211->setAlignment(8);
ICmpInst* int1_cmp_i_i = new ICmpInst(*label_invoke_cont_199, ICmpInst::ICMP_EQ, ptr_211, ptr_207, "cmp.i.i");
BranchInst::Create(label_if_then_i_i, label_if_else_i_i, int1_cmp_i_i, label_invoke_cont_199);

// Block if.then.i.i (label_if_then_i_i)
std::vector<Value*> void_213_params;
void_213_params.push_back(const_ptr_72);
InvokeInst *void_213 = InvokeInst::Create(func__ZSt24__throw_invalid_argumentPKc, label__noexc, label_lpad2, void_213_params, "", label_if_then_i_i);
void_213->setCallingConv(CallingConv::C);AttributeSet void_213_PAL;
{
 SmallVector<AttributeSet, 4> Attrs;
 AttributeSet PAS;
  {
   AttrBuilder B;
   B.addAttribute(Attribute::NoReturn);
   B.addAttribute(Attribute::OptimizeForSize);
   PAS = AttributeSet::get(mod->getContext(), ~0U, B);
  }
 
 Attrs.push_back(PAS);
 void_213_PAL = AttributeSet::get(mod->getContext(), Attrs);
 
}
void_213->setAttributes(void_213_PAL);


// Block .noexc (label__noexc)
new UnreachableInst(mod->getContext(), label__noexc);

// Block if.else.i.i (label_if_else_i_i)
LoadInst* int32_215 = new LoadInst(ptr_call_i_i, "", false, label_if_else_i_i);
int32_215->setAlignment(4);
ICmpInst* int1_cmp3_i_i = new ICmpInst(*label_if_else_i_i, ICmpInst::ICMP_EQ, int32_215, const_int32_73, "cmp3.i.i");
BinaryOperator* int64_call1_off_i_i = BinaryOperator::Create(Instruction::Add, int64_call1_i_i, const_int64_74, "call1.off.i.i", label_if_else_i_i);
ICmpInst* int1_216 = new ICmpInst(*label_if_else_i_i, ICmpInst::ICMP_UGT, int64_call1_off_i_i, const_int64_75, "");
BinaryOperator* int1_217 = BinaryOperator::Create(Instruction::Or, int1_216, int1_cmp3_i_i, "", label_if_else_i_i);
BranchInst::Create(label_if_then7_i_i, label_invoke_cont3, int1_217, label_if_else_i_i);

// Block if.then7.i.i (label_if_then7_i_i)
std::vector<Value*> void_219_params;
void_219_params.push_back(const_ptr_72);
InvokeInst *void_219 = InvokeInst::Create(func__ZSt20__throw_out_of_rangePKc, label__noexc28, label_lpad2, void_219_params, "", label_if_then7_i_i);
void_219->setCallingConv(CallingConv::C);AttributeSet void_219_PAL;
{
 SmallVector<AttributeSet, 4> Attrs;
 AttributeSet PAS;
  {
   AttrBuilder B;
   B.addAttribute(Attribute::NoReturn);
   B.addAttribute(Attribute::OptimizeForSize);
   PAS = AttributeSet::get(mod->getContext(), ~0U, B);
  }
 
 Attrs.push_back(PAS);
 void_219_PAL = AttributeSet::get(mod->getContext(), Attrs);
 
}
void_219->setAttributes(void_219_PAL);


// Block .noexc28 (label__noexc28)
new UnreachableInst(mod->getContext(), label__noexc28);

// Block invoke.cont3 (label_invoke_cont3)
std::vector<Value*> void_221_params;
void_221_params.push_back(const_int64_65);
void_221_params.push_back(ptr_208);
CallInst* void_221 = CallInst::Create(func_llvm_lifetime_end, void_221_params, "", label_invoke_cont3);
void_221->setCallingConv(CallingConv::C);
void_221->setTailCall(false);
AttributeSet void_221_PAL;
{
 SmallVector<AttributeSet, 4> Attrs;
 AttributeSet PAS;
  {
   AttrBuilder B;
   B.addAttribute(Attribute::NoUnwind);
   PAS = AttributeSet::get(mod->getContext(), ~0U, B);
  }
 
 Attrs.push_back(PAS);
 void_221_PAL = AttributeSet::get(mod->getContext(), Attrs);
 
}
void_221->setAttributes(void_221_PAL);

std::vector<Value*> ptr_222_indices;
ptr_222_indices.push_back(const_int64_61);
ptr_222_indices.push_back(const_int32_62);
Instruction* ptr_222 = GetElementPtrInst::Create(ptr_ref_tmp_i29, ptr_222_indices, "", label_invoke_cont3);
std::vector<Value*> void_223_params;
void_223_params.push_back(const_int64_63);
void_223_params.push_back(ptr_222);
CallInst* void_223 = CallInst::Create(func_llvm_lifetime_start, void_223_params, "", label_invoke_cont3);
void_223->setCallingConv(CallingConv::C);
void_223->setTailCall(false);
AttributeSet void_223_PAL;
void_223->setAttributes(void_223_PAL);

LoadInst* ptr_224 = new LoadInst(ptr__M_p_i_i_i27, "", false, label_invoke_cont3);
ptr_224->setAlignment(8);
GetElementPtrInst* ptr_arrayidx_i_i31 = GetElementPtrInst::Create(ptr_224, const_int64_67, "arrayidx.i.i31", label_invoke_cont3);
CastInst* ptr_225 = new BitCastInst(ptr_arrayidx_i_i31, PointerTy_34, "", label_invoke_cont3);
std::vector<Value*> void_226_params;
void_226_params.push_back(ptr_225);
void_226_params.push_back(ptr_ref_tmp_i29);
CallInst* void_226 = CallInst::Create(func__ZNSs4_Rep10_M_disposeERKSaIcE, void_226_params, "", label_invoke_cont3);
void_226->setCallingConv(CallingConv::C);
void_226->setTailCall(false);
AttributeSet void_226_PAL;
{
 SmallVector<AttributeSet, 4> Attrs;
 AttributeSet PAS;
  {
   AttrBuilder B;
   PAS = AttributeSet::get(mod->getContext(), 2U, B);
  }
 
 Attrs.push_back(PAS);
 {
  AttrBuilder B;
  B.addAttribute(Attribute::NoUnwind);
  B.addAttribute(Attribute::OptimizeForSize);
  PAS = AttributeSet::get(mod->getContext(), ~0U, B);
 }

Attrs.push_back(PAS);
void_226_PAL = AttributeSet::get(mod->getContext(), Attrs);

}
void_226->setAttributes(void_226_PAL);

std::vector<Value*> void_227_params;
void_227_params.push_back(const_int64_63);
void_227_params.push_back(ptr_222);
CallInst* void_227 = CallInst::Create(func_llvm_lifetime_end, void_227_params, "", label_invoke_cont3);
void_227->setCallingConv(CallingConv::C);
void_227->setTailCall(false);
AttributeSet void_227_PAL;
void_227->setAttributes(void_227_PAL);

BinaryOperator* int64_mul = BinaryOperator::Create(Instruction::Shl, int64_call1_i_i, const_int64_76, "mul", label_invoke_cont3);
BinaryOperator* int64_228 = BinaryOperator::Create(Instruction::Mul, int64_mul, int64_call1_i_i, "", label_invoke_cont3);
BinaryOperator* int64_229 = BinaryOperator::Create(Instruction::And, int64_228, const_int64_77, "", label_invoke_cont3);
CallInst* ptr_call4 = CallInst::Create(func__Znam, int64_229, "call4", label_invoke_cont3);
ptr_call4->setCallingConv(CallingConv::C);
ptr_call4->setTailCall(false);
AttributeSet ptr_call4_PAL;
{
 SmallVector<AttributeSet, 4> Attrs;
 AttributeSet PAS;
  {
   AttrBuilder B;
   B.addAttribute(Attribute::NoAlias);
   PAS = AttributeSet::get(mod->getContext(), 0U, B);
  }
 
 Attrs.push_back(PAS);
 {
  AttrBuilder B;
  B.addAttribute(Attribute::OptimizeForSize);
  PAS = AttributeSet::get(mod->getContext(), ~0U, B);
 }

Attrs.push_back(PAS);
ptr_call4_PAL = AttributeSet::get(mod->getContext(), Attrs);

}
ptr_call4->setAttributes(ptr_call4_PAL);

CallInst* ptr_call6 = CallInst::Create(func__Znam, int64_229, "call6", label_invoke_cont3);
ptr_call6->setCallingConv(CallingConv::C);
ptr_call6->setTailCall(false);
AttributeSet ptr_call6_PAL;
{
 SmallVector<AttributeSet, 4> Attrs;
 AttributeSet PAS;
  {
   AttrBuilder B;
   B.addAttribute(Attribute::NoAlias);
   PAS = AttributeSet::get(mod->getContext(), 0U, B);
  }
 
 Attrs.push_back(PAS);
 {
  AttrBuilder B;
  B.addAttribute(Attribute::OptimizeForSize);
  PAS = AttributeSet::get(mod->getContext(), ~0U, B);
 }

Attrs.push_back(PAS);
ptr_call6_PAL = AttributeSet::get(mod->getContext(), Attrs);

}
ptr_call6->setAttributes(ptr_call6_PAL);

CastInst* ptr_230 = new BitCastInst(ptr_inp, PointerTy_1, "", label_invoke_cont3);
std::vector<Value*> void_231_params;
void_231_params.push_back(const_int64_65);
void_231_params.push_back(ptr_230);
CallInst* void_231 = CallInst::Create(func_llvm_lifetime_start, void_231_params, "", label_invoke_cont3);
void_231->setCallingConv(CallingConv::C);
void_231->setTailCall(false);
AttributeSet void_231_PAL;
{
 SmallVector<AttributeSet, 4> Attrs;
 AttributeSet PAS;
  {
   AttrBuilder B;
   B.addAttribute(Attribute::NoUnwind);
   PAS = AttributeSet::get(mod->getContext(), ~0U, B);
  }
 
 Attrs.push_back(PAS);
 void_231_PAL = AttributeSet::get(mod->getContext(), Attrs);
 
}
void_231->setAttributes(void_231_PAL);

std::vector<Value*> void_232_params;
void_232_params.push_back(ptr_inp);
void_232_params.push_back(const_ptr_78);
void_232_params.push_back(ptr_ref_tmp7);
InvokeInst *void_232 = InvokeInst::Create(func__ZNSsC1EPKcRKSaIcE, label_invoke_cont9, label_lpad8, void_232_params, "", label_invoke_cont3);
void_232->setCallingConv(CallingConv::C);AttributeSet void_232_PAL;
{
 SmallVector<AttributeSet, 4> Attrs;
 AttributeSet PAS;
  {
   AttrBuilder B;
   PAS = AttributeSet::get(mod->getContext(), 3U, B);
  }
 
 Attrs.push_back(PAS);
 {
  AttrBuilder B;
  B.addAttribute(Attribute::OptimizeForSize);
  PAS = AttributeSet::get(mod->getContext(), ~0U, B);
 }

Attrs.push_back(PAS);
void_232_PAL = AttributeSet::get(mod->getContext(), Attrs);

}
void_232->setAttributes(void_232_PAL);


// Block invoke.cont9 (label_invoke_cont9)
CastInst* int32_conv_i_i = new TruncInst(int64_call1_i_i, IntegerType::get(mod->getContext(), 32), "conv.i.i", label_invoke_cont9);
CastInst* ptr_233 = new BitCastInst(ptr_call6, PointerTy_26, "", label_invoke_cont9);
CastInst* ptr_234 = new BitCastInst(ptr_call4, PointerTy_26, "", label_invoke_cont9);
std::vector<Value*> void_235_params;
void_235_params.push_back(int32_conv_i_i);
void_235_params.push_back(ptr_234);
void_235_params.push_back(ptr_233);
InvokeInst *void_235 = InvokeInst::Create(func__Z12testFunctioniPdS_, label_delete_notnull, label_lpad11, void_235_params, "", label_invoke_cont9);
void_235->setCallingConv(CallingConv::C);AttributeSet void_235_PAL;
{
 SmallVector<AttributeSet, 4> Attrs;
 AttributeSet PAS;
  {
   AttrBuilder B;
   B.addAttribute(Attribute::OptimizeForSize);
   PAS = AttributeSet::get(mod->getContext(), ~0U, B);
  }
 
 Attrs.push_back(PAS);
 void_235_PAL = AttributeSet::get(mod->getContext(), Attrs);
 
}
void_235->setAttributes(void_235_PAL);


// Block delete.notnull (label_delete_notnull)
CallInst* void_236 = CallInst::Create(func__ZdaPv, ptr_call4, "", label_delete_notnull);
void_236->setCallingConv(CallingConv::C);
void_236->setTailCall(false);
AttributeSet void_236_PAL;
{
 SmallVector<AttributeSet, 4> Attrs;
 AttributeSet PAS;
  {
   AttrBuilder B;
   B.addAttribute(Attribute::NoUnwind);
   B.addAttribute(Attribute::OptimizeForSize);
   PAS = AttributeSet::get(mod->getContext(), ~0U, B);
  }
 
 Attrs.push_back(PAS);
 void_236_PAL = AttributeSet::get(mod->getContext(), Attrs);
 
}
void_236->setAttributes(void_236_PAL);

CallInst* void_237 = CallInst::Create(func__ZdaPv, ptr_call6, "", label_delete_notnull);
void_237->setCallingConv(CallingConv::C);
void_237->setTailCall(false);
AttributeSet void_237_PAL;
{
 SmallVector<AttributeSet, 4> Attrs;
 AttributeSet PAS;
  {
   AttrBuilder B;
   B.addAttribute(Attribute::NoUnwind);
   B.addAttribute(Attribute::OptimizeForSize);
   PAS = AttributeSet::get(mod->getContext(), ~0U, B);
  }
 
 Attrs.push_back(PAS);
 void_237_PAL = AttributeSet::get(mod->getContext(), Attrs);
 
}
void_237->setAttributes(void_237_PAL);

std::vector<Value*> ptr_238_indices;
ptr_238_indices.push_back(const_int64_61);
ptr_238_indices.push_back(const_int32_62);
Instruction* ptr_238 = GetElementPtrInst::Create(ptr_ref_tmp_i32, ptr_238_indices, "", label_delete_notnull);
std::vector<Value*> void_239_params;
void_239_params.push_back(const_int64_63);
void_239_params.push_back(ptr_238);
CallInst* void_239 = CallInst::Create(func_llvm_lifetime_start, void_239_params, "", label_delete_notnull);
void_239->setCallingConv(CallingConv::C);
void_239->setTailCall(false);
AttributeSet void_239_PAL;
void_239->setAttributes(void_239_PAL);

std::vector<Value*> ptr__M_p_i_i_i33_indices;
ptr__M_p_i_i_i33_indices.push_back(const_int64_61);
ptr__M_p_i_i_i33_indices.push_back(const_int32_62);
ptr__M_p_i_i_i33_indices.push_back(const_int32_62);
Instruction* ptr__M_p_i_i_i33 = GetElementPtrInst::Create(ptr_inp, ptr__M_p_i_i_i33_indices, "_M_p.i.i.i33", label_delete_notnull);
LoadInst* ptr_240 = new LoadInst(ptr__M_p_i_i_i33, "", false, label_delete_notnull);
ptr_240->setAlignment(8);
GetElementPtrInst* ptr_arrayidx_i_i34 = GetElementPtrInst::Create(ptr_240, const_int64_67, "arrayidx.i.i34", label_delete_notnull);
CastInst* ptr_241 = new BitCastInst(ptr_arrayidx_i_i34, PointerTy_34, "", label_delete_notnull);
std::vector<Value*> void_242_params;
void_242_params.push_back(ptr_241);
void_242_params.push_back(ptr_ref_tmp_i32);
CallInst* void_242 = CallInst::Create(func__ZNSs4_Rep10_M_disposeERKSaIcE, void_242_params, "", label_delete_notnull);
void_242->setCallingConv(CallingConv::C);
void_242->setTailCall(false);
AttributeSet void_242_PAL;
{
 SmallVector<AttributeSet, 4> Attrs;
 AttributeSet PAS;
  {
   AttrBuilder B;
   PAS = AttributeSet::get(mod->getContext(), 2U, B);
  }
 
 Attrs.push_back(PAS);
 {
  AttrBuilder B;
  B.addAttribute(Attribute::NoUnwind);
  B.addAttribute(Attribute::OptimizeForSize);
  PAS = AttributeSet::get(mod->getContext(), ~0U, B);
 }

Attrs.push_back(PAS);
void_242_PAL = AttributeSet::get(mod->getContext(), Attrs);

}
void_242->setAttributes(void_242_PAL);

std::vector<Value*> void_243_params;
void_243_params.push_back(const_int64_63);
void_243_params.push_back(ptr_238);
CallInst* void_243 = CallInst::Create(func_llvm_lifetime_end, void_243_params, "", label_delete_notnull);
void_243->setCallingConv(CallingConv::C);
void_243->setTailCall(false);
AttributeSet void_243_PAL;
void_243->setAttributes(void_243_PAL);

std::vector<Value*> void_244_params;
void_244_params.push_back(const_int64_65);
void_244_params.push_back(ptr_230);
CallInst* void_244 = CallInst::Create(func_llvm_lifetime_end, void_244_params, "", label_delete_notnull);
void_244->setCallingConv(CallingConv::C);
void_244->setTailCall(false);
AttributeSet void_244_PAL;
{
 SmallVector<AttributeSet, 4> Attrs;
 AttributeSet PAS;
  {
   AttrBuilder B;
   B.addAttribute(Attribute::NoUnwind);
   PAS = AttributeSet::get(mod->getContext(), ~0U, B);
  }
 
 Attrs.push_back(PAS);
 void_244_PAL = AttributeSet::get(mod->getContext(), Attrs);
 
}
void_244->setAttributes(void_244_PAL);

ReturnInst::Create(mod->getContext(), const_int32_62, label_delete_notnull);

// Block lpad (label_lpad_200)
LandingPadInst* struct_246 = LandingPadInst::Create(StructTy_37, const_ptr_68, 0, "", label_lpad_200);
struct_246->setCleanup(true);
std::vector<unsigned> ptr_247_indices;
ptr_247_indices.push_back(0);
ExtractValueInst* ptr_247 = ExtractValueInst::Create(struct_246, ptr_247_indices, "", label_lpad_200);
std::vector<unsigned> int32_248_indices;
int32_248_indices.push_back(1);
ExtractValueInst* int32_248 = ExtractValueInst::Create(struct_246, int32_248_indices, "", label_lpad_200);
BranchInst::Create(label_eh_resume_201, label_lpad_200);

// Block lpad2 (label_lpad2)
LandingPadInst* struct_250 = LandingPadInst::Create(StructTy_37, const_ptr_68, 0, "", label_lpad2);
struct_250->setCleanup(true);
std::vector<unsigned> ptr_251_indices;
ptr_251_indices.push_back(0);
ExtractValueInst* ptr_251 = ExtractValueInst::Create(struct_250, ptr_251_indices, "", label_lpad2);
std::vector<unsigned> int32_252_indices;
int32_252_indices.push_back(1);
ExtractValueInst* int32_252 = ExtractValueInst::Create(struct_250, int32_252_indices, "", label_lpad2);
std::vector<Value*> ptr_253_indices;
ptr_253_indices.push_back(const_int64_61);
ptr_253_indices.push_back(const_int32_62);
Instruction* ptr_253 = GetElementPtrInst::Create(ptr_ref_tmp_i35, ptr_253_indices, "", label_lpad2);
std::vector<Value*> void_254_params;
void_254_params.push_back(const_int64_63);
void_254_params.push_back(ptr_253);
CallInst* void_254 = CallInst::Create(func_llvm_lifetime_start, void_254_params, "", label_lpad2);
void_254->setCallingConv(CallingConv::C);
void_254->setTailCall(false);
AttributeSet void_254_PAL;
void_254->setAttributes(void_254_PAL);

LoadInst* ptr_255 = new LoadInst(ptr__M_p_i_i_i27, "", false, label_lpad2);
ptr_255->setAlignment(8);
GetElementPtrInst* ptr_arrayidx_i_i37 = GetElementPtrInst::Create(ptr_255, const_int64_67, "arrayidx.i.i37", label_lpad2);
CastInst* ptr_256 = new BitCastInst(ptr_arrayidx_i_i37, PointerTy_34, "", label_lpad2);
std::vector<Value*> void_257_params;
void_257_params.push_back(ptr_256);
void_257_params.push_back(ptr_ref_tmp_i35);
CallInst* void_257 = CallInst::Create(func__ZNSs4_Rep10_M_disposeERKSaIcE, void_257_params, "", label_lpad2);
void_257->setCallingConv(CallingConv::C);
void_257->setTailCall(false);
AttributeSet void_257_PAL;
{
 SmallVector<AttributeSet, 4> Attrs;
 AttributeSet PAS;
  {
   AttrBuilder B;
   PAS = AttributeSet::get(mod->getContext(), 2U, B);
  }
 
 Attrs.push_back(PAS);
 {
  AttrBuilder B;
  B.addAttribute(Attribute::NoUnwind);
  B.addAttribute(Attribute::OptimizeForSize);
  PAS = AttributeSet::get(mod->getContext(), ~0U, B);
 }

Attrs.push_back(PAS);
void_257_PAL = AttributeSet::get(mod->getContext(), Attrs);

}
void_257->setAttributes(void_257_PAL);

std::vector<Value*> void_258_params;
void_258_params.push_back(const_int64_63);
void_258_params.push_back(ptr_253);
CallInst* void_258 = CallInst::Create(func_llvm_lifetime_end, void_258_params, "", label_lpad2);
void_258->setCallingConv(CallingConv::C);
void_258->setTailCall(false);
AttributeSet void_258_PAL;
void_258->setAttributes(void_258_PAL);

BranchInst::Create(label_eh_resume_201, label_lpad2);

// Block lpad8 (label_lpad8)
LandingPadInst* struct_260 = LandingPadInst::Create(StructTy_37, const_ptr_68, 0, "", label_lpad8);
struct_260->setCleanup(true);
std::vector<unsigned> ptr_261_indices;
ptr_261_indices.push_back(0);
ExtractValueInst* ptr_261 = ExtractValueInst::Create(struct_260, ptr_261_indices, "", label_lpad8);
std::vector<unsigned> int32_262_indices;
int32_262_indices.push_back(1);
ExtractValueInst* int32_262 = ExtractValueInst::Create(struct_260, int32_262_indices, "", label_lpad8);
BranchInst::Create(label_eh_resume_201, label_lpad8);

// Block lpad11 (label_lpad11)
LandingPadInst* struct_264 = LandingPadInst::Create(StructTy_37, const_ptr_68, 0, "", label_lpad11);
struct_264->setCleanup(true);
std::vector<unsigned> ptr_265_indices;
ptr_265_indices.push_back(0);
ExtractValueInst* ptr_265 = ExtractValueInst::Create(struct_264, ptr_265_indices, "", label_lpad11);
std::vector<unsigned> int32_266_indices;
int32_266_indices.push_back(1);
ExtractValueInst* int32_266 = ExtractValueInst::Create(struct_264, int32_266_indices, "", label_lpad11);
std::vector<Value*> ptr_267_indices;
ptr_267_indices.push_back(const_int64_61);
ptr_267_indices.push_back(const_int32_62);
Instruction* ptr_267 = GetElementPtrInst::Create(ptr_ref_tmp_i_202, ptr_267_indices, "", label_lpad11);
std::vector<Value*> void_268_params;
void_268_params.push_back(const_int64_63);
void_268_params.push_back(ptr_267);
CallInst* void_268 = CallInst::Create(func_llvm_lifetime_start, void_268_params, "", label_lpad11);
void_268->setCallingConv(CallingConv::C);
void_268->setTailCall(false);
AttributeSet void_268_PAL;
void_268->setAttributes(void_268_PAL);

std::vector<Value*> ptr__M_p_i_i_i_269_indices;
ptr__M_p_i_i_i_269_indices.push_back(const_int64_61);
ptr__M_p_i_i_i_269_indices.push_back(const_int32_62);
ptr__M_p_i_i_i_269_indices.push_back(const_int32_62);
Instruction* ptr__M_p_i_i_i_269 = GetElementPtrInst::Create(ptr_inp, ptr__M_p_i_i_i_269_indices, "_M_p.i.i.i", label_lpad11);
LoadInst* ptr_270 = new LoadInst(ptr__M_p_i_i_i_269, "", false, label_lpad11);
ptr_270->setAlignment(8);
GetElementPtrInst* ptr_arrayidx_i_i_271 = GetElementPtrInst::Create(ptr_270, const_int64_67, "arrayidx.i.i", label_lpad11);
CastInst* ptr_272 = new BitCastInst(ptr_arrayidx_i_i_271, PointerTy_34, "", label_lpad11);
std::vector<Value*> void_273_params;
void_273_params.push_back(ptr_272);
void_273_params.push_back(ptr_ref_tmp_i_202);
CallInst* void_273 = CallInst::Create(func__ZNSs4_Rep10_M_disposeERKSaIcE, void_273_params, "", label_lpad11);
void_273->setCallingConv(CallingConv::C);
void_273->setTailCall(false);
AttributeSet void_273_PAL;
{
 SmallVector<AttributeSet, 4> Attrs;
 AttributeSet PAS;
  {
   AttrBuilder B;
   PAS = AttributeSet::get(mod->getContext(), 2U, B);
  }
 
 Attrs.push_back(PAS);
 {
  AttrBuilder B;
  B.addAttribute(Attribute::NoUnwind);
  B.addAttribute(Attribute::OptimizeForSize);
  PAS = AttributeSet::get(mod->getContext(), ~0U, B);
 }

Attrs.push_back(PAS);
void_273_PAL = AttributeSet::get(mod->getContext(), Attrs);

}
void_273->setAttributes(void_273_PAL);

std::vector<Value*> void_274_params;
void_274_params.push_back(const_int64_63);
void_274_params.push_back(ptr_267);
CallInst* void_274 = CallInst::Create(func_llvm_lifetime_end, void_274_params, "", label_lpad11);
void_274->setCallingConv(CallingConv::C);
void_274->setTailCall(false);
AttributeSet void_274_PAL;
void_274->setAttributes(void_274_PAL);

BranchInst::Create(label_eh_resume_201, label_lpad11);

// Block eh.resume (label_eh_resume_201)
PHINode* int32_ehselector_slot_1_276 = PHINode::Create(IntegerType::get(mod->getContext(), 32), 4, "ehselector.slot.1", label_eh_resume_201);
int32_ehselector_slot_1_276->addIncoming(int32_266, label_lpad11);
int32_ehselector_slot_1_276->addIncoming(int32_262, label_lpad8);
int32_ehselector_slot_1_276->addIncoming(int32_252, label_lpad2);
int32_ehselector_slot_1_276->addIncoming(int32_248, label_lpad_200);

PHINode* ptr_exn_slot_1_277 = PHINode::Create(PointerTy_1, 4, "exn.slot.1", label_eh_resume_201);
ptr_exn_slot_1_277->addIncoming(ptr_265, label_lpad11);
ptr_exn_slot_1_277->addIncoming(ptr_261, label_lpad8);
ptr_exn_slot_1_277->addIncoming(ptr_251, label_lpad2);
ptr_exn_slot_1_277->addIncoming(ptr_247, label_lpad_200);

std::vector<unsigned> struct_lpad_val_278_indices;
struct_lpad_val_278_indices.push_back(0);
InsertValueInst* struct_lpad_val_278 = InsertValueInst::Create(const_struct_70, ptr_exn_slot_1_277, struct_lpad_val_278_indices, "lpad.val", label_eh_resume_201);
std::vector<unsigned> struct_lpad_val17_indices;
struct_lpad_val17_indices.push_back(1);
InsertValueInst* struct_lpad_val17 = InsertValueInst::Create(struct_lpad_val_278, int32_ehselector_slot_1_276, struct_lpad_val17_indices, "lpad.val17", label_eh_resume_201);
ResumeInst::Create(struct_lpad_val17, label_eh_resume_201);

}

// Function: _ZNSs4_Rep10_M_disposeERKSaIcE (func__ZNSs4_Rep10_M_disposeERKSaIcE)
{
 Function::arg_iterator args = func__ZNSs4_Rep10_M_disposeERKSaIcE->arg_begin();
 Value* ptr_this = args++;
 ptr_this->setName("this");
 Value* ptr___a = args++;
 ptr___a->setName("__a");
 
 BasicBlock* label_entry_280 = BasicBlock::Create(mod->getContext(), "entry",func__ZNSs4_Rep10_M_disposeERKSaIcE,0);
 BasicBlock* label_if_then = BasicBlock::Create(mod->getContext(), "if.then",func__ZNSs4_Rep10_M_disposeERKSaIcE,0);
 BasicBlock* label_if_then_i = BasicBlock::Create(mod->getContext(), "if.then.i",func__ZNSs4_Rep10_M_disposeERKSaIcE,0);
 BasicBlock* label_if_else_i = BasicBlock::Create(mod->getContext(), "if.else.i",func__ZNSs4_Rep10_M_disposeERKSaIcE,0);
 BasicBlock* label_invoke_cont_281 = BasicBlock::Create(mod->getContext(), "invoke.cont",func__ZNSs4_Rep10_M_disposeERKSaIcE,0);
 BasicBlock* label_if_then4 = BasicBlock::Create(mod->getContext(), "if.then4",func__ZNSs4_Rep10_M_disposeERKSaIcE,0);
 BasicBlock* label_if_end5 = BasicBlock::Create(mod->getContext(), "if.end5",func__ZNSs4_Rep10_M_disposeERKSaIcE,0);
 
 // Block entry (label_entry_280)
 ICmpInst* int1_cmp = new ICmpInst(*label_entry_280, ICmpInst::ICMP_EQ, ptr_this, const_ptr_79, "cmp");
 BranchInst::Create(label_if_end5, label_if_then, int1_cmp, label_entry_280);
 
 // Block if.then (label_if_then)
 std::vector<Value*> ptr__M_refcount_indices;
 ptr__M_refcount_indices.push_back(const_int64_61);
 ptr__M_refcount_indices.push_back(const_int32_62);
 ptr__M_refcount_indices.push_back(const_int32_80);
 Instruction* ptr__M_refcount = GetElementPtrInst::Create(ptr_this, ptr__M_refcount_indices, "_M_refcount", label_if_then);
 BranchInst::Create(label_if_then_i, label_if_else_i, const_int1_81, label_if_then);
 
 // Block if.then.i (label_if_then_i)
 AtomicRMWInst* int32_284 = new AtomicRMWInst(AtomicRMWInst::Add, ptr__M_refcount, const_int32_83, AcquireRelease, CrossThread, label_if_then_i);
 int32_284->setName("");
 int32_284->setVolatile(true);
 BranchInst::Create(label_invoke_cont_281, label_if_then_i);
 
 // Block if.else.i (label_if_else_i)
 LoadInst* int32_286 = new LoadInst(ptr__M_refcount, "", false, label_if_else_i);
 int32_286->setAlignment(4);
 BinaryOperator* int32_add_i_i = BinaryOperator::Create(Instruction::Add, int32_286, const_int32_83, "add.i.i", label_if_else_i);
 StoreInst* void_287 = new StoreInst(int32_add_i_i, ptr__M_refcount, false, label_if_else_i);
 void_287->setAlignment(4);
 BranchInst::Create(label_invoke_cont_281, label_if_else_i);
 
 // Block invoke.cont (label_invoke_cont_281)
 PHINode* int32_retval_0_i = PHINode::Create(IntegerType::get(mod->getContext(), 32), 2, "retval.0.i", label_invoke_cont_281);
 int32_retval_0_i->addIncoming(int32_284, label_if_then_i);
 int32_retval_0_i->addIncoming(int32_286, label_if_else_i);
 
 ICmpInst* int1_cmp3 = new ICmpInst(*label_invoke_cont_281, ICmpInst::ICMP_SLT, int32_retval_0_i, const_int32_59, "cmp3");
 BranchInst::Create(label_if_then4, label_if_end5, int1_cmp3, label_invoke_cont_281);
 
 // Block if.then4 (label_if_then4)
 std::vector<Value*> void_290_params;
 void_290_params.push_back(ptr_this);
 void_290_params.push_back(ptr___a);
 CallInst* void_290 = CallInst::Create(func__ZNSs4_Rep10_M_destroyERKSaIcE, void_290_params, "", label_if_then4);
 void_290->setCallingConv(CallingConv::C);
 void_290->setTailCall(true);
 AttributeSet void_290_PAL;
 {
  SmallVector<AttributeSet, 4> Attrs;
  AttributeSet PAS;
   {
    AttrBuilder B;
    PAS = AttributeSet::get(mod->getContext(), 2U, B);
   }
  
  Attrs.push_back(PAS);
  {
   AttrBuilder B;
   B.addAttribute(Attribute::NoUnwind);
   B.addAttribute(Attribute::OptimizeForSize);
   PAS = AttributeSet::get(mod->getContext(), ~0U, B);
  }
 
 Attrs.push_back(PAS);
 void_290_PAL = AttributeSet::get(mod->getContext(), Attrs);
 
}
void_290->setAttributes(void_290_PAL);

BranchInst::Create(label_if_end5, label_if_then4);

// Block if.end5 (label_if_end5)
ReturnInst::Create(mod->getContext(), label_if_end5);

}

// Function: _GLOBAL__sub_I_main.cpp (func__GLOBAL__sub_I_main_cpp)
{
 
 BasicBlock* label_entry_293 = BasicBlock::Create(mod->getContext(), "entry",func__GLOBAL__sub_I_main_cpp,0);
 
 // Block entry (label_entry_293)
 CallInst* void_294 = CallInst::Create(func__ZNSt8ios_base4InitC1Ev, gvar_struct__ZStL8__ioinit, "", label_entry_293);
 void_294->setCallingConv(CallingConv::C);
 void_294->setTailCall(true);
 AttributeSet void_294_PAL;
 {
  SmallVector<AttributeSet, 4> Attrs;
  AttributeSet PAS;
   {
    AttrBuilder B;
    B.addAttribute(Attribute::OptimizeForSize);
    PAS = AttributeSet::get(mod->getContext(), ~0U, B);
   }
  
  Attrs.push_back(PAS);
  void_294_PAL = AttributeSet::get(mod->getContext(), Attrs);
  
 }
 void_294->setAttributes(void_294_PAL);
 
 std::vector<Value*> int32_295_params;
 int32_295_params.push_back(const_ptr_84);
 int32_295_params.push_back(const_ptr_85);
 int32_295_params.push_back(gvar_int8___dso_handle);
 CallInst* int32_295 = CallInst::Create(func___cxa_atexit, int32_295_params, "", label_entry_293);
 int32_295->setCallingConv(CallingConv::C);
 int32_295->setTailCall(true);
 AttributeSet int32_295_PAL;
 {
  SmallVector<AttributeSet, 4> Attrs;
  AttributeSet PAS;
   {
    AttrBuilder B;
    B.addAttribute(Attribute::NoUnwind);
    PAS = AttributeSet::get(mod->getContext(), ~0U, B);
   }
  
  Attrs.push_back(PAS);
  int32_295_PAL = AttributeSet::get(mod->getContext(), Attrs);
  
 }
 int32_295->setAttributes(int32_295_PAL);
 
 ReturnInst::Create(mod->getContext(), label_entry_293);
 
}

return mod;
}
