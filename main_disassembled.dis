
main.o:     file format elf64-x86-64

Contents of section .text:
 0000 554889e5 4883ec10 488d7df8 488d75f4  UH..H...H.}.H.u.
 0010 c745f401 000000e8 00000000 488d7df8  .E..........H.}.
 0020 e8000000 004883c4 105dc30f 1f440000  .....H...]...D..
 0030 554889e5 4881eca0 00000048 8d45f848  UH..H......H.E.H
 0040 b9000000 00000000 004c8d45 e8897d84  .........L.E..}.
 0050 4889c748 89b578ff ffff4889 ce488995  H..H..x...H..H..
 0060 70ffffff 4c89c2e8 00000000 488d7df0  p...L.......H.}.
 0070 48be0000 00000000 0000488d 55e0e800  H.........H.U...
 0080 00000048 8d7df048 8d75f8ba 05000000  ...H.}.H.u......
 0090 e8000000 008b5584 8955dc48 8b8d78ff  ......U..U.H..x.
 00a0 ffff4889 4dd0488b b570ffff ff488975  ..H.M.H..p...H.u
 00b0 c8c745c4 00000000 48898568 ffffff31  ..E.....H..h...1
 00c0 f6488bbd 68ffffff e8000000 008b45c4  .H..h.........E.
 00d0 3b45dc0f 8d5c0200 000f57c0 f20f1145  ;E...\....W....E
 00e0 b88b45c4 8945b4be 01000000 488bbd68  ..E..E......H..h
 00f0 ffffffe8 00000000 8b45b43b 45dc0f8d  .........E.;E...
 0100 c0000000 0f57c0f2 0f1145a8 c745a400  .....W....E..E..
 0110 000000be 02000000 488bbd68 ffffffe8  ........H..h....
 0120 00000000 8b45a43b 45c40f8d 44000000  .....E.;E...D...
 0130 8b45b40f af45dc03 45a44863 c8488b55  .E...E..E.Hc.H.U
 0140 c8f20f10 04ca8b45 a40faf45 dc0345c4  .......E...E..E.
 0150 4863c848 8b55c8f2 0f5904ca f20f5845  Hc.H.U...Y....XE
 0160 a8f20f11 45a88b45 a483c001 8945a4e9  ....E..E.....E..
 0170 b0ffffff be020000 00488bbd 68ffffff  .........H..h...
 0180 e8000000 008b45b4 0faf45dc 0345c448  ......E...E..E.H
 0190 63c8488b 55d0f20f 1004caf2 0f5c45a8  c.H.U........\E.
 01a0 8b45b40f af45dc03 45c44863 c8488b55  .E...E..E.Hc.H.U
 01b0 c8f20f11 04ca8b45 b483c001 8945b4e9  .......E.....E..
 01c0 34ffffff be010000 00488bbd 68ffffff  4........H..h...
 01d0 e8000000 00f20f2a 45dc4863 45c4488b  .......*E.HcE.H.
 01e0 4dd0f20f 5904c1f2 0f5845b8 f20f1145  M...Y....XE....E
 01f0 b88b55c4 83c20189 55a0be03 00000048  ..U.....U......H
 0200 8bbd68ff ffffe800 0000008b 45a03b45  ..h.........E.;E
 0210 dc0f8dd6 0000000f 57c0f20f 114598c7  ........W....E..
 0220 45940000 0000be04 00000048 8bbd68ff  E..........H..h.
 0230 ffffe800 0000008b 45943b45 c40f8d44  ........E.;E...D
 0240 0000008b 45c40faf 45dc0345 944863c8  ....E...E..E.Hc.
 0250 488b55c8 f20f1004 ca8b4594 0faf45dc  H.U.......E...E.
 0260 0345a048 63c8488b 55c8f20f 5904caf2  .E.Hc.H.U...Y...
 0270 0f584598 f20f1145 988b4594 83c00189  .XE....E..E.....
 0280 4594e9b0 ffffffbe 04000000 488bbd68  E...........H..h
 0290 ffffffe8 00000000 8b45c40f af45dc03  .........E...E..
 02a0 45a04863 c8488b55 d0f20f10 04caf20f  E.Hc.H.U........
 02b0 5c45988b 45c40faf 45dc0345 c44863c8  \E..E...E..E.Hc.
 02c0 488b55c8 f20f5e04 ca8b45c4 0faf45dc  H.U...^...E...E.
 02d0 0345a048 63c8488b 55c8f20f 1104ca8b  .E.Hc.H.U.......
 02e0 45a083c0 018945a0 e91effff ffbe0300  E.....E.........
 02f0 0000488b bd68ffff ffe80000 0000f20f  ..H..h..........
 0300 10042500 00000048 6345c448 8b4dc8f2  ..%....HcE.H.M..
 0310 0f5904c1 f20f2a4d dcf20f59 c1f20f58  .Y....*M...Y...X
 0320 45b8f20f 1145b88b 45c483c0 018945c4  E....E..E.....E.
 0330 e998fdff ff31f648 8bbd68ff ffffe800  .....1.H..h.....
 0340 00000048 8b45d0f2 0f10008b 4ddcc1e1  ...H.E......M...
 0350 014863c1 488b55c8 f20f5904 c2f20f11  .Hc.H.U...Y.....
 0360 45884881 c4a00000 005dc30f 1f440000  E.H......]...D..
 0370 554889e5 4881eca0 000000c7 45fc0000  UH..H.......E...
 0380 0000897d f8488975 f0488b76 08488d45  ...}.H.u.H.v.H.E
 0390 d84889c7 488975a0 48894598 e8000000  .H..H.u.H.E.....
 03a0 00488d7d e0488b75 a0488b55 98e80000  .H.}.H.u.H.U....
 03b0 0000e900 00000031 c089c648 8d7de0ba  .......1...H.}..
 03c0 0a000000 e8000000 00894594 e9000000  ..........E.....
 03d0 00488d7d e0e80000 0000488d 7dd8e800  .H.}......H.}...
 03e0 0000008b 45948945 ec0fafc0 4898b908  ....E..E....H...
 03f0 00000089 cf48f7e7 48c7c2ff ffffff48  .....H..H......H
 0400 0f40c248 897d8848 89c74889 5580e800  .@.H.}.H..H.U...
 0410 00000048 8945c08b 4dec0faf c94863c1  ...H.E..M....Hc.
 0420 488b5588 48f7e248 8b558048 0f40c248  H.U.H..H.U.H.@.H
 0430 89c7e800 00000048 8945b848 8d45a848  .......H.E.H.E.H
 0440 89c74889 8578ffff ffe80000 0000b900  ..H..x..........
 0450 00000089 ce488d7d b0488b95 78ffffff  .....H.}.H..x...
 0460 e8000000 00e90000 0000488d 7da8e800  ..........H.}...
 0470 0000008b 7dec488b 75c0488b 55b8e8ad  ....}.H.u.H.U...
 0480 fbffffe9 00000000 488b45c0 4883f800  ........H.E.H...
 0490 48898570 ffffff0f 840f0000 00488b85  H..p.........H..
 04a0 70ffffff 4889c7e8 00000000 488b45b8  p...H.......H.E.
 04b0 4883f800 48898568 ffffff0f 840f0000  H...H..h........
 04c0 00488b85 68ffffff 4889c7e8 00000000  .H..h...H.......
 04d0 488d7db0 c745fc00 000000e8 00000000  H.}..E..........
 04e0 8b45fc48 81c4a000 00005dc3 89d14889  .E.H......]...H.
 04f0 45d0894d cce91200 0000488d 7de089d1  E..M......H.}...
 0500 488945d0 894dcce8 00000000 488d7dd8  H.E..M......H.}.
 0510 e8000000 00e92900 0000488d 7da889d1  ......)...H.}...
 0520 488945d0 894dcce8 00000000 e9120000  H.E..M..........
 0530 00488d7d b089d148 8945d089 4dcce800  .H.}...H.E..M...
 0540 00000048 8b7dd0e8 00000000           ...H.}......    
Contents of section .text.startup:
 0000 554889e5 4883ec10 48bf0000 00000000  UH..H...H.......
 0010 0000e800 00000048 bf000000 00000000  .......H........
 0020 0048be00 00000000 00000048 ba000000  .H.........H....
 0030 00000000 00e80000 00008945 fc4883c4  ...........E.H..
 0040 105dc366 6666662e 0f1f8400 00000000  .].ffff.........
 0050 554889e5 e8a7ffff ff5dc3             UH.......].     
Contents of section .group:
 0000 01000000 09000000                    ........        
Contents of section .text:
 0000 554889e5 4883ec40 48897df8 488b7df8  UH..H..@H.}.H.}.
 0010 e8000000 00488d75 f0488945 f0488b7d  .....H.u.H.E.H.}
 0020 f8e80000 0000488d 7de04889 45e0e800  ......H.}.H.E...
 0030 00000048 8d7df048 8945e8e8 00000000  ...H.}.H.E......
 0040 488d7de8 488945d0 e8000000 00488d7d  H.}.H.E......H.}
 0050 d031c989 ce488945 d8e80000 00008945  .1...H.E.......E
 0060 cc4883c4 405dc3                      .H..@].         
Contents of section .group:
 0000 01000000 0c000000                    ........        
Contents of section .text:
 0000 554889e5 48897df8 488975f0 488b75f8  UH..H.}.H.u.H.u.
 0010 488b7df0 48633f48 893e5dc3           H.}.Hc?H.>].    
Contents of section .rodata.cst8:
 0000 00000000 00000040                    .......@        
Contents of section .gcc_except_table:
 0000 ff03d000 034e3100 00001100 00007c01  .....N1.......|.
 0010 00000047 00000012 0000008a 01000000  ...G............
 0020 59000000 85000000 00000000 00de0000  Y...............
 0030 00170000 00aa0100 00000e01 00000500  ................
 0040 0000c101 00000013 010000c9 00000000  ................
 0050 00000000                             ....            
Contents of section .group:
 0000 01000000 10000000                    ........        
Contents of section .text:
 0000 554889e5 4883ec20 48897df8 488975f0  UH..H.. H.}.H.u.
 0010 8955ec48 8b7df8e8 00000000 48bf0000  .U.H.}......H...
 0020 00000000 000048be 00000000 00000000  ......H.........
 0030 488b4df0 448b45ec 4889c2e8 00000000  H.M.D.E.H.......
 0040 4883c420 5dc3                        H.. ].          
Contents of section .group:
 0000 01000000 13000000                    ........        
Contents of section .text:
 0000 554889e5 4883ec40 48897df8 488975f0  UH..H..@H.}.H.u.
 0010 488955e8 48894de0 448945dc e8000000  H.U.H.M.D.E.....
 0020 00488d75 d0c70000 00000048 8b45f848  .H.u.......H.E.H
 0030 8b7de88b 55dcffd0 488945c8 488b45d0  .}..U...H.E.H.E.
 0040 483b45e8 0f850900 0000488b 7df0e800  H;E.......H.}...
 0050 000000e8 00000000 8338220f 841c0000  .........8".....
 0060 0048817d c8000000 800f8c0e 00000048  .H.}...........H
 0070 817dc8ff ffff7f0f 8e090000 00488b7d  .}...........H.}
 0080 f0e80000 0000488b 45c889c1 894dd8e9  ......H.E....M..
 0090 00000000 48837de0 000f8412 00000048  ....H.}........H
 00a0 8b45d048 8b4de848 29c8488b 4de04889  .E.H.M.H).H.M.H.
 00b0 018b45d8 4883c440 5dc3               ..E.H..@].      
Contents of section .group:
 0000 01000000 16000000                    ........        
Contents of section .text:
 0000 554889e5 4883ec10 48897df0 488b7df0  UH..H...H.}.H.}.
 0010 e8000000 00488945 f8488b45 f84883c4  .....H.E.H.E.H..
 0020 105dc3                               .].             
Contents of section .group:
 0000 01000000 19000000                    ........        
Contents of section .text:
 0000 554889e5 4883ec10 48897df0 488b7df0  UH..H...H.}.H.}.
 0010 e8000000 00488945 f8488b45 f84883c4  .....H.E.H.E.H..
 0020 105dc3                               .].             
Contents of section .group:
 0000 01000000 1c000000                    ........        
Contents of section .text:
 0000 554889e5 4883ec40 488d45d8 48897df0  UH..H..@H.E.H.}.
 0010 488975e8 488b75f0 488b3648 8975d848  H.u.H.u.H.6H.u.H
 0020 89c7e800 00000048 8d7dd048 8b75e848  .......H.}.H.u.H
 0030 8b364889 75d04889 45c8e800 00000048  .6H.u.H.E......H
 0040 8d7df848 8d75e048 8b4dc848 29c14889  .}.H.u.H.M.H).H.
 0050 4de0e800 00000048 8b45f848 83c4405d  M......H.E.H..@]
 0060 c3                                   .               
Contents of section .group:
 0000 01000000 1f000000                    ........        
Contents of section .text:
 0000 554889e5 48897df8 488b7df8 488b075d  UH..H.}.H.}.H..]
 0010 c3                                   .               
Contents of section .group:
 0000 01000000 21000000                    ....!...        
Contents of section .text:
 0000 554889e5 48897df8 488b7df8 488b075d  UH..H.}.H.}.H..]
 0010 c3                                   .               
Contents of section .group:
 0000 01000000 23000000                    ....#...        
Contents of section .text:
 0000 554889e5 4883ec20 48897df0 488b7df0  UH..H.. H.}.H.}.
 0010 e8000000 00488d7d f8488d75 e8488945  .....H.}.H.u.H.E
 0020 e8e80000 0000488b 45f84883 c4205dc3  ......H.E.H.. ].
Contents of section .group:
 0000 01000000 26000000                    ....&...        
Contents of section .text:
 0000 554889e5 48897df8 488975f0 488b75f8  UH..H.}.H.u.H.u.
 0010 488b7df0 488b3f48 893e5dc3           H.}.H.?H.>].    
Contents of section .group:
 0000 01000000 28000000                    ....(...        
Contents of section .text:
 0000 554889e5 4883ec20 48897df0 488b7df0  UH..H.. H.}.H.}.
 0010 e8000000 00488d7d f8488d75 e84869c0  .....H.}.H.u.Hi.
 0020 00ca9a3b 488945e8 e8000000 00488b45  ...;H.E......H.E
 0030 f84883c4 205dc3                      .H.. ].         
Contents of section .group:
 0000 01000000 2b000000                    ....+...        
Contents of section .text:
 0000 554889e5 48897df8 488975f0 488b75f8  UH..H.}.H.u.H.u.
 0010 488b7df0 488b3f48 893e5dc3           H.}.H.?H.>].    
Contents of section .rodata.str1.1:
 0000 61626364 65666700 73746f69 00        abcdefg.stoi.   
Contents of section .init_array:
 0000 00000000 00000000                    ........        
Contents of section .rodata:
 0000 6d61696e 2e637070 005f5a31 32746573  main.cpp._Z12tes
 0010 7446756e 6374696f 6e695064 535f00    tFunctioniPdS_. 
Contents of section .comment:
 0000 00636c61 6e672076 65727369 6f6e2033  .clang version 3
 0010 2e372e30 20286874 74703a2f 2f6c6c76  .7.0 (http://llv
 0020 6d2e6f72 672f6769 742f636c 616e672e  m.org/git/clang.
 0030 67697420 39613963 38376261 61643437  git 9a9c87baad47
 0040 39333761 61613166 36636137 38666137  937aaa1f6ca78fa7
 0050 39396162 33316539 37306166 29202868  99ab31e970af) (h
 0060 7474703a 2f2f6c6c 766d2e6f 72672f67  ttp://llvm.org/g
 0070 69742f6c 6c766d2e 67697420 33323637  it/llvm.git 3267
 0080 35626266 64306337 39663637 38363563  5bbfd0c79f67865c
 0090 30393939 64386339 30613331 38343865  0999d8c90a31848e
 00a0 65363438 2900                        e648).          
Contents of section .eh_frame:
 0000 14000000 00000000 017a5200 01781001  .........zR..x..
 0010 1b0c0708 90010000 18000000 1c000000  ................
 0020 00000000 43000000 00410e10 8602430d  ....C....A....C.
 0030 06000000 18000000 38000000 00000000  ........8.......
 0040 2b000000 00410e10 8602430d 06000000  +....A....C.....
 0050 18000000 54000000 00000000 67000000  ....T.......g...
 0060 00410e10 8602430d 06000000 18000000  .A....C.........
 0070 70000000 00000000 1c000000 00410e10  p............A..
 0080 8602430d 06000000 18000000 8c000000  ..C.............
 0090 00000000 3b030000 00410e10 8602430d  ....;....A....C.
 00a0 06000000 1c000000 00000000 017a504c  .............zPL
 00b0 52000178 10070300 00000003 1b0c0708  R..x............
 00c0 90010000 1c000000 24000000 00000000  ........$.......
 00d0 dc010000 04000000 00410e10 8602430d  .........A....C.
 00e0 06000000 18000000 e8000000 00000000  ................
 00f0 46000000 00410e10 8602430d 06000000  F....A....C.....
 0100 18000000 04010000 00000000 ba000000  ................
 0110 00410e10 8602430d 06000000 18000000  .A....C.........
 0120 20010000 00000000 23000000 00410e10   .......#....A..
 0130 8602430d 06000000 18000000 3c010000  ..C.........<...
 0140 00000000 23000000 00410e10 8602430d  ....#....A....C.
 0150 06000000 18000000 58010000 00000000  ........X.......
 0160 61000000 00410e10 8602430d 06000000  a....A....C.....
 0170 18000000 74010000 00000000 11000000  ....t...........
 0180 00410e10 8602430d 06000000 18000000  .A....C.........
 0190 90010000 00000000 11000000 00410e10  .............A..
 01a0 8602430d 06000000 18000000 ac010000  ..C.............
 01b0 00000000 30000000 00410e10 8602430d  ....0....A....C.
 01c0 06000000 18000000 c8010000 00000000  ................
 01d0 1c000000 00410e10 8602430d 06000000  .....A....C.....
 01e0 18000000 e4010000 00000000 37000000  ............7...
 01f0 00410e10 8602430d 06000000 18000000  .A....C.........
 0200 00020000 00000000 1c000000 00410e10  .............A..
 0210 8602430d 06000000 1c000000 1c020000  ..C.............
 0220 00000000 0b000000 00410e10 8602430d  .........A....C.
 0230 06000000 00000000                    ........        

Disassembly of section .text:

0000000000000000 <doesNothingButSleep()>:
_Z19doesNothingButSleepv():
   0:	55                   	push   %rbp
   1:	48 89 e5             	mov    %rsp,%rbp
   4:	48 83 ec 10          	sub    $0x10,%rsp
   8:	48 8d 7d f8          	lea    -0x8(%rbp),%rdi
   c:	48 8d 75 f4          	lea    -0xc(%rbp),%rsi
  10:	c7 45 f4 01 00 00 00 	movl   $0x1,-0xc(%rbp)
  17:	e8 00 00 00 00       	callq  1c <doesNothingButSleep()+0x1c>
			18: R_X86_64_PC32	std::chrono::duration<long, std::ratio<1l, 1l> >::duration<int, void>(int const&)-0x4
  1c:	48 8d 7d f8          	lea    -0x8(%rbp),%rdi
  20:	e8 00 00 00 00       	callq  25 <doesNothingButSleep()+0x25>
			21: R_X86_64_PC32	void std::this_thread::sleep_for<long, std::ratio<1l, 1l> >(std::chrono::duration<long, std::ratio<1l, 1l> > const&)-0x4
  25:	48 83 c4 10          	add    $0x10,%rsp
  29:	5d                   	pop    %rbp
  2a:	c3                   	retq   
  2b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000000030 <testFunction(int, double*, double*)>:
_Z12testFunctioniPdS_():
  30:	55                   	push   %rbp
  31:	48 89 e5             	mov    %rsp,%rbp
  34:	48 81 ec a0 00 00 00 	sub    $0xa0,%rsp
  3b:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
  3f:	48 b9 00 00 00 00 00 	movabs $0x0,%rcx
  46:	00 00 00 
			41: R_X86_64_64	.rodata+0x9
  49:	4c 8d 45 e8          	lea    -0x18(%rbp),%r8
  4d:	89 7d 84             	mov    %edi,-0x7c(%rbp)
  50:	48 89 c7             	mov    %rax,%rdi
  53:	48 89 b5 78 ff ff ff 	mov    %rsi,-0x88(%rbp)
  5a:	48 89 ce             	mov    %rcx,%rsi
  5d:	48 89 95 70 ff ff ff 	mov    %rdx,-0x90(%rbp)
  64:	4c 89 c2             	mov    %r8,%rdx
  67:	e8 00 00 00 00       	callq  6c <testFunction(int, double*, double*)+0x3c>
			68: R_X86_64_PC32	std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&)-0x4
  6c:	48 8d 7d f0          	lea    -0x10(%rbp),%rdi
  70:	48 be 00 00 00 00 00 	movabs $0x0,%rsi
  77:	00 00 00 
			72: R_X86_64_64	.rodata
  7a:	48 8d 55 e0          	lea    -0x20(%rbp),%rdx
  7e:	e8 00 00 00 00       	callq  83 <testFunction(int, double*, double*)+0x53>
			7f: R_X86_64_PC32	std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&)-0x4
  83:	48 8d 7d f0          	lea    -0x10(%rbp),%rdi
  87:	48 8d 75 f8          	lea    -0x8(%rbp),%rsi
  8b:	ba 05 00 00 00       	mov    $0x5,%edx
  90:	e8 00 00 00 00       	callq  95 <testFunction(int, double*, double*)+0x65>
			91: R_X86_64_PC32	_metric_capture_long_double_timer_setup_-0x4
  95:	8b 55 84             	mov    -0x7c(%rbp),%edx
  98:	89 55 dc             	mov    %edx,-0x24(%rbp)
  9b:	48 8b 8d 78 ff ff ff 	mov    -0x88(%rbp),%rcx
  a2:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
  a6:	48 8b b5 70 ff ff ff 	mov    -0x90(%rbp),%rsi
  ad:	48 89 75 c8          	mov    %rsi,-0x38(%rbp)
  b1:	c7 45 c4 00 00 00 00 	movl   $0x0,-0x3c(%rbp)
  b8:	48 89 85 68 ff ff ff 	mov    %rax,-0x98(%rbp)
  bf:	31 f6                	xor    %esi,%esi
  c1:	48 8b bd 68 ff ff ff 	mov    -0x98(%rbp),%rdi
  c8:	e8 00 00 00 00       	callq  cd <testFunction(int, double*, double*)+0x9d>
			c9: R_X86_64_PC32	_metric_capture_start_-0x4
  cd:	8b 45 c4             	mov    -0x3c(%rbp),%eax
  d0:	3b 45 dc             	cmp    -0x24(%rbp),%eax
  d3:	0f 8d 5c 02 00 00    	jge    335 <testFunction(int, double*, double*)+0x305>
  d9:	0f 57 c0             	xorps  %xmm0,%xmm0
  dc:	f2 0f 11 45 b8       	movsd  %xmm0,-0x48(%rbp)
  e1:	8b 45 c4             	mov    -0x3c(%rbp),%eax
  e4:	89 45 b4             	mov    %eax,-0x4c(%rbp)
  e7:	be 01 00 00 00       	mov    $0x1,%esi
  ec:	48 8b bd 68 ff ff ff 	mov    -0x98(%rbp),%rdi
  f3:	e8 00 00 00 00       	callq  f8 <testFunction(int, double*, double*)+0xc8>
			f4: R_X86_64_PC32	_metric_capture_start_-0x4
  f8:	8b 45 b4             	mov    -0x4c(%rbp),%eax
  fb:	3b 45 dc             	cmp    -0x24(%rbp),%eax
  fe:	0f 8d c0 00 00 00    	jge    1c4 <testFunction(int, double*, double*)+0x194>
 104:	0f 57 c0             	xorps  %xmm0,%xmm0
 107:	f2 0f 11 45 a8       	movsd  %xmm0,-0x58(%rbp)
 10c:	c7 45 a4 00 00 00 00 	movl   $0x0,-0x5c(%rbp)
 113:	be 02 00 00 00       	mov    $0x2,%esi
 118:	48 8b bd 68 ff ff ff 	mov    -0x98(%rbp),%rdi
 11f:	e8 00 00 00 00       	callq  124 <testFunction(int, double*, double*)+0xf4>
			120: R_X86_64_PC32	_metric_capture_start_-0x4
 124:	8b 45 a4             	mov    -0x5c(%rbp),%eax
 127:	3b 45 c4             	cmp    -0x3c(%rbp),%eax
 12a:	0f 8d 44 00 00 00    	jge    174 <testFunction(int, double*, double*)+0x144>
 130:	8b 45 b4             	mov    -0x4c(%rbp),%eax
 133:	0f af 45 dc          	imul   -0x24(%rbp),%eax
 137:	03 45 a4             	add    -0x5c(%rbp),%eax
 13a:	48 63 c8             	movslq %eax,%rcx
 13d:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
 141:	f2 0f 10 04 ca       	movsd  (%rdx,%rcx,8),%xmm0
 146:	8b 45 a4             	mov    -0x5c(%rbp),%eax
 149:	0f af 45 dc          	imul   -0x24(%rbp),%eax
 14d:	03 45 c4             	add    -0x3c(%rbp),%eax
 150:	48 63 c8             	movslq %eax,%rcx
 153:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
 157:	f2 0f 59 04 ca       	mulsd  (%rdx,%rcx,8),%xmm0
 15c:	f2 0f 58 45 a8       	addsd  -0x58(%rbp),%xmm0
 161:	f2 0f 11 45 a8       	movsd  %xmm0,-0x58(%rbp)
 166:	8b 45 a4             	mov    -0x5c(%rbp),%eax
 169:	83 c0 01             	add    $0x1,%eax
 16c:	89 45 a4             	mov    %eax,-0x5c(%rbp)
 16f:	e9 b0 ff ff ff       	jmpq   124 <testFunction(int, double*, double*)+0xf4>
 174:	be 02 00 00 00       	mov    $0x2,%esi
 179:	48 8b bd 68 ff ff ff 	mov    -0x98(%rbp),%rdi
 180:	e8 00 00 00 00       	callq  185 <testFunction(int, double*, double*)+0x155>
			181: R_X86_64_PC32	_metric_capture_stop_-0x4
 185:	8b 45 b4             	mov    -0x4c(%rbp),%eax
 188:	0f af 45 dc          	imul   -0x24(%rbp),%eax
 18c:	03 45 c4             	add    -0x3c(%rbp),%eax
 18f:	48 63 c8             	movslq %eax,%rcx
 192:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
 196:	f2 0f 10 04 ca       	movsd  (%rdx,%rcx,8),%xmm0
 19b:	f2 0f 5c 45 a8       	subsd  -0x58(%rbp),%xmm0
 1a0:	8b 45 b4             	mov    -0x4c(%rbp),%eax
 1a3:	0f af 45 dc          	imul   -0x24(%rbp),%eax
 1a7:	03 45 c4             	add    -0x3c(%rbp),%eax
 1aa:	48 63 c8             	movslq %eax,%rcx
 1ad:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
 1b1:	f2 0f 11 04 ca       	movsd  %xmm0,(%rdx,%rcx,8)
 1b6:	8b 45 b4             	mov    -0x4c(%rbp),%eax
 1b9:	83 c0 01             	add    $0x1,%eax
 1bc:	89 45 b4             	mov    %eax,-0x4c(%rbp)
 1bf:	e9 34 ff ff ff       	jmpq   f8 <testFunction(int, double*, double*)+0xc8>
 1c4:	be 01 00 00 00       	mov    $0x1,%esi
 1c9:	48 8b bd 68 ff ff ff 	mov    -0x98(%rbp),%rdi
 1d0:	e8 00 00 00 00       	callq  1d5 <testFunction(int, double*, double*)+0x1a5>
			1d1: R_X86_64_PC32	_metric_capture_stop_-0x4
 1d5:	f2 0f 2a 45 dc       	cvtsi2sdl -0x24(%rbp),%xmm0
 1da:	48 63 45 c4          	movslq -0x3c(%rbp),%rax
 1de:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
 1e2:	f2 0f 59 04 c1       	mulsd  (%rcx,%rax,8),%xmm0
 1e7:	f2 0f 58 45 b8       	addsd  -0x48(%rbp),%xmm0
 1ec:	f2 0f 11 45 b8       	movsd  %xmm0,-0x48(%rbp)
 1f1:	8b 55 c4             	mov    -0x3c(%rbp),%edx
 1f4:	83 c2 01             	add    $0x1,%edx
 1f7:	89 55 a0             	mov    %edx,-0x60(%rbp)
 1fa:	be 03 00 00 00       	mov    $0x3,%esi
 1ff:	48 8b bd 68 ff ff ff 	mov    -0x98(%rbp),%rdi
 206:	e8 00 00 00 00       	callq  20b <testFunction(int, double*, double*)+0x1db>
			207: R_X86_64_PC32	_metric_capture_start_-0x4
 20b:	8b 45 a0             	mov    -0x60(%rbp),%eax
 20e:	3b 45 dc             	cmp    -0x24(%rbp),%eax
 211:	0f 8d d6 00 00 00    	jge    2ed <testFunction(int, double*, double*)+0x2bd>
 217:	0f 57 c0             	xorps  %xmm0,%xmm0
 21a:	f2 0f 11 45 98       	movsd  %xmm0,-0x68(%rbp)
 21f:	c7 45 94 00 00 00 00 	movl   $0x0,-0x6c(%rbp)
 226:	be 04 00 00 00       	mov    $0x4,%esi
 22b:	48 8b bd 68 ff ff ff 	mov    -0x98(%rbp),%rdi
 232:	e8 00 00 00 00       	callq  237 <testFunction(int, double*, double*)+0x207>
			233: R_X86_64_PC32	_metric_capture_start_-0x4
 237:	8b 45 94             	mov    -0x6c(%rbp),%eax
 23a:	3b 45 c4             	cmp    -0x3c(%rbp),%eax
 23d:	0f 8d 44 00 00 00    	jge    287 <testFunction(int, double*, double*)+0x257>
 243:	8b 45 c4             	mov    -0x3c(%rbp),%eax
 246:	0f af 45 dc          	imul   -0x24(%rbp),%eax
 24a:	03 45 94             	add    -0x6c(%rbp),%eax
 24d:	48 63 c8             	movslq %eax,%rcx
 250:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
 254:	f2 0f 10 04 ca       	movsd  (%rdx,%rcx,8),%xmm0
 259:	8b 45 94             	mov    -0x6c(%rbp),%eax
 25c:	0f af 45 dc          	imul   -0x24(%rbp),%eax
 260:	03 45 a0             	add    -0x60(%rbp),%eax
 263:	48 63 c8             	movslq %eax,%rcx
 266:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
 26a:	f2 0f 59 04 ca       	mulsd  (%rdx,%rcx,8),%xmm0
 26f:	f2 0f 58 45 98       	addsd  -0x68(%rbp),%xmm0
 274:	f2 0f 11 45 98       	movsd  %xmm0,-0x68(%rbp)
 279:	8b 45 94             	mov    -0x6c(%rbp),%eax
 27c:	83 c0 01             	add    $0x1,%eax
 27f:	89 45 94             	mov    %eax,-0x6c(%rbp)
 282:	e9 b0 ff ff ff       	jmpq   237 <testFunction(int, double*, double*)+0x207>
 287:	be 04 00 00 00       	mov    $0x4,%esi
 28c:	48 8b bd 68 ff ff ff 	mov    -0x98(%rbp),%rdi
 293:	e8 00 00 00 00       	callq  298 <testFunction(int, double*, double*)+0x268>
			294: R_X86_64_PC32	_metric_capture_stop_-0x4
 298:	8b 45 c4             	mov    -0x3c(%rbp),%eax
 29b:	0f af 45 dc          	imul   -0x24(%rbp),%eax
 29f:	03 45 a0             	add    -0x60(%rbp),%eax
 2a2:	48 63 c8             	movslq %eax,%rcx
 2a5:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
 2a9:	f2 0f 10 04 ca       	movsd  (%rdx,%rcx,8),%xmm0
 2ae:	f2 0f 5c 45 98       	subsd  -0x68(%rbp),%xmm0
 2b3:	8b 45 c4             	mov    -0x3c(%rbp),%eax
 2b6:	0f af 45 dc          	imul   -0x24(%rbp),%eax
 2ba:	03 45 c4             	add    -0x3c(%rbp),%eax
 2bd:	48 63 c8             	movslq %eax,%rcx
 2c0:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
 2c4:	f2 0f 5e 04 ca       	divsd  (%rdx,%rcx,8),%xmm0
 2c9:	8b 45 c4             	mov    -0x3c(%rbp),%eax
 2cc:	0f af 45 dc          	imul   -0x24(%rbp),%eax
 2d0:	03 45 a0             	add    -0x60(%rbp),%eax
 2d3:	48 63 c8             	movslq %eax,%rcx
 2d6:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
 2da:	f2 0f 11 04 ca       	movsd  %xmm0,(%rdx,%rcx,8)
 2df:	8b 45 a0             	mov    -0x60(%rbp),%eax
 2e2:	83 c0 01             	add    $0x1,%eax
 2e5:	89 45 a0             	mov    %eax,-0x60(%rbp)
 2e8:	e9 1e ff ff ff       	jmpq   20b <testFunction(int, double*, double*)+0x1db>
 2ed:	be 03 00 00 00       	mov    $0x3,%esi
 2f2:	48 8b bd 68 ff ff ff 	mov    -0x98(%rbp),%rdi
 2f9:	e8 00 00 00 00       	callq  2fe <testFunction(int, double*, double*)+0x2ce>
			2fa: R_X86_64_PC32	_metric_capture_stop_-0x4
 2fe:	f2 0f 10 04 25 00 00 	movsd  0x0,%xmm0
 305:	00 00 
			303: R_X86_64_32S	.rodata.cst8
 307:	48 63 45 c4          	movslq -0x3c(%rbp),%rax
 30b:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
 30f:	f2 0f 59 04 c1       	mulsd  (%rcx,%rax,8),%xmm0
 314:	f2 0f 2a 4d dc       	cvtsi2sdl -0x24(%rbp),%xmm1
 319:	f2 0f 59 c1          	mulsd  %xmm1,%xmm0
 31d:	f2 0f 58 45 b8       	addsd  -0x48(%rbp),%xmm0
 322:	f2 0f 11 45 b8       	movsd  %xmm0,-0x48(%rbp)
 327:	8b 45 c4             	mov    -0x3c(%rbp),%eax
 32a:	83 c0 01             	add    $0x1,%eax
 32d:	89 45 c4             	mov    %eax,-0x3c(%rbp)
 330:	e9 98 fd ff ff       	jmpq   cd <testFunction(int, double*, double*)+0x9d>
 335:	31 f6                	xor    %esi,%esi
 337:	48 8b bd 68 ff ff ff 	mov    -0x98(%rbp),%rdi
 33e:	e8 00 00 00 00       	callq  343 <testFunction(int, double*, double*)+0x313>
			33f: R_X86_64_PC32	_metric_capture_stop_-0x4
 343:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
 347:	f2 0f 10 00          	movsd  (%rax),%xmm0
 34b:	8b 4d dc             	mov    -0x24(%rbp),%ecx
 34e:	c1 e1 01             	shl    $0x1,%ecx
 351:	48 63 c1             	movslq %ecx,%rax
 354:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
 358:	f2 0f 59 04 c2       	mulsd  (%rdx,%rax,8),%xmm0
 35d:	f2 0f 11 45 88       	movsd  %xmm0,-0x78(%rbp)
 362:	48 81 c4 a0 00 00 00 	add    $0xa0,%rsp
 369:	5d                   	pop    %rbp
 36a:	c3                   	retq   
 36b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000000370 <main>:
main():
 370:	55                   	push   %rbp
 371:	48 89 e5             	mov    %rsp,%rbp
 374:	48 81 ec a0 00 00 00 	sub    $0xa0,%rsp
 37b:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
 382:	89 7d f8             	mov    %edi,-0x8(%rbp)
 385:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
 389:	48 8b 76 08          	mov    0x8(%rsi),%rsi
 38d:	48 8d 45 d8          	lea    -0x28(%rbp),%rax
 391:	48 89 c7             	mov    %rax,%rdi
 394:	48 89 75 a0          	mov    %rsi,-0x60(%rbp)
 398:	48 89 45 98          	mov    %rax,-0x68(%rbp)
 39c:	e8 00 00 00 00       	callq  3a1 <main+0x31>
			39d: R_X86_64_PC32	std::allocator<char>::allocator()-0x4
 3a1:	48 8d 7d e0          	lea    -0x20(%rbp),%rdi
 3a5:	48 8b 75 a0          	mov    -0x60(%rbp),%rsi
 3a9:	48 8b 55 98          	mov    -0x68(%rbp),%rdx
 3ad:	e8 00 00 00 00       	callq  3b2 <main+0x42>
			3ae: R_X86_64_PC32	std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&)-0x4
 3b2:	e9 00 00 00 00       	jmpq   3b7 <main+0x47>
 3b7:	31 c0                	xor    %eax,%eax
 3b9:	89 c6                	mov    %eax,%esi
 3bb:	48 8d 7d e0          	lea    -0x20(%rbp),%rdi
 3bf:	ba 0a 00 00 00       	mov    $0xa,%edx
 3c4:	e8 00 00 00 00       	callq  3c9 <main+0x59>
			3c5: R_X86_64_PC32	std::stoi(std::string const&, unsigned long*, int)-0x4
 3c9:	89 45 94             	mov    %eax,-0x6c(%rbp)
 3cc:	e9 00 00 00 00       	jmpq   3d1 <main+0x61>
 3d1:	48 8d 7d e0          	lea    -0x20(%rbp),%rdi
 3d5:	e8 00 00 00 00       	callq  3da <main+0x6a>
			3d6: R_X86_64_PC32	std::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string()-0x4
 3da:	48 8d 7d d8          	lea    -0x28(%rbp),%rdi
 3de:	e8 00 00 00 00       	callq  3e3 <main+0x73>
			3df: R_X86_64_PC32	std::allocator<char>::~allocator()-0x4
 3e3:	8b 45 94             	mov    -0x6c(%rbp),%eax
 3e6:	89 45 ec             	mov    %eax,-0x14(%rbp)
 3e9:	0f af c0             	imul   %eax,%eax
 3ec:	48 98                	cltq   
 3ee:	b9 08 00 00 00       	mov    $0x8,%ecx
 3f3:	89 cf                	mov    %ecx,%edi
 3f5:	48 f7 e7             	mul    %rdi
 3f8:	48 c7 c2 ff ff ff ff 	mov    $0xffffffffffffffff,%rdx
 3ff:	48 0f 40 c2          	cmovo  %rdx,%rax
 403:	48 89 7d 88          	mov    %rdi,-0x78(%rbp)
 407:	48 89 c7             	mov    %rax,%rdi
 40a:	48 89 55 80          	mov    %rdx,-0x80(%rbp)
 40e:	e8 00 00 00 00       	callq  413 <main+0xa3>
			40f: R_X86_64_PC32	operator new[](unsigned long)-0x4
 413:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
 417:	8b 4d ec             	mov    -0x14(%rbp),%ecx
 41a:	0f af c9             	imul   %ecx,%ecx
 41d:	48 63 c1             	movslq %ecx,%rax
 420:	48 8b 55 88          	mov    -0x78(%rbp),%rdx
 424:	48 f7 e2             	mul    %rdx
 427:	48 8b 55 80          	mov    -0x80(%rbp),%rdx
 42b:	48 0f 40 c2          	cmovo  %rdx,%rax
 42f:	48 89 c7             	mov    %rax,%rdi
 432:	e8 00 00 00 00       	callq  437 <main+0xc7>
			433: R_X86_64_PC32	operator new[](unsigned long)-0x4
 437:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
 43b:	48 8d 45 a8          	lea    -0x58(%rbp),%rax
 43f:	48 89 c7             	mov    %rax,%rdi
 442:	48 89 85 78 ff ff ff 	mov    %rax,-0x88(%rbp)
 449:	e8 00 00 00 00       	callq  44e <main+0xde>
			44a: R_X86_64_PC32	std::allocator<char>::allocator()-0x4
 44e:	b9 00 00 00 00       	mov    $0x0,%ecx
			44f: R_X86_64_32	.rodata.str1.1
 453:	89 ce                	mov    %ecx,%esi
 455:	48 8d 7d b0          	lea    -0x50(%rbp),%rdi
 459:	48 8b 95 78 ff ff ff 	mov    -0x88(%rbp),%rdx
 460:	e8 00 00 00 00       	callq  465 <main+0xf5>
			461: R_X86_64_PC32	std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&)-0x4
 465:	e9 00 00 00 00       	jmpq   46a <main+0xfa>
 46a:	48 8d 7d a8          	lea    -0x58(%rbp),%rdi
 46e:	e8 00 00 00 00       	callq  473 <main+0x103>
			46f: R_X86_64_PC32	std::allocator<char>::~allocator()-0x4
 473:	8b 7d ec             	mov    -0x14(%rbp),%edi
 476:	48 8b 75 c0          	mov    -0x40(%rbp),%rsi
 47a:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
 47e:	e8 ad fb ff ff       	callq  30 <testFunction(int, double*, double*)>
 483:	e9 00 00 00 00       	jmpq   488 <main+0x118>
 488:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
 48c:	48 83 f8 00          	cmp    $0x0,%rax
 490:	48 89 85 70 ff ff ff 	mov    %rax,-0x90(%rbp)
 497:	0f 84 0f 00 00 00    	je     4ac <main+0x13c>
 49d:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
 4a4:	48 89 c7             	mov    %rax,%rdi
 4a7:	e8 00 00 00 00       	callq  4ac <main+0x13c>
			4a8: R_X86_64_PC32	operator delete[](void*)-0x4
 4ac:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
 4b0:	48 83 f8 00          	cmp    $0x0,%rax
 4b4:	48 89 85 68 ff ff ff 	mov    %rax,-0x98(%rbp)
 4bb:	0f 84 0f 00 00 00    	je     4d0 <main+0x160>
 4c1:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
 4c8:	48 89 c7             	mov    %rax,%rdi
 4cb:	e8 00 00 00 00       	callq  4d0 <main+0x160>
			4cc: R_X86_64_PC32	operator delete[](void*)-0x4
 4d0:	48 8d 7d b0          	lea    -0x50(%rbp),%rdi
 4d4:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
 4db:	e8 00 00 00 00       	callq  4e0 <main+0x170>
			4dc: R_X86_64_PC32	std::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string()-0x4
 4e0:	8b 45 fc             	mov    -0x4(%rbp),%eax
 4e3:	48 81 c4 a0 00 00 00 	add    $0xa0,%rsp
 4ea:	5d                   	pop    %rbp
 4eb:	c3                   	retq   
 4ec:	89 d1                	mov    %edx,%ecx
 4ee:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
 4f2:	89 4d cc             	mov    %ecx,-0x34(%rbp)
 4f5:	e9 12 00 00 00       	jmpq   50c <main+0x19c>
 4fa:	48 8d 7d e0          	lea    -0x20(%rbp),%rdi
 4fe:	89 d1                	mov    %edx,%ecx
 500:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
 504:	89 4d cc             	mov    %ecx,-0x34(%rbp)
 507:	e8 00 00 00 00       	callq  50c <main+0x19c>
			508: R_X86_64_PC32	std::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string()-0x4
 50c:	48 8d 7d d8          	lea    -0x28(%rbp),%rdi
 510:	e8 00 00 00 00       	callq  515 <main+0x1a5>
			511: R_X86_64_PC32	std::allocator<char>::~allocator()-0x4
 515:	e9 29 00 00 00       	jmpq   543 <main+0x1d3>
 51a:	48 8d 7d a8          	lea    -0x58(%rbp),%rdi
 51e:	89 d1                	mov    %edx,%ecx
 520:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
 524:	89 4d cc             	mov    %ecx,-0x34(%rbp)
 527:	e8 00 00 00 00       	callq  52c <main+0x1bc>
			528: R_X86_64_PC32	std::allocator<char>::~allocator()-0x4
 52c:	e9 12 00 00 00       	jmpq   543 <main+0x1d3>
 531:	48 8d 7d b0          	lea    -0x50(%rbp),%rdi
 535:	89 d1                	mov    %edx,%ecx
 537:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
 53b:	89 4d cc             	mov    %ecx,-0x34(%rbp)
 53e:	e8 00 00 00 00       	callq  543 <main+0x1d3>
			53f: R_X86_64_PC32	std::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string()-0x4
 543:	48 8b 7d d0          	mov    -0x30(%rbp),%rdi
 547:	e8 00 00 00 00       	callq  54c <main+0x1dc>
			548: R_X86_64_PC32	_Unwind_Resume-0x4

Disassembly of section .text.startup:

0000000000000000 <__cxx_global_var_init>:
__cxx_global_var_init():
   0:	55                   	push   %rbp
   1:	48 89 e5             	mov    %rsp,%rbp
   4:	48 83 ec 10          	sub    $0x10,%rsp
   8:	48 bf 00 00 00 00 00 	movabs $0x0,%rdi
   f:	00 00 00 
			a: R_X86_64_64	.bss
  12:	e8 00 00 00 00       	callq  17 <__cxx_global_var_init+0x17>
			13: R_X86_64_PC32	std::ios_base::Init::Init()-0x4
  17:	48 bf 00 00 00 00 00 	movabs $0x0,%rdi
  1e:	00 00 00 
			19: R_X86_64_64	std::ios_base::Init::~Init()
  21:	48 be 00 00 00 00 00 	movabs $0x0,%rsi
  28:	00 00 00 
			23: R_X86_64_64	.bss
  2b:	48 ba 00 00 00 00 00 	movabs $0x0,%rdx
  32:	00 00 00 
			2d: R_X86_64_64	__dso_handle
  35:	e8 00 00 00 00       	callq  3a <__cxx_global_var_init+0x3a>
			36: R_X86_64_PC32	__cxa_atexit-0x4
  3a:	89 45 fc             	mov    %eax,-0x4(%rbp)
  3d:	48 83 c4 10          	add    $0x10,%rsp
  41:	5d                   	pop    %rbp
  42:	c3                   	retq   
  43:	66 66 66 66 2e 0f 1f 	data32 data32 data32 nopw %cs:0x0(%rax,%rax,1)
  4a:	84 00 00 00 00 00 

0000000000000050 <_GLOBAL__sub_I_main.cpp>:
_GLOBAL__sub_I_main.cpp():
  50:	55                   	push   %rbp
  51:	48 89 e5             	mov    %rsp,%rbp
  54:	e8 a7 ff ff ff       	callq  0 <__cxx_global_var_init>
  59:	5d                   	pop    %rbp
  5a:	c3                   	retq   

Disassembly of section .text:

0000000000000000 <void std::this_thread::sleep_for<long, std::ratio<1l, 1l> >(std::chrono::duration<long, std::ratio<1l, 1l> > const&)>:
_ZNSt11this_thread9sleep_forIlSt5ratioILl1ELl1EEEEvRKNSt6chrono8durationIT_T0_EE():
   0:	55                   	push   %rbp
   1:	48 89 e5             	mov    %rsp,%rbp
   4:	48 83 ec 40          	sub    $0x40,%rsp
   8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   c:	48 8b 7d f8          	mov    -0x8(%rbp),%rdi
  10:	e8 00 00 00 00       	callq  15 <void std::this_thread::sleep_for<long, std::ratio<1l, 1l> >(std::chrono::duration<long, std::ratio<1l, 1l> > const&)+0x15>
			11: R_X86_64_PC32	_ZNSt6chrono13duration_castINS_8durationIlSt5ratioILl1ELl1EEEElS3_EENSt9enable_ifIXsr13__is_durationIT_EE5valueES6_E4typeERKNS1_IT0_T1_EE-0x4
  15:	48 8d 75 f0          	lea    -0x10(%rbp),%rsi
  19:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  1d:	48 8b 7d f8          	mov    -0x8(%rbp),%rdi
  21:	e8 00 00 00 00       	callq  26 <void std::this_thread::sleep_for<long, std::ratio<1l, 1l> >(std::chrono::duration<long, std::ratio<1l, 1l> > const&)+0x26>
			22: R_X86_64_PC32	_ZNSt6chronomiIlSt5ratioILl1ELl1EElS2_EENSt11common_typeIJNS_8durationIT_T0_EENS4_IT1_T2_EEEE4typeERKS7_RKSA_-0x4
  26:	48 8d 7d e0          	lea    -0x20(%rbp),%rdi
  2a:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  2e:	e8 00 00 00 00       	callq  33 <void std::this_thread::sleep_for<long, std::ratio<1l, 1l> >(std::chrono::duration<long, std::ratio<1l, 1l> > const&)+0x33>
			2f: R_X86_64_PC32	_ZNSt6chrono13duration_castINS_8durationIlSt5ratioILl1ELl1000000000EEEElS2_ILl1ELl1EEEENSt9enable_ifIXsr13__is_durationIT_EE5valueES7_E4typeERKNS1_IT0_T1_EE-0x4
  33:	48 8d 7d f0          	lea    -0x10(%rbp),%rdi
  37:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  3b:	e8 00 00 00 00       	callq  40 <void std::this_thread::sleep_for<long, std::ratio<1l, 1l> >(std::chrono::duration<long, std::ratio<1l, 1l> > const&)+0x40>
			3c: R_X86_64_PC32	std::chrono::duration<long, std::ratio<1l, 1l> >::count() const-0x4
  40:	48 8d 7d e8          	lea    -0x18(%rbp),%rdi
  44:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
  48:	e8 00 00 00 00       	callq  4d <void std::this_thread::sleep_for<long, std::ratio<1l, 1l> >(std::chrono::duration<long, std::ratio<1l, 1l> > const&)+0x4d>
			49: R_X86_64_PC32	std::chrono::duration<long, std::ratio<1l, 1000000000l> >::count() const-0x4
  4d:	48 8d 7d d0          	lea    -0x30(%rbp),%rdi
  51:	31 c9                	xor    %ecx,%ecx
  53:	89 ce                	mov    %ecx,%esi
  55:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
  59:	e8 00 00 00 00       	callq  5e <void std::this_thread::sleep_for<long, std::ratio<1l, 1l> >(std::chrono::duration<long, std::ratio<1l, 1l> > const&)+0x5e>
			5a: R_X86_64_PC32	nanosleep-0x4
  5e:	89 45 cc             	mov    %eax,-0x34(%rbp)
  61:	48 83 c4 40          	add    $0x40,%rsp
  65:	5d                   	pop    %rbp
  66:	c3                   	retq   

Disassembly of section .text:

0000000000000000 <std::chrono::duration<long, std::ratio<1l, 1l> >::duration<int, void>(int const&)>:
_ZNSt6chrono8durationIlSt5ratioILl1ELl1EEEC2IivEERKT_():
   0:	55                   	push   %rbp
   1:	48 89 e5             	mov    %rsp,%rbp
   4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   c:	48 8b 75 f8          	mov    -0x8(%rbp),%rsi
  10:	48 8b 7d f0          	mov    -0x10(%rbp),%rdi
  14:	48 63 3f             	movslq (%rdi),%rdi
  17:	48 89 3e             	mov    %rdi,(%rsi)
  1a:	5d                   	pop    %rbp
  1b:	c3                   	retq   

Disassembly of section .text:

0000000000000000 <std::stoi(std::string const&, unsigned long*, int)>:
_ZSt4stoiRKSsPmi():
   0:	55                   	push   %rbp
   1:	48 89 e5             	mov    %rsp,%rbp
   4:	48 83 ec 20          	sub    $0x20,%rsp
   8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  10:	89 55 ec             	mov    %edx,-0x14(%rbp)
  13:	48 8b 7d f8          	mov    -0x8(%rbp),%rdi
  17:	e8 00 00 00 00       	callq  1c <std::stoi(std::string const&, unsigned long*, int)+0x1c>
			18: R_X86_64_PC32	std::string::c_str() const-0x4
  1c:	48 bf 00 00 00 00 00 	movabs $0x0,%rdi
  23:	00 00 00 
			1e: R_X86_64_64	strtol
  26:	48 be 00 00 00 00 00 	movabs $0x0,%rsi
  2d:	00 00 00 
			28: R_X86_64_64	.rodata.str1.1+0x8
  30:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
  34:	44 8b 45 ec          	mov    -0x14(%rbp),%r8d
  38:	48 89 c2             	mov    %rax,%rdx
  3b:	e8 00 00 00 00       	callq  40 <std::stoi(std::string const&, unsigned long*, int)+0x40>
			3c: R_X86_64_PC32	_ZN9__gnu_cxx6__stoaIlicJiEEET0_PFT_PKT1_PPS3_DpT2_EPKcS5_PmS9_-0x4
  40:	48 83 c4 20          	add    $0x20,%rsp
  44:	5d                   	pop    %rbp
  45:	c3                   	retq   

Disassembly of section .text:

0000000000000000 <_ZN9__gnu_cxx6__stoaIlicJiEEET0_PFT_PKT1_PPS3_DpT2_EPKcS5_PmS9_>:
_ZN9__gnu_cxx6__stoaIlicJiEEET0_PFT_PKT1_PPS3_DpT2_EPKcS5_PmS9_():
   0:	55                   	push   %rbp
   1:	48 89 e5             	mov    %rsp,%rbp
   4:	48 83 ec 40          	sub    $0x40,%rsp
   8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  10:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  14:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
  18:	44 89 45 dc          	mov    %r8d,-0x24(%rbp)
  1c:	e8 00 00 00 00       	callq  21 <_ZN9__gnu_cxx6__stoaIlicJiEEET0_PFT_PKT1_PPS3_DpT2_EPKcS5_PmS9_+0x21>
			1d: R_X86_64_PC32	__errno_location-0x4
  21:	48 8d 75 d0          	lea    -0x30(%rbp),%rsi
  25:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
  2b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  2f:	48 8b 7d e8          	mov    -0x18(%rbp),%rdi
  33:	8b 55 dc             	mov    -0x24(%rbp),%edx
  36:	ff d0                	callq  *%rax
  38:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
  3c:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  40:	48 3b 45 e8          	cmp    -0x18(%rbp),%rax
  44:	0f 85 09 00 00 00    	jne    53 <_ZN9__gnu_cxx6__stoaIlicJiEEET0_PFT_PKT1_PPS3_DpT2_EPKcS5_PmS9_+0x53>
  4a:	48 8b 7d f0          	mov    -0x10(%rbp),%rdi
  4e:	e8 00 00 00 00       	callq  53 <_ZN9__gnu_cxx6__stoaIlicJiEEET0_PFT_PKT1_PPS3_DpT2_EPKcS5_PmS9_+0x53>
			4f: R_X86_64_PC32	std::__throw_invalid_argument(char const*)-0x4
  53:	e8 00 00 00 00       	callq  58 <_ZN9__gnu_cxx6__stoaIlicJiEEET0_PFT_PKT1_PPS3_DpT2_EPKcS5_PmS9_+0x58>
			54: R_X86_64_PC32	__errno_location-0x4
  58:	83 38 22             	cmpl   $0x22,(%rax)
  5b:	0f 84 1c 00 00 00    	je     7d <_ZN9__gnu_cxx6__stoaIlicJiEEET0_PFT_PKT1_PPS3_DpT2_EPKcS5_PmS9_+0x7d>
  61:	48 81 7d c8 00 00 00 	cmpq   $0xffffffff80000000,-0x38(%rbp)
  68:	80 
  69:	0f 8c 0e 00 00 00    	jl     7d <_ZN9__gnu_cxx6__stoaIlicJiEEET0_PFT_PKT1_PPS3_DpT2_EPKcS5_PmS9_+0x7d>
  6f:	48 81 7d c8 ff ff ff 	cmpq   $0x7fffffff,-0x38(%rbp)
  76:	7f 
  77:	0f 8e 09 00 00 00    	jle    86 <_ZN9__gnu_cxx6__stoaIlicJiEEET0_PFT_PKT1_PPS3_DpT2_EPKcS5_PmS9_+0x86>
  7d:	48 8b 7d f0          	mov    -0x10(%rbp),%rdi
  81:	e8 00 00 00 00       	callq  86 <_ZN9__gnu_cxx6__stoaIlicJiEEET0_PFT_PKT1_PPS3_DpT2_EPKcS5_PmS9_+0x86>
			82: R_X86_64_PC32	std::__throw_out_of_range(char const*)-0x4
  86:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  8a:	89 c1                	mov    %eax,%ecx
  8c:	89 4d d8             	mov    %ecx,-0x28(%rbp)
  8f:	e9 00 00 00 00       	jmpq   94 <_ZN9__gnu_cxx6__stoaIlicJiEEET0_PFT_PKT1_PPS3_DpT2_EPKcS5_PmS9_+0x94>
  94:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
  99:	0f 84 12 00 00 00    	je     b1 <_ZN9__gnu_cxx6__stoaIlicJiEEET0_PFT_PKT1_PPS3_DpT2_EPKcS5_PmS9_+0xb1>
  9f:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  a3:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
  a7:	48 29 c8             	sub    %rcx,%rax
  aa:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
  ae:	48 89 01             	mov    %rax,(%rcx)
  b1:	8b 45 d8             	mov    -0x28(%rbp),%eax
  b4:	48 83 c4 40          	add    $0x40,%rsp
  b8:	5d                   	pop    %rbp
  b9:	c3                   	retq   

Disassembly of section .text:

0000000000000000 <_ZNSt6chrono13duration_castINS_8durationIlSt5ratioILl1ELl1EEEElS3_EENSt9enable_ifIXsr13__is_durationIT_EE5valueES6_E4typeERKNS1_IT0_T1_EE>:
_ZNSt6chrono13duration_castINS_8durationIlSt5ratioILl1ELl1EEEElS3_EENSt9enable_ifIXsr13__is_durationIT_EE5valueES6_E4typeERKNS1_IT0_T1_EE():
   0:	55                   	push   %rbp
   1:	48 89 e5             	mov    %rsp,%rbp
   4:	48 83 ec 10          	sub    $0x10,%rsp
   8:	48 89 7d f0          	mov    %rdi,-0x10(%rbp)
   c:	48 8b 7d f0          	mov    -0x10(%rbp),%rdi
  10:	e8 00 00 00 00       	callq  15 <_ZNSt6chrono13duration_castINS_8durationIlSt5ratioILl1ELl1EEEElS3_EENSt9enable_ifIXsr13__is_durationIT_EE5valueES6_E4typeERKNS1_IT0_T1_EE+0x15>
			11: R_X86_64_PC32	std::chrono::duration<long, std::ratio<1l, 1l> > std::chrono::__duration_cast_impl<std::chrono::duration<long, std::ratio<1l, 1l> >, std::ratio<1l, 1l>, long, true, true>::__cast<long, std::ratio<1l, 1l> >(std::chrono::duration<long, std::ratio<1l, 1l> > const&)-0x4
  15:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  19:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  1d:	48 83 c4 10          	add    $0x10,%rsp
  21:	5d                   	pop    %rbp
  22:	c3                   	retq   

Disassembly of section .text:

0000000000000000 <_ZNSt6chrono13duration_castINS_8durationIlSt5ratioILl1ELl1000000000EEEElS2_ILl1ELl1EEEENSt9enable_ifIXsr13__is_durationIT_EE5valueES7_E4typeERKNS1_IT0_T1_EE>:
_ZNSt6chrono13duration_castINS_8durationIlSt5ratioILl1ELl1000000000EEEElS2_ILl1ELl1EEEENSt9enable_ifIXsr13__is_durationIT_EE5valueES7_E4typeERKNS1_IT0_T1_EE():
   0:	55                   	push   %rbp
   1:	48 89 e5             	mov    %rsp,%rbp
   4:	48 83 ec 10          	sub    $0x10,%rsp
   8:	48 89 7d f0          	mov    %rdi,-0x10(%rbp)
   c:	48 8b 7d f0          	mov    -0x10(%rbp),%rdi
  10:	e8 00 00 00 00       	callq  15 <_ZNSt6chrono13duration_castINS_8durationIlSt5ratioILl1ELl1000000000EEEElS2_ILl1ELl1EEEENSt9enable_ifIXsr13__is_durationIT_EE5valueES7_E4typeERKNS1_IT0_T1_EE+0x15>
			11: R_X86_64_PC32	std::chrono::duration<long, std::ratio<1l, 1000000000l> > std::chrono::__duration_cast_impl<std::chrono::duration<long, std::ratio<1l, 1000000000l> >, std::ratio<1000000000l, 1l>, long, false, true>::__cast<long, std::ratio<1l, 1l> >(std::chrono::duration<long, std::ratio<1l, 1l> > const&)-0x4
  15:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  19:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  1d:	48 83 c4 10          	add    $0x10,%rsp
  21:	5d                   	pop    %rbp
  22:	c3                   	retq   

Disassembly of section .text:

0000000000000000 <_ZNSt6chronomiIlSt5ratioILl1ELl1EElS2_EENSt11common_typeIJNS_8durationIT_T0_EENS4_IT1_T2_EEEE4typeERKS7_RKSA_>:
_ZNSt6chronomiIlSt5ratioILl1ELl1EElS2_EENSt11common_typeIJNS_8durationIT_T0_EENS4_IT1_T2_EEEE4typeERKS7_RKSA_():
   0:	55                   	push   %rbp
   1:	48 89 e5             	mov    %rsp,%rbp
   4:	48 83 ec 40          	sub    $0x40,%rsp
   8:	48 8d 45 d8          	lea    -0x28(%rbp),%rax
   c:	48 89 7d f0          	mov    %rdi,-0x10(%rbp)
  10:	48 89 75 e8          	mov    %rsi,-0x18(%rbp)
  14:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
  18:	48 8b 36             	mov    (%rsi),%rsi
  1b:	48 89 75 d8          	mov    %rsi,-0x28(%rbp)
  1f:	48 89 c7             	mov    %rax,%rdi
  22:	e8 00 00 00 00       	callq  27 <_ZNSt6chronomiIlSt5ratioILl1ELl1EElS2_EENSt11common_typeIJNS_8durationIT_T0_EENS4_IT1_T2_EEEE4typeERKS7_RKSA_+0x27>
			23: R_X86_64_PC32	std::chrono::duration<long, std::ratio<1l, 1l> >::count() const-0x4
  27:	48 8d 7d d0          	lea    -0x30(%rbp),%rdi
  2b:	48 8b 75 e8          	mov    -0x18(%rbp),%rsi
  2f:	48 8b 36             	mov    (%rsi),%rsi
  32:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
  36:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
  3a:	e8 00 00 00 00       	callq  3f <_ZNSt6chronomiIlSt5ratioILl1ELl1EElS2_EENSt11common_typeIJNS_8durationIT_T0_EENS4_IT1_T2_EEEE4typeERKS7_RKSA_+0x3f>
			3b: R_X86_64_PC32	std::chrono::duration<long, std::ratio<1l, 1l> >::count() const-0x4
  3f:	48 8d 7d f8          	lea    -0x8(%rbp),%rdi
  43:	48 8d 75 e0          	lea    -0x20(%rbp),%rsi
  47:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
  4b:	48 29 c1             	sub    %rax,%rcx
  4e:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
  52:	e8 00 00 00 00       	callq  57 <_ZNSt6chronomiIlSt5ratioILl1ELl1EElS2_EENSt11common_typeIJNS_8durationIT_T0_EENS4_IT1_T2_EEEE4typeERKS7_RKSA_+0x57>
			53: R_X86_64_PC32	std::chrono::duration<long, std::ratio<1l, 1l> >::duration<long, void>(long const&)-0x4
  57:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  5b:	48 83 c4 40          	add    $0x40,%rsp
  5f:	5d                   	pop    %rbp
  60:	c3                   	retq   

Disassembly of section .text:

0000000000000000 <std::chrono::duration<long, std::ratio<1l, 1l> >::count() const>:
_ZNKSt6chrono8durationIlSt5ratioILl1ELl1EEE5countEv():
   0:	55                   	push   %rbp
   1:	48 89 e5             	mov    %rsp,%rbp
   4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   8:	48 8b 7d f8          	mov    -0x8(%rbp),%rdi
   c:	48 8b 07             	mov    (%rdi),%rax
   f:	5d                   	pop    %rbp
  10:	c3                   	retq   

Disassembly of section .text:

0000000000000000 <std::chrono::duration<long, std::ratio<1l, 1000000000l> >::count() const>:
_ZNKSt6chrono8durationIlSt5ratioILl1ELl1000000000EEE5countEv():
   0:	55                   	push   %rbp
   1:	48 89 e5             	mov    %rsp,%rbp
   4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   8:	48 8b 7d f8          	mov    -0x8(%rbp),%rdi
   c:	48 8b 07             	mov    (%rdi),%rax
   f:	5d                   	pop    %rbp
  10:	c3                   	retq   

Disassembly of section .text:

0000000000000000 <std::chrono::duration<long, std::ratio<1l, 1l> > std::chrono::__duration_cast_impl<std::chrono::duration<long, std::ratio<1l, 1l> >, std::ratio<1l, 1l>, long, true, true>::__cast<long, std::ratio<1l, 1l> >(std::chrono::duration<long, std::ratio<1l, 1l> > const&)>:
_ZNSt6chrono20__duration_cast_implINS_8durationIlSt5ratioILl1ELl1EEEES3_lLb1ELb1EE6__castIlS3_EES4_RKNS1_IT_T0_EE():
   0:	55                   	push   %rbp
   1:	48 89 e5             	mov    %rsp,%rbp
   4:	48 83 ec 20          	sub    $0x20,%rsp
   8:	48 89 7d f0          	mov    %rdi,-0x10(%rbp)
   c:	48 8b 7d f0          	mov    -0x10(%rbp),%rdi
  10:	e8 00 00 00 00       	callq  15 <std::chrono::duration<long, std::ratio<1l, 1l> > std::chrono::__duration_cast_impl<std::chrono::duration<long, std::ratio<1l, 1l> >, std::ratio<1l, 1l>, long, true, true>::__cast<long, std::ratio<1l, 1l> >(std::chrono::duration<long, std::ratio<1l, 1l> > const&)+0x15>
			11: R_X86_64_PC32	std::chrono::duration<long, std::ratio<1l, 1l> >::count() const-0x4
  15:	48 8d 7d f8          	lea    -0x8(%rbp),%rdi
  19:	48 8d 75 e8          	lea    -0x18(%rbp),%rsi
  1d:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  21:	e8 00 00 00 00       	callq  26 <std::chrono::duration<long, std::ratio<1l, 1l> > std::chrono::__duration_cast_impl<std::chrono::duration<long, std::ratio<1l, 1l> >, std::ratio<1l, 1l>, long, true, true>::__cast<long, std::ratio<1l, 1l> >(std::chrono::duration<long, std::ratio<1l, 1l> > const&)+0x26>
			22: R_X86_64_PC32	std::chrono::duration<long, std::ratio<1l, 1l> >::duration<long, void>(long const&)-0x4
  26:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  2a:	48 83 c4 20          	add    $0x20,%rsp
  2e:	5d                   	pop    %rbp
  2f:	c3                   	retq   

Disassembly of section .text:

0000000000000000 <std::chrono::duration<long, std::ratio<1l, 1l> >::duration<long, void>(long const&)>:
_ZNSt6chrono8durationIlSt5ratioILl1ELl1EEEC2IlvEERKT_():
   0:	55                   	push   %rbp
   1:	48 89 e5             	mov    %rsp,%rbp
   4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   c:	48 8b 75 f8          	mov    -0x8(%rbp),%rsi
  10:	48 8b 7d f0          	mov    -0x10(%rbp),%rdi
  14:	48 8b 3f             	mov    (%rdi),%rdi
  17:	48 89 3e             	mov    %rdi,(%rsi)
  1a:	5d                   	pop    %rbp
  1b:	c3                   	retq   

Disassembly of section .text:

0000000000000000 <std::chrono::duration<long, std::ratio<1l, 1000000000l> > std::chrono::__duration_cast_impl<std::chrono::duration<long, std::ratio<1l, 1000000000l> >, std::ratio<1000000000l, 1l>, long, false, true>::__cast<long, std::ratio<1l, 1l> >(std::chrono::duration<long, std::ratio<1l, 1l> > const&)>:
_ZNSt6chrono20__duration_cast_implINS_8durationIlSt5ratioILl1ELl1000000000EEEES2_ILl1000000000ELl1EElLb0ELb1EE6__castIlS2_ILl1ELl1EEEES4_RKNS1_IT_T0_EE():
   0:	55                   	push   %rbp
   1:	48 89 e5             	mov    %rsp,%rbp
   4:	48 83 ec 20          	sub    $0x20,%rsp
   8:	48 89 7d f0          	mov    %rdi,-0x10(%rbp)
   c:	48 8b 7d f0          	mov    -0x10(%rbp),%rdi
  10:	e8 00 00 00 00       	callq  15 <std::chrono::duration<long, std::ratio<1l, 1000000000l> > std::chrono::__duration_cast_impl<std::chrono::duration<long, std::ratio<1l, 1000000000l> >, std::ratio<1000000000l, 1l>, long, false, true>::__cast<long, std::ratio<1l, 1l> >(std::chrono::duration<long, std::ratio<1l, 1l> > const&)+0x15>
			11: R_X86_64_PC32	std::chrono::duration<long, std::ratio<1l, 1l> >::count() const-0x4
  15:	48 8d 7d f8          	lea    -0x8(%rbp),%rdi
  19:	48 8d 75 e8          	lea    -0x18(%rbp),%rsi
  1d:	48 69 c0 00 ca 9a 3b 	imul   $0x3b9aca00,%rax,%rax
  24:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  28:	e8 00 00 00 00       	callq  2d <std::chrono::duration<long, std::ratio<1l, 1000000000l> > std::chrono::__duration_cast_impl<std::chrono::duration<long, std::ratio<1l, 1000000000l> >, std::ratio<1000000000l, 1l>, long, false, true>::__cast<long, std::ratio<1l, 1l> >(std::chrono::duration<long, std::ratio<1l, 1l> > const&)+0x2d>
			29: R_X86_64_PC32	std::chrono::duration<long, std::ratio<1l, 1000000000l> >::duration<long, void>(long const&)-0x4
  2d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  31:	48 83 c4 20          	add    $0x20,%rsp
  35:	5d                   	pop    %rbp
  36:	c3                   	retq   

Disassembly of section .text:

0000000000000000 <std::chrono::duration<long, std::ratio<1l, 1000000000l> >::duration<long, void>(long const&)>:
_ZNSt6chrono8durationIlSt5ratioILl1ELl1000000000EEEC2IlvEERKT_():
   0:	55                   	push   %rbp
   1:	48 89 e5             	mov    %rsp,%rbp
   4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   c:	48 8b 75 f8          	mov    -0x8(%rbp),%rsi
  10:	48 8b 7d f0          	mov    -0x10(%rbp),%rdi
  14:	48 8b 3f             	mov    (%rdi),%rdi
  17:	48 89 3e             	mov    %rdi,(%rsi)
  1a:	5d                   	pop    %rbp
  1b:	c3                   	retq   
